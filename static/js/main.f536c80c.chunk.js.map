{"version":3,"sources":["stitches.ts","hooks/useOnChange.ts","hooks/useHandler.ts","hooks/useLatest.ts","hooks/useWindowEvent.ts","common/types.ts","hooks/useRefState.ts","common/data.ts","common/common.ts","components/TruthTable/TruthTable.tsx","components/SchemaErrors/SchemaErrors.tsx","components/Emulator/elements.tsx","components/Emulator/Emulator.tsx","hooks/useForceUpdate.ts","utils/canvas.ts","components/App/App.tsx","index.tsx"],"names":["createStitches","theme","colors","gray400","gray500","media","bp1","bp2","utils","fontVariant","value","split","size","lineHeight","fontSize","styled","css","globalCss","keyframes","getCssText","createTheme","config","useOnChange","callback","deps","initRef","useRef","useEffect","current","useHandler","callbackRef","some","ref","useLatest","useCallback","useWindowEvent","eventName","func","window","addEventListener","removeEventListener","ElementType","useRefState","elementsDescriptions","PNP","pins","pos","x","y","NPN","POWER","GROUND","INPUT","OUTPUT","DOT","INPUT_LITERALS","OUTPUT_LITERALS","getLiteralForSignal","elements","element","isVector","index","indexOf","charVariants","type","length","charAt","_Table","textAlign","fontWeight","_Options","display","flexDirection","marginBottom","_Option","userSelect","cursor","TruthTable","options","onOptionsChange","useMemo","inputs","filter","el","outputs","renderInputs","renderOutputs","isInputVector","reverse","isOutputVector","checked","onChange","e","target","map","i","Array","from","rowIndex","cellIndex","Math","floor","_Title","margin","SchemaErrors","state","errors","used","connections","connection","p","elId","id","pinIndex","push","line","LoadingStatus","NodeType","_App","position","alignItems","flexGrow","width","height","overflow","_Panel","gap","top","left","padding","borderRadius","_CanvasWrapper","_Canvas","variants","enableScaling","true","transformOrigin","transform","_Button","flexShrink","border","color","background","whiteSpace","appearance","_Divider","_Space","_Yes","_No","_Info","flexBasis","borderLeft","overflowYy","ICON_SIZE","subtract","p1","p2","rotate","point","a","sinA","sin","cosA","cos","getNextId","lastElement","match","Error","parseInt","yesNo","Emulator","draw","gameId","canvasRef","canvasWrapperRef","forceUpdate","incRef","useState","setInc","useForceUpdate","setCursor","setOptions","densityFactor","factor","devicePixelRatio","assets","x1","images","status","NONE","x2","mousePos","hoverElement","undefined","focusElement","movingElement","wireElement","source","mouseState","isMouseDown","panState","isPan","convertScreenCoordsToAppCoords","clearState","loadGameState","json","localStorage","getItem","JSON","parse","savedPos","savedOptions","setTimeout","intervalId","setInterval","clearInterval","getElById","find","deleteElementInFocus","focusTarget","ELEMENT","CONNECTION","splice","connectionIndex","getConnectionPinPosition","pin","actualizeDensityFactor","updateSize","app","canvas","clientWidth","clientHeight","checkOverlap","addElement","loadAssets","is2x","assetsSet","loadImages","remainLoad","LOADING","imgName","image","Image","src","onLoad","DONE","startWiring","ctx","getContext","getCanvasContext","hoverTarget","save","clearRect","scale","translate","lineWidth","textBaseline","font","fillStyle","beginPath","moveTo","lineTo","strokeStyle","stroke","fillText","restore","isHover","isFocus","strokeRect","FOCUS_SIZE","el1","el2","pin1","pin2","isHovered","isInFocus","x0","y0","currentCursor","char","main","fallback","img","drawImage","activePin","isWire","arc","PIN_DOT_RADIUS","PI","closePath","fill","onMouseUp","preventDefault","button","needRepaint","style","onClick","onMouseDown","onMouseMove","clientX","clientY","flag","hoverFound","hoverConnectionFound","point1","shiftedPoint2","shiftedMouse","atan2","rotatedPoint2","rotatedMouse","checkHover","isMoving","Boolean","movementX","movementY","onMouseLeave","resetCursorState","onContextMenu","disabled","setItem","stringify","console","info","href","update","_Wrapper","_GameTitle","_RemoveButton","marginLeft","getCurrentGameId","allowedIds","hash","location","trim","replace","includes","App","savedGames","currentGames","setCurrentGames","currentGameId","setCurrentGameId","confirm","removeItem","newGameId","lastId","getNextGameId","assign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAWIA,YAAe,CACjBC,MAAO,CACLC,OAAQ,CACNC,QAAS,YACTC,QAAS,cAGbC,MAAO,CACLC,IAAK,qBACLC,IAAK,sBAEPC,MAAO,CACLC,YAAa,SAACC,GAAkC,IAAD,EAClBA,EAAMC,MAAM,KADM,mBACtCC,EADsC,KAChCC,EADgC,KAG7C,MAAO,CACLC,SAAS,GAAD,OAAKF,EAAL,MACRC,WAAW,GAAD,OAAKA,EAAL,WAzBhBE,E,EAAAA,O,EACAC,I,EACAC,U,EACAC,U,EACAC,W,EACAlB,M,EACAmB,Y,EACAC,OCRK,SAASC,EAAYC,EAAsBC,GAChD,IAAMC,EAAUC,kBAAO,GAEvBC,qBAAU,WACHF,EAAQG,QAKbL,IAJEE,EAAQG,SAAU,IAMnBJ,GCTE,SAASK,EAA4CN,GAC1D,IAAMO,ECHD,SAAsBC,GAC3B,IAAMC,EAAMN,iBAAOK,GAEnB,OADAC,EAAIJ,QAAUG,EACPC,EDAaC,CAAaV,GAGjC,OAAOW,uBAEJ,kBAAkBJ,EAAYF,QAAZ,MAAAE,EAAW,aAC9B,IEPG,SAASK,EACdC,EACAb,GAEA,IAAMc,EAAOR,EAAWN,GAExBI,qBAAU,WAGR,OAFAW,OAAOC,iBAAiBH,EAAWC,GAAM,GAElC,WACLC,OAAOE,oBAAoBJ,EAAWC,GAAM,MAE7C,CAACD,EAAWC,I,ICdLI,E,cCAL,SAASC,EAAehC,GAE7B,OADYgB,iBAAUhB,GACXkB,S,SDFDa,K,UAAAA,E,UAAAA,E,cAAAA,E,gBAAAA,E,cAAAA,E,gBAAAA,E,WAAAA,M,kBEACE,GAA6D,mBACvEF,EAAYG,IAAM,CACjBC,KAAM,CACJ,CAAEC,IAAK,CAAEC,EAAG,IAAMC,EAAG,MACrB,CAAEF,IAAK,CAAEC,GAAI,IAAMC,EAAG,MACtB,CAAEF,IAAK,CAAEC,EAAG,KAAMC,EAAG,SAL+C,cAQvEP,EAAYQ,IAAM,CACjBJ,KAAM,CACJ,CAAEC,IAAK,CAAEC,EAAG,IAAMC,EAAG,IACrB,CAAEF,IAAK,CAAEC,GAAI,IAAMC,EAAG,MACtB,CAAEF,IAAK,CAAEC,EAAG,KAAMC,EAAG,SAZ+C,cAevEP,EAAYS,MAAQ,CACnBL,KAAM,CAAC,CAAEC,IAAK,CAAEC,EAAG,IAAMC,EAAG,QAhB0C,cAkBvEP,EAAYU,OAAS,CACpBN,KAAM,CAAC,CAAEC,IAAK,CAAEC,EAAG,IAAMC,EAAG,SAnB0C,cAqBvEP,EAAYW,MAAQ,CACnBP,KAAM,CAAC,CAAEC,IAAK,CAAEC,EAAG,GAAKC,EAAG,QAtB2C,cAwBvEP,EAAYY,OAAS,CACpBR,KAAM,CAAC,CAAEC,IAAK,CAAEC,EAAG,GAAKC,EAAG,QAzB2C,cA2BvEP,EAAYa,IAAM,CACjBT,KAAM,CAAC,CAAEC,IAAK,CAAEC,EAAG,GAAKC,EAAG,QA5B2C,GCApEO,EAAiB,aACjBC,EAAkB,aAEjB,SAASC,EACdC,EACAC,GAES,IADTC,EACQ,wDACFC,EAAQH,EAASI,QAAQH,GAEzBI,EACJJ,EAAQK,OAASvB,EAAYW,MAAQG,EAAiBC,EAExD,OAAKI,GAAYF,EAASO,QAAUF,EAAaE,OACxCF,EAAaG,OAAOL,GAGtBF,EAAQK,OAASvB,EAAYW,MAA7B,WAAyCS,GAAzC,WAAuDA,G,WCb1DM,EAASpD,EAAO,QAAS,CAC7B,oBAAqB,CACnBqD,UAAW,SACXC,WAAY,KAEd,oBAAqB,CACnBD,UAAW,SACXC,WAAY,OAIVC,EAAWvD,EAAO,MAAO,CAC7BwD,QAAS,OACTC,cAAe,SACfC,aAAc,KAGVC,EAAU3D,EAAO,QAAS,CAC9B4D,WAAY,OAEZ,yBAA0B,CACxBC,OAAQ,aAUL,SAASC,EAAT,GAAoE,IAA9CnB,EAA6C,EAA7CA,SAAUoB,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,gBAA0B,EACfC,mBAAQ,WAC/D,IAAMC,EAASvB,EAASwB,QAAO,SAACC,GAAD,OAAQA,EAAGnB,OAASvB,EAAYW,SACzDgC,EAAU1B,EAASwB,QAAO,SAACC,GAAD,OAAQA,EAAGnB,OAASvB,EAAYY,UAE5DgC,EAAeJ,EACfK,EAAgBF,EAUpB,OARIN,EAAQS,gBACVF,EAAe,YAAIJ,GAAQO,WAGzBV,EAAQW,iBACVH,EAAgB,YAAIF,GAASI,WAGxB,CACLP,SACAG,UACAC,eACAC,mBAGD,CACD5B,EACAA,EAASO,OACTa,EAAQS,cACRT,EAAQW,iBA1BFR,EADgE,EAChEA,OAAQG,EADwD,EACxDA,QAASC,EAD+C,EAC/CA,aAAcC,EADiC,EACjCA,cA6BvC,OACE,gCACE,eAAChB,EAAD,WACE,eAACI,EAAD,WACE,uBACEV,KAAK,WACL0B,QAASZ,EAAQS,cACjBI,SAAU,SAACC,GACTb,EAAgB,CACdQ,cAAeK,EAAEC,OAAOH,aAG3B,IATL,2BAYA,eAAChB,EAAD,WACE,uBACEV,KAAK,WACL0B,QAASZ,EAAQW,eACjBE,SAAU,SAACC,GACTb,EAAgB,CACdU,eAAgBG,EAAEC,OAAOH,aAG5B,IATL,+BAaF,eAACvB,EAAD,WACE,gCACE,+BACGkB,EAAaS,KAAI,SAACX,EAAIY,GAAL,OAChB,6BACGtC,EAAoBwB,EAAQE,EAAIL,EAAQS,gBADlCQ,MAIVT,EAAcQ,KAAI,SAACX,EAAIY,GAAL,OACjB,6BACGtC,EAAoB2B,EAASD,EAAIL,EAAQW,iBADnCM,WAMf,gCACGC,MAAMC,KAAK,CAAEhC,OAAO,KAAD,IAAE,EAAKgB,EAAOhB,UAAU6B,KAAI,SAACX,EAAIe,GAAL,OAC9C,+BACGb,EAAaS,KAAI,SAACpF,EAAOyF,GAAR,OAChB,6BACGC,KAAKC,MAAMH,EAAQ,SAAG,EAAMjB,EAAOhB,OAASkC,EAAY,IACvD,GAFKA,MAKVb,EAAcQ,KAAI,SAACpF,EAAOqF,GAAR,OACjB,kCAASA,QARJG,cC3GrB,IAAMI,EAASvF,EAAO,KAAM,CAC1BwF,OAAQ,IAOH,SAASC,EAAT,GAAyC,IAAD,EAAhBC,EAAgB,EAAhBA,MACvBC,EAAS,GAD8B,cAG5BD,EAAM/C,UAHsB,IAG7C,2BAAiC,CAAC,IAAD,EAAtByB,EAAsB,QAEzBwB,EADWhE,EAAqBwC,EAAGnB,MAAjCnB,KACUiD,KAAI,kBAAM,KAFG,cAINW,EAAMG,aAJA,IAI/B,2BAA4C,CAAC,IAAD,EAAjCC,EAAiC,sBAC1BA,GAD0B,IAC1C,2BAA4B,CAAC,IAAlBC,EAAiB,QACtBA,EAAEC,OAAS5B,EAAG6B,KAChBL,EAAKG,EAAEG,WAAY,IAHmB,gCAJb,8BAY3BN,EAAK5E,MAAK,SAACrB,GAAD,OAAYA,MACxBgG,EAAOQ,KAAP,gCAAqC/B,EAAGnB,QAhBC,8BAoB7C,OAAK0C,EAAOzC,OAKV,gCACE,cAACqC,EAAD,sBACCI,EAAOZ,KAAI,SAACqB,EAAMpB,GAAP,OACV,8BAAcoB,GAAJpB,SAPP,KChCJ,ICuFFqB,EAWAC,EDlGQC,EAAOvG,EAAO,OAAQ,CACjCwG,SAAU,WACVhD,QAAS,OACTiD,WAAY,UACZC,SAAU,EACVC,MAAO,OACPC,OAAQ,OACRC,SAAU,WAGCC,EAAS9G,EAAO,MAAO,CAClCwG,SAAU,WACVhD,QAAS,OACTC,cAAe,SACfsD,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,QAAS,EACTC,aAAc,IAGHC,EAAiBpH,EAAO,MAAO,CAC1C0G,SAAU,EACVG,SAAU,WAGCQ,EAAUrH,EAAO,SAAU,CACtCwD,QAAS,QACTK,OAAQ,OAERyD,SAAU,CACRC,cAAe,CACbC,KAAM,CACJC,gBAAiB,MACjBC,UAAW,+BAMNC,EAAU3H,EAAO,SAAU,CACtC2G,MAAO,GACPC,OAAQ,GACRgB,WAAY,EACZC,OAAQ,OACRC,MAAO,OACPC,WAAY,UACZC,WAAY,SACZC,WAAY,OAEZ,aAAc,CACZH,MAAO,QAGT,mBAAoB,CAClBjE,OAAQ,aAICqE,EAAWlI,EAAO,OAAQ,CACrC4G,OAAQ,IAGGuB,EAASnI,EAAO,OAAQ,CACnC0G,SAAU,IAGC0B,EAAOpI,EAAO,OAAQ,CACjC8H,MAAO,YAGIO,EAAMrI,EAAO,OAAQ,CAChC8H,MAAO,SAGIQ,EAAQtI,EAAO,MAAO,CACjCwD,QAAS,OAET,OAAQ,CACNA,QAAS,OACToE,WAAY,EACZnE,cAAe,SACf8E,UAAW,IACXrB,QAAS,YACTsB,WAAY,iBACZT,WAAY,OACZlB,SAAU,SACV4B,WAAY,OAEZ,uBAAwB,CACtB/E,aAAc,OCxDdgF,EAAY,GAalB,SAASC,EAASC,EAAWC,GAC3B,MAAO,CACL7G,EAAG4G,EAAG5G,EAAI6G,EAAG7G,EACbC,EAAG2G,EAAG3G,EAAI4G,EAAG5G,GAIjB,SAAS6G,EAAOC,EAAcC,GAC5B,IAAMC,EAAO5D,KAAK6D,IAAIF,GAChBG,EAAO9D,KAAK+D,IAAIJ,GAEtB,MAAO,CACLhH,EAAG+G,EAAM/G,EAAImH,EAAOJ,EAAM9G,EAAIgH,EAC9BhH,EAAG8G,EAAM/G,EAAIiH,EAAOF,EAAM9G,EAAIkH,GAIlC,SAASE,EAAU3D,GACjB,IAAM4D,EAAc5D,EAAM/C,SAAS+C,EAAM/C,SAASO,OAAS,GAE3D,IAAKoG,EACH,MAAM,MAGR,IAAMC,EAAQD,EAAYrD,GAAGsD,MAAM,aAEnC,IAAKA,EACH,MAAM,IAAIC,MAGZ,MAAM,KAAN,OAAYC,SAASF,EAAM,GAAI,IAAM,GAGvC,SAASG,EAAM/J,GACb,OAAIA,EACK,cAACyI,EAAD,kBAEF,cAACC,EAAD,iBAuBF,SAASsB,EAAT,GAAsC,IAAD,EAwEtCC,EAxEqBC,EAAiB,EAAjBA,OACnBC,EAAYnJ,iBAA0B,MACtCoJ,EAAmBpJ,iBAAuB,MAC1CqJ,EC9GD,WACL,IAAMC,EAAStJ,iBAAO,GADS,EAEZuJ,mBAASD,EAAOpJ,SAA1BsJ,EAFsB,oBAI/B,OAAOhJ,uBAAY,WACjB8I,EAAOpJ,SAAW,EAClBsJ,EAAOF,EAAOpJ,WACb,IDuGiBuJ,GAHsB,EAIdF,qBAJc,mBAInCrG,EAJmC,KAI3BwG,EAJ2B,OAKZH,mBAAkB,CAC9C1F,eAAe,EACfE,gBAAgB,IAPwB,mBAKnCX,EALmC,KAK1BuG,EAL0B,KASpCC,EAAgB5I,EAAY,CAAE6I,OAAM,UAAEjJ,OAAOkJ,wBAAT,QAA6B,IAEjE5K,EAAO8B,EAAY,CAAEgF,MAAO,EAAGC,OAAQ,IACvC7E,EAAMJ,EAAY,CAAEK,EAAG,EAAGC,EAAG,IAC7ByI,EAAS/I,EAGZ,CACDgJ,GAAI,CAAEC,OAAQ,GAAIC,OAAQxE,EAAcyE,MACxCC,GAAI,CAAEH,OAAQ,GAAIC,OAAQxE,EAAcyE,QAEpCE,EAAWrJ,EAAY,CAAEK,EAAG,EAAGC,EAAG,IAClCgJ,EAAetJ,EAYlB,CACDmD,YAAQoG,IAEJC,EAAexJ,EAWlB,CAAEmD,YAAQoG,IACPE,EAAgBzJ,EAEnB,CACDmD,YAAQoG,IAEJG,EAAc1J,EAEjB,CACD2J,YAAQJ,IAEJxF,EAAQ/D,EAAuB,CACnCgB,SAAU,GACVkD,YAAa,KAET0F,GAAa5J,EAAY,CAAE6J,aAAa,IACxCC,GAAW9J,EAAY,CAAE+J,OAAO,IAEtC,SAASC,GAAT,GAAmE,IAAzB3J,EAAwB,EAAxBA,EAAGC,EAAqB,EAArBA,EAC3C,MAAO,CACLD,EAAGA,EAAInC,EAAK8G,MAAQ,EAAI5E,EAAIC,EAC5BC,EAAGA,EAAIpC,EAAK+G,OAAS,EAAI7E,EAAIE,GAMjC,SAAS2J,KACP7J,EAAIC,EAAI,EACRD,EAAIE,EAAI,EACRyD,EAAM/C,SAAW,GACjB+C,EAAMG,YAAc,GACpBoF,EAAanG,YAASoG,EACtBC,EAAarG,YAASoG,EACtBE,EAActG,YAASoG,EACvBG,EAAYC,YAASJ,EACrBO,GAASC,OAAQ,EACjBH,GAAWC,aAAc,EAG3B,IAAMK,GAAgB/K,GAAW,WAC/B,IAAMgL,EAAOC,aAAaC,QAAb,mBAAiCnC,IAE9C,GAAKiC,EAAL,CAHqC,MAYjCG,KAAKC,MAAMJ,GAJRK,EAR8B,EAQnCpK,IACAY,EATmC,EASnCA,SACAkD,EAVmC,EAUnCA,YACSuG,EAX0B,EAWnCrI,QAGF6H,KAEA7J,EAAIC,EAAImK,EAASnK,EACjBD,EAAIE,EAAIkK,EAASlK,EACjByD,EAAM/C,SAAWA,EACjB+C,EAAMG,YAAcA,EAEpByE,EAAW8B,GAEX7K,OAAO8K,WAAWzC,EAAM,OAG1BhJ,qBAAU,WACRiL,KAEA,IAAMS,EAAa/K,OAAOgL,YAAYvC,EAAa,KAEnD,OAAO,WACLzI,OAAOiL,cAAcF,MAGtB,IAOH,IAAMG,GAAY3L,GAAW,SAACmF,GAC5B,IAAM7B,EAAKsB,EAAM/C,SAAS+J,MAAK,SAACtI,GAAD,OAAQA,EAAG6B,KAAOA,KAEjD,IAAK7B,EACH,MAAM,IAAIoF,MAAM,qBAGlB,OAAOpF,KAGHuI,GAAuB7L,GAAW,WACtC,IAAM8L,EAAczB,EAAarG,OAEjC,GAAK8H,EAAL,CAIA,OAAQA,EAAY3J,MAClB,KAAKqD,EAASuG,QACZnH,EAAMG,YAAcH,EAAMG,YAAY1B,QACpC,mCAAEyE,EAAF,KAAMC,EAAN,YACED,EAAG5C,OAAS4G,EAAY5G,MAAQ6C,EAAG7C,OAAS4G,EAAY5G,QAG5DN,EAAM/C,SAAW+C,EAAM/C,SAASwB,QAC9B,SAACC,GAAD,OAAQA,EAAG6B,KAAO2G,EAAY5G,QAEhC,MACF,KAAKM,EAASwG,WACZpH,EAAMG,YAAYkH,OAAOH,EAAYI,gBAAiB,GAI1D7B,EAAarG,YAASoG,EACtBtB,QAqQF,SAASqD,GAAT,GAMY,IALVjH,EAKS,EALTA,KACAE,EAIS,EAJTA,SAKM9B,EAAKqI,GAAUzG,GAEfkH,EAAMtL,EAAqBwC,EAAGnB,MAAMnB,KAAKoE,GAE/C,MAAO,CACLlE,EAAGoC,EAAGrC,IAAIC,GAAKkL,EAAInL,IAAIC,EAAI,IAAO0G,EAClCzG,EAAGmC,EAAGrC,IAAIE,GAAKiL,EAAInL,IAAIE,EAAI,IAAOyG,GA+HtC,SAASyE,KAA0B,IAAD,EAC1B3C,EAAM,UAAGjJ,OAAOkJ,wBAAV,QAA8B,EAEtCF,EAAcC,SAAWA,IAC3BD,EAAcC,OAASA,EACvBR,KAIJ,SAASoD,KACP,IAAMC,EAAMtD,EAAiBlJ,QACvByM,EAASxD,EAAUjJ,QAEzB,IAAKwM,IAAQC,EACX,MAAM,IAAI9D,MAGR3J,EAAK8G,QAAU0G,EAAIE,aAAe1N,EAAK+G,SAAWyG,EAAIG,eACxD3N,EAAK8G,MAAQ0G,EAAIE,YACjB1N,EAAK+G,OAASyG,EAAIG,aAElBF,EAAO3G,MAAQ9G,EAAK8G,MAAQ4D,EAAcC,OAC1C8C,EAAO1G,OAAS/G,EAAK+G,OAAS2D,EAAcC,OAE5CZ,KAIJ,SAAS6D,GAAa1E,GAAyB,IAAD,gBACtBrD,EAAM/C,UADgB,IAC5C,2BAAsC,CAAC,IAA1BZ,EAAyB,QAAzBA,IACX,GACE,SAACA,EAAIC,EAAI+G,EAAM/G,EAAM,GAArB,SAA0BD,EAAIE,EAAI8G,EAAM9G,EAAM,GAA9C,SACCyG,GAAkB,GAEnB,OAAO,GANiC,8BAU5C,OAAO,EAGT,SAASgF,GAAWzK,GAMlB,IALA,IAAMlB,EAAM4J,GAA+B,CACzC3J,EAAGnC,EAAK8G,MAAQ,EAChB1E,EAAGpC,EAAK+G,OAAS,IAGZ6G,GAAa1L,IAClBA,EAAIC,GAAK0G,GAGXhD,EAAM/C,SAASwD,KAAK,CAClBlD,OACAgD,GAAIoD,EAAU3D,GACd3D,QAEF6H,IAGF,SAAS+D,KACP,IAAMC,EAAOrD,EAAcC,OAAS,IAE9BqD,EAAYnD,EAAOkD,EAAO,KAAO,MAEvC,GAAIC,EAAUhD,SAAWxE,EAAcyE,KAAvC,CAIA,IAAMgD,EAAa,CACjBpM,EAAYG,IACZH,EAAYQ,IACZR,EAAYS,MACZT,EAAYU,QAGV2L,EAAaD,EAAW5K,OAW5B2K,EAAUhD,OAASxE,EAAc2H,QAEjC,IA7BoB,iBA6Bf,IAAMC,EAAO,KACVC,EAAQ,IAAIC,MAClBD,EAAME,IAAN,iBAAsBH,GAAtB,OAAgCL,EAAO,MAAQ,GAA/C,QACAM,EAAM1M,iBAAiB,QAAQ,WAC7BqM,EAAUjD,OAAOqD,GAAWC,EAC5BG,OAEFH,EAAM1M,iBAAiB,QAAS6M,IAPlC,MAAsBP,EAAtB,eAAmC,IAXnC,SAASO,IAGY,KAFnBN,GAAc,KAGZF,EAAUhD,OAASxE,EAAciI,KACjC1E,MA2DN,SAAS2E,GAAT,GAMI,IALFvI,EAKC,EALDA,KACAE,EAIC,EAJDA,SAKAiF,EAAarG,OAAS,CAAE7B,KAAMqD,EAASuG,QAAS7G,QAChDqF,EAAYC,OAAS,CACnBtF,OACAE,YAriBJ0D,EAAO9I,GAAW,WAChB,GAAmB,IAAfjB,EAAK8G,MAAT,CAIA,IAAM6H,EExRH,SACLlB,GAEA,IAAKA,EACH,MAAM,IAAI9D,MAGZ,IAAMgF,EAAMlB,EAAOmB,WAAW,MAE9B,IAAKD,EACH,MAAM,IAAIhF,MAGZ,OAAOgF,EF2QOE,CAAiB5E,EAAUjJ,SAEvCsM,KAPsB,IAQd3C,EAAWD,EAAXC,OAEFmE,EAAc1D,EAAanG,OAEjC0J,EAAII,OACJJ,EAAIK,UAAU,EAAG,EAAGhP,EAAK8G,MAAQ6D,EAAQ3K,EAAK+G,OAAS4D,GAExC,IAAXA,GACFgE,EAAIM,MAAMtE,EAAQA,GAGpBgE,EAAIO,UACF1J,KAAKC,MAAMzF,EAAK8G,MAAQ,GAAK5E,EAAIC,EACjCqD,KAAKC,MAAMzF,EAAK+G,OAAS,GAAK7E,EAAIE,GAGpCuM,EAAII,OAEJJ,EAAIQ,UAAY,EAChBR,EAAIS,aAAe,SACnBT,EAAInL,UAAY,SAChBmL,EAAIU,KAAO,kBACXV,EAAIW,UAAY,OAChBX,EAAIY,YACJZ,EAAIa,OAAO,EAAG,GACdb,EAAIc,OAAO,IAAK,GAChBd,EAAIa,OAAO,IAAK,GAChBb,EAAIc,OAAO,IAAK,GAChBd,EAAIa,OAAO,GAAI,GACfb,EAAIc,OAAO,IAAK,GAChBd,EAAIe,YAAc,OAClBf,EAAIgB,SACJhB,EAAIiB,SAAS,IAAK,GAAI,IAEtBjB,EAAIY,YACJZ,EAAIa,OAAO,EAAG,GACdb,EAAIc,OAAO,EAAG,KACdd,EAAIa,QAAQ,EAAG,IACfb,EAAIc,OAAO,EAAG,KACdd,EAAIa,OAAO,EAAG,IACdb,EAAIc,OAAO,EAAG,KACdd,EAAIe,YAAc,OAClBf,EAAIgB,SACJhB,EAAIiB,SAAS,IAAK,GAAI,IAEtBjB,EAAIkB,UArDkB,oBAuDAhK,EAAM/C,UAvDN,IAuDtB,2BAAsC,CAAC,IAA5BC,EAA2B,QAC5Bb,EAAQa,EAARb,IAEF4N,EACJhB,GACAA,EAAY1L,OAASqD,EAASuG,SAC9BjK,EAAQqD,KAAO0I,EAAY3I,KAEvB4J,EACJzE,EAAarG,QACbqG,EAAarG,OAAO7B,OAASqD,EAASuG,SACtC1B,EAAarG,OAAOkB,OAASpD,EAAQqD,IAEnC0J,GAAWC,KACbpB,EAAII,OAEAe,GACFnB,EAAIe,YAAcK,EAAU,UAAY,UACxCpB,EAAIQ,UAAY,IAEhBR,EAAIe,YAAc,UAClBf,EAAIQ,UAAY,GAGlBR,EAAIqB,WACF9N,EAAIC,EAAI8N,GACR/N,EAAIE,EAAI6N,GA/TCpH,OAmUX8F,EAAIkB,YArFc,gCAyFtB,IAzFsB,EAyFlB5M,EAAQ,EAzFU,cA0FC4C,EAAMG,aA1FP,IA0FtB,2BAA0C,CAAC,IAAD,yBAA9B+C,EAA8B,KAA1BC,EAA0B,KAClCkH,EAAMtD,GAAU7D,EAAG5C,MACnBgK,EAAMvD,GAAU5D,EAAG7C,MAEnBiK,EAAOrO,EAAqBmO,EAAI9M,MAAMnB,KAAK8G,EAAG1C,UAC9CgK,EAAOtO,EAAqBoO,EAAI/M,MAAMnB,KAAK+G,EAAG3C,UAEpDsI,EAAII,OACJJ,EAAIY,YACJZ,EAAIa,OACFU,EAAIhO,IAAIC,EAAI0G,GAAgBuH,EAAKlO,IAAIC,EAAI0G,EACzCqH,EAAIhO,IAAIE,EAAIyG,GAAgBuH,EAAKlO,IAAIE,EAAIyG,GAE3C8F,EAAIc,OACFU,EAAIjO,IAAIC,EAAI0G,GAAgBwH,EAAKnO,IAAIC,EAAI0G,EACzCsH,EAAIjO,IAAIE,EAAIyG,GAAgBwH,EAAKnO,IAAIE,EAAIyG,GAG3C,IAAMyH,EACJxB,GACAA,EAAY1L,OAASqD,EAASwG,YAC9B6B,EAAY3B,kBAAoBlK,EAE5BsN,EACJjF,EAAarG,QACbqG,EAAarG,OAAO7B,OAASqD,EAASwG,YACtC3B,EAAarG,OAAOkI,kBAAoBlK,EAE1C0L,EAAIQ,UAAYmB,GAAaC,EAAY,EAAI,EAG3C5B,EAAIe,YADFY,GAAaC,EACG,UACTA,EACS,UAEA,OAGpB5B,EAAIgB,SACJhB,EAAIkB,UAEJ5M,GAAS,GAnIW,gCAsItB,GAAIuI,EAAYC,OAAQ,CAAC,IAAD,EACKD,EAAYC,OAA/BtF,EADc,EACdA,KAAME,EADQ,EACRA,SACR9B,EAAKqI,GAAUzG,GAEbjE,EAAQH,EAAqBwC,EAAGnB,MAAMnB,KAAKoE,GAA3CnE,IAEFsO,EAAKtO,EAAIC,EAAI0G,EAAYtE,EAAGrC,IAAIC,EAAI0G,GACpC4H,EAAKvO,EAAIE,EAAIyG,EAAYtE,EAAGrC,IAAIE,EAAIyG,GAPpB,EASLiD,GAA+BX,GAAxChJ,EATc,EASdA,EAAGC,EATW,EASXA,EAEXuM,EAAII,OACJJ,EAAIY,YACJZ,EAAIa,OAAOgB,EAAIC,GACf9B,EAAIc,OAAOtN,EAAGC,GACduM,EAAIe,YAAc,OAClBf,EAAIgB,SACJhB,EAAIkB,UAvJgB,MA4OlBa,EA5OkB,cA0JA7K,EAAM/C,UA1JN,0BA0JXC,EA1JW,QA2JZK,EAAcL,EAAdK,KAAMlB,EAAQa,EAARb,IAEd,GAAIkB,IAASvB,EAAYW,OAASY,IAASvB,EAAYY,OAAQ,CAC7D,IAAMkO,EAAO9N,EACXgD,EAAM/C,SAASwB,QAAO,SAACC,GAAD,OAAQA,EAAGnB,OAASA,KAC1CL,EACAK,IAASvB,EAAYW,MACjB0B,EAAQS,cACRT,EAAQW,gBAGd8J,EAAII,OACJJ,EAAInL,UAAY,SAChBmL,EAAIS,aAAe,SACnBT,EAAIU,KAAO,kBACPjM,IAASvB,EAAYW,MACvBmM,EAAIiB,SAASe,EAAMzO,EAAIC,EAAGD,EAAIE,EAAI,IAElCuM,EAAIiB,SAASe,EAAMzO,EAAIC,EAAI,EAAGD,EAAIE,GAEpCuM,EAAIkB,cACC,CAAC,IAAD,IAEHlF,EAAS,IAAM,CAAC,KAAM,MAAQ,CAAC,KAAM,MAFlC,mBACEiG,EADF,KACQC,EADR,KAICC,EAAG,UAAGjG,EAAO+F,GAAM7F,OAAO3H,UAAvB,QAAgCyH,EAAOgG,GAAU9F,OAAO3H,GAEjE,GAAI0N,EAAK,CACP,IAAMN,EAAKtO,EAAIC,EAAI0G,GACb4H,EAAKvO,EAAIE,EAAIyG,GAEnB8F,EAAIoC,UAAUD,EAAKN,EAAIC,EAAI5H,EAAWA,IA1LtB,MA8LZ5G,EAASF,EAAqBqB,GAA9BnB,KACJkD,EAAI,EA/LY,cAiMFlD,GAjME,IAiMpB,2BAAwB,CAAC,IAAdoL,EAAa,QAChBiD,EACJxB,GACAA,EAAY1L,OAASqD,EAASuG,SAC9B8B,EAAY3I,OAASpD,EAAQqD,IAC7B0I,EAAYkC,WACZlC,EAAYkC,UAAU/N,QAAUkC,EAE5B8L,EACJzF,EAAYC,QACZD,EAAYC,OAAOtF,OAASpD,EAAQqD,IACpCoF,EAAYC,OAAOpF,WAAalB,EAElCwJ,EAAIY,YACJZ,EAAIuC,IACFhP,EAAIC,GAAKkL,EAAInL,IAAIC,EAAI,IAAO0G,EAC5B3G,EAAIE,GAAKiL,EAAInL,IAAIE,EAAI,IAAOyG,EAC5ByH,EAAYa,EA/bC,EAgcb,EACU,EAAV3L,KAAK4L,IAEPzC,EAAI0C,YAEAf,GAAaW,GACftC,EAAII,OACJJ,EAAIW,UAAY2B,EAAS,OAAS,OAClCtC,EAAI2C,OACJ3C,EAAIkB,YAEJlB,EAAII,OACJJ,EAAIW,UAAY,OAChBX,EAAI2C,OACJ3C,EAAIe,YAAc,OAClBf,EAAIQ,UAAY,EAChBR,EAAIgB,SACJhB,EAAIkB,WAEN1K,GAAK,GAtOa,kCA0JtB,2BAAuC,KA1JjB,gCA0OtBwJ,EAAIkB,UAIArE,EAAYC,OACdiF,EAAgB,UACP5B,IACLA,EAAY1L,OAASqD,EAASwG,WAChCyD,EAAgB,OACP5B,EAAY1L,OAASqD,EAASuG,QAErC0D,EADE5B,EAAYkC,UACE,UAEA,OAETpF,GAASC,QAClB6E,EAAgB,aAGhBA,IAAkB1M,GACpBwG,EAAUkG,OAmPd3P,qBAAU,WACRwM,KACAO,OAEC,IAEHpN,EAAYoN,GAAY,CAACpD,EAAcC,SAEvCpJ,EAAe,UAAU,WACvBiL,YAAW,WACTc,KACAC,OACC,MAGL7M,EAAYqJ,EAAM,CAAC7F,IAyCnB,IAAMqN,GAAYtQ,GAAW,SAAC+D,GAC5B,IAAIA,IACFA,EAAEwM,iBAEe,IAAbxM,EAAEyM,QAHR,CAQA,IAAIC,GAAc,EAyBlB,GAvBAhG,GAAWC,aAAc,GAIvBL,EAAarG,QACbqG,EAAarG,OAAO7B,OAASqD,EAASuG,SACrCxB,EAAYC,QACZF,EAActG,SAEfqG,EAAarG,YAASoG,EACtBqG,GAAc,GAGZnG,EAActG,SAChBsG,EAActG,YAASoG,EACvBqG,GAAc,GAGZ9F,GAASC,QACXD,GAASC,OAAQ,EACjB6F,GAAc,GAGZlG,EAAYC,OAAQ,CACtB,IAAMqD,EAAc1D,EAAanG,OAG/B6J,GACAA,EAAY1L,OAASqD,EAASuG,SAC9B8B,EAAYkC,WACZxF,EAAYC,OAAOtF,OAAS2I,EAAY3I,MAExCN,EAAMG,YAAYM,KAAK,CACrB,CACEH,KAAM2I,EAAY3I,KAClBE,SAAUyI,EAAYkC,UAAU/N,OAElC,CACEkD,KAAMqF,EAAYC,OAAOtF,KACzBE,SAAUmF,EAAYC,OAAOpF,YAKnCmF,EAAYC,YAASJ,EACrBqG,GAAc,OACT,IAAKlG,EAAYC,OAAQ,CAC9B,IAAMqD,EAAc1D,EAAanG,OAG/B6J,GACAA,EAAY1L,OAASqD,EAASuG,SAC9B8B,EAAYkC,YAEZtC,GAAY,CACVvI,KAAM2I,EAAY3I,KAClBE,SAAUyI,EAAYkC,UAAU/N,QAElCyO,GAAc,GAGZ5C,IACEA,EAAY1L,OAASqD,EAASuG,SAAY8B,EAAYkC,UAY/ClC,EAAY1L,OAASqD,EAASwG,aAEpC3B,EAAarG,QACdqG,EAAarG,OAAO7B,OAASqD,EAASwG,YACtC3B,EAAarG,OAAOkI,kBAAoB2B,EAAY3B,kBAEpD7B,EAAarG,OAAS,CACpB7B,KAAMqD,EAASwG,WACfE,gBAAiB2B,EAAY3B,iBAE/BuE,GAAc,IApBbpG,EAAarG,QACdqG,EAAarG,OAAO7B,OAASqD,EAASuG,SACtC1B,EAAarG,OAAOkB,OAAS2I,EAAY3I,OAEzCmF,EAAarG,OAAS,CACpB7B,KAAMqD,EAASuG,QACf7G,KAAM2I,EAAY3I,MAEpBuL,GAAc,IAkBlBA,GACF3H,QAIJ,OACE,eAACrD,EAAD,WACE,cAACa,EAAD,CAAgBnG,IAAK8I,EAArB,SACE,cAAC1C,EAAD,CACEpG,IAAK6I,EACLvC,cAAwC,IAAzBgD,EAAcC,OAC7B7D,MAAO,EACPC,OAAQ,EACR4K,MACE,CACE,WAAY,EAAIjH,EAAcC,OAC9B3G,UAGJ4N,QAAS,SAAC5M,GACRA,EAAEwM,kBAEJK,YAAa,SAAC7M,GACZA,EAAEwM,iBAEe,IAAbxM,EAAEyM,SAIF/F,GAAWC,aACb4F,KAGF7F,GAAWC,aAAc,IAE3BmG,YAAa,SAAC9M,GACZmG,EAAShJ,EAAI6C,EAAE+M,QACf5G,EAAS/I,EAAI4C,EAAEgN,QAEf,IAAIN,GAAc,GAla5B,WAAgC,IAAD,IACZ5F,GAA+BX,GAAxChJ,EADqB,EACrBA,EAAGC,EADkB,EAClBA,EACL0M,EAAc1D,EAAanG,OAE7BgN,GAAO,EACPC,GAAa,EACbC,GAAuB,EANE,cAQPtM,EAAM/C,UARC,IAQ7B,2BAAsC,CAAC,IAAD,EAA3BC,EAA2B,QAC5Bd,EAASF,EAAqBgB,EAAQK,MAAtCnB,KAEFuO,EAAKzN,EAAQb,IAAIC,EAAI0G,GACrB4H,EAAK1N,EAAQb,IAAIE,EAAIyG,GAJS,cAMlB5G,GANkB,IAMpC,2BAAwB,CAAC,IAAdoL,EAAa,QACtB,GACE,SAACmD,EAAKnD,EAAInL,IAAIC,EAAI0G,EAAY1G,EAAM,GAApC,SACGsO,EAAKpD,EAAInL,IAAIE,EAAIyG,EAAYzG,EAAM,GADtC,SAEC+O,EAAuB,GACxB,CAAC,IAAD,EACM9K,EAAWpE,EAAKiB,QAAQmK,GAI3ByB,GACDA,EAAY1L,OAASqD,EAASuG,SAC9B8B,EAAY3I,OAASpD,EAAQqD,KAC7B,UAAA0I,EAAYkC,iBAAZ,eAAuB/N,SAAUoD,IAEjC+E,EAAanG,OAAS,CACpB7B,KAAMqD,EAASuG,QACf7G,KAAMpD,EAAQqD,GACd4K,UAAW,CACT/N,MAAOoD,IAGX4L,GAAO,GAETC,GAAa,EACb,QA/BgC,gCART,8BA4C7B,IAAKA,EAAY,CAAC,IAAD,gBACOrM,EAAM/C,UADb,IACf,2BAAsC,CAAC,IAA5BC,EAA2B,QAC9ByN,EAAKzN,EAAQb,IAAIC,EAAI0G,GACrB4H,EAAK1N,EAAQb,IAAIE,EAAIyG,GAE3B,GAAI1G,EAAIqO,GAAMrO,EAAIqO,EAAK3H,GAAazG,EAAIqO,GAAMrO,EAAIqO,EAAK5H,EAAW,CAG7DiG,GACDA,EAAY1L,OAASqD,EAASuG,SAC9B8B,EAAY3I,OAASpD,EAAQqD,KAC7B0I,EAAYkC,YAEZ5F,EAAanG,OAAS,CACpB7B,KAAMqD,EAASuG,QACf7G,KAAMpD,EAAQqD,GACd4K,eAAW3F,GAEb4G,GAAO,GAETC,GAAa,EACb,QArBW,+BA0BjB,IAAKA,EAAY,CAAC,IAAD,gBACUrM,EAAMG,aADhB,IACf,2BAA4C,CAAC,IAAlCC,EAAiC,sBACzBA,EADyB,GACnC8C,EADmC,KAC/BC,EAD+B,KAGpCoJ,EAAShF,GAAyBrE,GAGlCsJ,EAAgBvJ,EAFPsE,GAAyBpE,GAEDoJ,GACjCE,EAAexJ,EAAS,CAAE3G,IAAGC,KAAKgQ,GAElCjJ,EAAI3D,KAAK+M,MAAMF,EAAcjQ,EAAGiQ,EAAclQ,GAE9CqQ,EAAgBvJ,EAAOoJ,GAAgBlJ,GACvCsJ,EAAexJ,EAAOqJ,GAAenJ,GAI3C,GACEsJ,EAAatQ,IAHH,IAIVsQ,EAAatQ,GAAKqQ,EAAcrQ,EAJtB,IAKVsQ,EAAarQ,GALH,IAMVqQ,EAAarQ,EANH,GAOV,CACA,IAAM+K,EAAkBtH,EAAMG,YAAY9C,QAAQ+C,GAI/C6I,GACDA,EAAY1L,OAASqD,EAASwG,YAC9B6B,EAAY3B,kBAAoBA,IAEhC/B,EAAanG,OAAS,CACpB7B,KAAMqD,EAASwG,WACfE,mBAEF8E,GAAO,GAETE,GAAuB,EACvB,QAtCW,+BAkDjB,OAPKD,GAAeC,GACd/G,EAAanG,SACfmG,EAAanG,YAASoG,EACtB4G,GAAO,GAIJA,GA4SKS,KACFhB,GAAc,GAGhB,IAAMiB,EAAWC,QAAQrH,EAActG,QACjC6J,EAAc1D,EAAanG,OAEjC,GAAIyG,GAAWC,YAAa,CA4C1B,IA1CGgH,IACAnH,EAAYC,QACbqD,GACAA,EAAY1L,OAASqD,EAASuG,SAC9B8B,EAAYkC,YAEZtC,GAAY,CACVvI,KAAM2I,EAAY3I,KAClBE,SAAUyI,EAAYkC,UAAU/N,QAElCyO,GAAc,IAGXiB,GAAYnH,EAAYC,SAC3BiG,GAAc,GAIbiB,GACAnH,EAAYC,SACbqD,GACAA,EAAY1L,OAASqD,EAASuG,UAE9BzB,EAActG,OAAS,CACrBkB,KAAM2I,EAAY3I,MAEpBmF,EAAarG,OAAS,CACpB7B,KAAMqD,EAASuG,QACf7G,KAAM2I,EAAY3I,MAEpBuL,GAAc,GAIblG,EAAYC,QACZF,EAActG,QACd2G,GAASC,QAEVD,GAASC,OAAQ,EACjB6F,GAAc,GAGZnG,EAActG,OAAQ,CACxB,IAAMV,EAAKqI,GAAUrB,EAActG,OAAOkB,MAC1C5B,EAAGrC,IAAIC,GAAK6C,EAAE6N,UACdtO,EAAGrC,IAAIE,GAAK4C,EAAE8N,eACJtH,EAAYC,SACtBvJ,EAAIC,GAAK6C,EAAE6N,UACX3Q,EAAIE,GAAK4C,EAAE8N,WAGbpB,GAAc,OAEV9F,GAASC,QACXD,GAASC,OAAQ,EACjB6F,GAAc,GAIdlG,EAAYC,SACdiG,GAAc,GAGZA,GACF3H,KAGJwH,UAAWA,GACXwB,aAAc,YAlQtB,WACE,IAAIrB,GAAc,EAqBlB,OAnBIhG,GAAWC,cACbD,GAAWC,aAAc,GAGvBJ,EAActG,SAChBsG,EAActG,YAASoG,EACvBqG,GAAc,GAGZ9F,GAASC,QACXD,GAASC,OAAQ,EACjB6F,GAAc,GAGZlG,EAAYC,SACdD,EAAYC,YAASJ,EACrBqG,GAAc,GAGTA,GA6OKsB,IACFjJ,KAGJkJ,cAAe,SAACjO,IACVoG,EAAanG,QAAUuG,EAAYC,QAAUG,GAASC,QACxD7G,EAAEwM,sBAKV,eAACvK,EAAD,WACE,cAACa,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYS,QAJ3B,gBASA,cAACwF,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYU,SAJ3B,iBASA,cAACuF,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYQ,MAJ3B,iBASA,cAACyF,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYG,MAJ3B,iBASA,cAAC8F,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYW,QAJ3B,mBASA,cAACsF,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYY,SAJ3B,oBASA,cAACqF,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF3D,GAAWhM,EAAYa,MAJ3B,iBASA,cAAC2F,EAAD,IACA,cAACP,EAAD,CACE1E,KAAK,SACL8P,UAAW5H,EAAarG,OACxB2M,QAAS,SAAC5M,GACRA,EAAEwM,iBACF1E,MALJ,oBAUA,cAACzE,EAAD,IACA,cAACP,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACFxF,MAJJ,kBASA,cAAClE,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACFtF,aAAaiH,QAAb,mBACcnJ,GACZoC,KAAKgH,UAAU,CACblR,MACAY,SAAU+C,EAAM/C,SAChBkD,YAAaH,EAAMG,YACnB9B,aAIJmP,QAAQC,KAAK,UAdjB,kBAmBA,cAACxL,EAAD,CACE1E,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACFzF,KACAhC,KALJ,mBAWA,mBAAGwJ,KAAK,IAAR,SACE,cAACzL,EAAD,CAAS1E,KAAK,SAAd,uBAGJ,eAACqF,EAAD,WACE,cAACxE,EAAD,CACEnB,SAAU+C,EAAM/C,SAChBoB,QAASA,EACTC,gBAAiB,SAACqP,GAAD,OACf/I,EAAW,2BACNvG,GACAsP,OAIT,cAAC5N,EAAD,CAAcC,MAAOA,IACrB,cAACyC,EAAD,IACA,gCACE,6CAAgBzC,EAAM/C,SAASO,UAC/B,gDAAmBwC,EAAMG,YAAY3C,UACrC,8CAAiBwG,EAAM0B,EAActG,WACrC,+CACe,IACZ4E,EACCyB,EAAarG,QACXqG,EAAarG,OAAO7B,OAASqD,EAASuG,YAG5C,iDACiB,IACdnD,EACCyB,EAAarG,QACXqG,EAAarG,OAAO7B,OAASqD,EAASwG,eAG5C,4CACY,IACTpD,EACCuB,EAAanG,QACXmG,EAAanG,OAAO7B,OAASqD,EAASuG,YAG5C,6CACa,IACVnD,EACCuB,EAAanG,QACXmG,EAAanG,OAAO7B,OAASqD,EAASuG,SACtC5B,EAAanG,OAAO+L,cAG1B,8CACc,IACXnH,EACCuB,EAAanG,QACXmG,EAAanG,OAAO7B,OAASqD,EAASwG,eAG5C,2CAAcpD,EAAM2B,EAAYC,WAChC,yCAAY5B,EAAM+B,GAASC,UAC3B,+CAAkBhC,EAAM6B,GAAWC,0B,SAxnCxCnF,O,eAAAA,I,qBAAAA,I,gBAAAA,M,cAWAC,O,qBAAAA,I,4BAAAA,M,KG5FL,IAAMgN,EAAWtT,EAAO,MAAO,CAC7BkH,QAAS,KAGL3B,EAASvF,EAAO,KAAM,CAC1BwF,OAAQ,IAGJ+N,EAAavT,EAAO,KAAM,CAC9BN,YAAa,UAGT8T,EAAgBxT,EAAO,SAAU,CACrCyT,WAAY,KAGd,SAASC,GAAiBC,GAA2C,IAAD,EAC5DC,GAAO,UAACrS,OAAOsS,SAASD,YAAjB,QAAyB,IAAIE,OAAOC,QAAQ,KAAM,IAE/D,GAAIH,EAAM,CACR,IAAMrK,EAAQqK,EAAKrK,MAAM,YAEzB,GAAIA,EAAO,CACT,IAAMtD,EAAKsD,EAAM,GAEjB,GAAIoK,EAAWK,SAAS/N,GACtB,OAAOA,IAwBR,SAASgO,KACd,IAAMC,EAAajQ,mBAAkB,WACnC,IAAM6H,EAAOC,aAAaC,QAAQ,aAClC,OAAKF,EAGEG,KAAKC,MAAMJ,GAFT,KAGR,IAPiB,EAQoB5B,mBAASgK,GAR7B,mBAQbC,EARa,KAQCC,EARD,KAUpB7T,GAAY,WACVwL,aAAaiH,QAAQ,YAAa/G,KAAKgH,UAAUkB,MAChD,CAACA,IAZgB,MAcsBjK,mBACxCwJ,GAAiBS,IAfC,mBAcbE,EAda,KAcEC,EAdF,KA0BpB,OARAlT,EAAe,cAAc,WAC3B,IAAMyI,EAAS6J,GAAiBS,GAE5BtK,IAAWwK,GACbC,EAAiBzK,MAIjBwK,EACK,cAAC1K,EAAD,CAA8BE,OAAQwK,GAAvBA,GAItB,eAACf,EAAD,WACE,cAAC,EAAD,wBACA,cAACC,EAAD,+BACA,6BACGY,EAAajR,OACZiR,EAAapP,KAAI,SAAC8E,GAAD,OACf,+BACE,mBAAGuJ,KAAI,WAAMvJ,GAAb,SAAwBA,IAAY,IACpC,cAAC2J,EAAD,CACEvQ,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBAGE9P,OAAOgT,QAAQ,mBACjBH,EAAgBD,EAAahQ,QAAO,SAAC8B,GAAD,OAAQA,IAAO4D,MACnDkC,aAAayI,WAAb,mBAAoC3K,MAR1C,iBAFOA,MAmBX,qDAGJ,wBACE5G,KAAK,SACLwO,QAAS,SAAC5M,GACRA,EAAEwM,iBACF,IAAMoD,EA/EhB,SAAuBN,GACrB,IAAMO,EAASP,EAAaA,EAAajR,OAAS,GAElD,IAAKwR,EACH,MAAM,KAGR,IAAMnL,EAAQmL,EAAOnL,MAAM,YAE3B,IAAKA,EACH,MAAM,IAAIC,MAGZ,MAAM,IAAN,OAAWC,SAASF,EAAM,GAAI,IAAM,GAkEVoL,CAAcR,GAChCC,EAAgB,GAAD,mBAAKD,GAAL,CAAmBM,KAElClT,OAAO8K,YAAW,WAChB9K,OAAOsS,SAASe,OAAhB,WAA2BH,MAC1B,IATP,2BC9GNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,GAAD,MAEFe,SAASC,eAAe,W","file":"static/js/main.f536c80c.chunk.js","sourcesContent":["import { createStitches } from '@stitches/react';\n\nexport const {\n  styled,\n  css,\n  globalCss,\n  keyframes,\n  getCssText,\n  theme,\n  createTheme,\n  config,\n} = createStitches({\n  theme: {\n    colors: {\n      gray400: 'gainsboro',\n      gray500: 'lightgray',\n    },\n  },\n  media: {\n    bp1: '(min-width: 480px)',\n    bp2: '(min-width: 768px)',\n  },\n  utils: {\n    fontVariant: (value: `${number}|${number}`) => {\n      const [size, lineHeight] = value.split('|');\n\n      return {\n        fontSize: `${size}px`,\n        lineHeight: `${lineHeight}px`,\n      };\n    },\n  },\n});\n","import { useEffect, DependencyList, useRef } from 'react';\n\nexport function useOnChange(callback: () => void, deps: DependencyList) {\n  const initRef = useRef(false);\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true;\n      return;\n    }\n\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","import { useCallback } from 'react';\nimport { useLatest } from './useLatest';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useHandler<F extends (...args: any) => any>(callback: F): F {\n  const callbackRef = useLatest<F>(callback);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ((...args: any) => callbackRef.current(...args)) as any,\n    [],\n  );\n}\n","import { useRef } from 'react';\n\nexport function useLatest<T>(some: T): { current: T } {\n  const ref = useRef(some);\n  ref.current = some;\n  return ref;\n}\n","import { useEffect } from 'react';\n\nimport { useHandler } from 'hooks/useHandler';\n\nexport function useWindowEvent(\n  eventName: string,\n  callback: (...args: unknown[]) => void,\n) {\n  const func = useHandler(callback);\n\n  useEffect(() => {\n    window.addEventListener(eventName, func, false);\n\n    return () => {\n      window.removeEventListener(eventName, func, false);\n    };\n  }, [eventName, func]);\n}\n","export type GameId = `g${number}`;\n\nexport enum ElementType {\n  PNP = 'pnp',\n  NPN = 'npn',\n  POWER = 'power',\n  GROUND = 'ground',\n  INPUT = 'input',\n  OUTPUT = 'output',\n  DOT = 'dot',\n}\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n\nexport type ElementId = `el${number}`;\n\nexport type Element = {\n  type: ElementType;\n  id: ElementId;\n  pos: Coords;\n};\n\nexport type ConnectionPin = { elId: ElementId; pinIndex: number };\n\nexport type Connection = [ConnectionPin, ConnectionPin];\n\nexport type Pin = {\n  pos: Coords;\n};\n\nexport type ElementDescription = {\n  pins: Pin[];\n};\n\nexport type GameState = {\n  elements: Element[];\n  connections: Connection[];\n};\n\nexport type Options = {\n  isInputVector: boolean;\n  isOutputVector: boolean;\n};\n","import { useRef } from 'react';\n\nexport function useRefState<D>(value: D): D {\n  const ref = useRef<D>(value);\n  return ref.current;\n}\n","import { ElementType, ElementDescription } from './types';\n\nexport const elementsDescriptions: Record<ElementType, ElementDescription> = {\n  [ElementType.PNP]: {\n    pins: [\n      { pos: { x: 0.47, y: 0.94 } },\n      { pos: { x: -0.07, y: 0.32 } },\n      { pos: { x: 1.05, y: 0.32 } },\n    ],\n  },\n  [ElementType.NPN]: {\n    pins: [\n      { pos: { x: 0.47, y: 1 } },\n      { pos: { x: -0.07, y: 0.33 } },\n      { pos: { x: 1.05, y: 0.32 } },\n    ],\n  },\n  [ElementType.POWER]: {\n    pins: [{ pos: { x: 0.52, y: 0.8 } }],\n  },\n  [ElementType.GROUND]: {\n    pins: [{ pos: { x: 0.46, y: 0.15 } }],\n  },\n  [ElementType.INPUT]: {\n    pins: [{ pos: { x: 0.5, y: 0.8 } }],\n  },\n  [ElementType.OUTPUT]: {\n    pins: [{ pos: { x: 0.2, y: 0.5 } }],\n  },\n  [ElementType.DOT]: {\n    pins: [{ pos: { x: 0.5, y: 0.5 } }],\n  },\n};\n","import { Element, ElementType } from './types';\n\nconst INPUT_LITERALS = 'ABCDEFGHIJ';\nconst OUTPUT_LITERALS = 'YZXWVUTSRQ';\n\nexport function getLiteralForSignal(\n  elements: Element[],\n  element: Element,\n  isVector = false,\n): string {\n  const index = elements.indexOf(element);\n\n  const charVariants =\n    element.type === ElementType.INPUT ? INPUT_LITERALS : OUTPUT_LITERALS;\n\n  if (!isVector && elements.length <= charVariants.length) {\n    return charVariants.charAt(index);\n  }\n\n  return element.type === ElementType.INPUT ? `I${index}` : `Y${index}`;\n}\n","import { useMemo } from 'react';\nimport { styled } from 'stitches';\n\nimport { getLiteralForSignal } from 'common/common';\nimport { Element, ElementType, Options } from 'common/types';\n\nconst _Table = styled('table', {\n  '> thead > tr > th': {\n    textAlign: 'center',\n    fontWeight: 700,\n  },\n  '> tbody > tr > td': {\n    textAlign: 'center',\n    fontWeight: 400,\n  },\n});\n\nconst _Options = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: 10,\n});\n\nconst _Option = styled('label', {\n  userSelect: 'none',\n\n  '> input:not(:disabled)': {\n    cursor: 'pointer',\n  },\n});\n\ntype Props = {\n  elements: Element[];\n  options: Options;\n  onOptionsChange: (update: Partial<Options>) => void;\n};\n\nexport function TruthTable({ elements, options, onOptionsChange }: Props) {\n  const { inputs, outputs, renderInputs, renderOutputs } = useMemo(() => {\n    const inputs = elements.filter((el) => el.type === ElementType.INPUT);\n    const outputs = elements.filter((el) => el.type === ElementType.OUTPUT);\n\n    let renderInputs = inputs;\n    let renderOutputs = outputs;\n\n    if (options.isInputVector) {\n      renderInputs = [...inputs].reverse();\n    }\n\n    if (options.isOutputVector) {\n      renderOutputs = [...outputs].reverse();\n    }\n\n    return {\n      inputs,\n      outputs,\n      renderInputs,\n      renderOutputs,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    elements,\n    elements.length,\n    options.isInputVector,\n    options.isOutputVector,\n  ]);\n\n  return (\n    <div>\n      <_Options>\n        <_Option>\n          <input\n            type=\"checkbox\"\n            checked={options.isInputVector}\n            onChange={(e) => {\n              onOptionsChange({\n                isInputVector: e.target.checked,\n              });\n            }}\n          />{' '}\n          Treat input as vector\n        </_Option>\n        <_Option>\n          <input\n            type=\"checkbox\"\n            checked={options.isOutputVector}\n            onChange={(e) => {\n              onOptionsChange({\n                isOutputVector: e.target.checked,\n              });\n            }}\n          />{' '}\n          Treat output as vector\n        </_Option>\n      </_Options>\n      <_Table>\n        <thead>\n          <tr>\n            {renderInputs.map((el, i) => (\n              <th key={i}>\n                {getLiteralForSignal(inputs, el, options.isInputVector)}\n              </th>\n            ))}\n            {renderOutputs.map((el, i) => (\n              <th key={i}>\n                {getLiteralForSignal(outputs, el, options.isOutputVector)}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {Array.from({ length: 2 ** inputs.length }).map((el, rowIndex) => (\n            <tr key={rowIndex}>\n              {renderInputs.map((value, cellIndex) => (\n                <td key={cellIndex}>\n                  {Math.floor(rowIndex / 2 ** (inputs.length - cellIndex - 1)) %\n                    2}\n                </td>\n              ))}\n              {renderOutputs.map((value, i) => (\n                <td key={i}>Z</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </_Table>\n    </div>\n  );\n}\n","import { styled } from 'stitches';\n\nimport type { GameState } from 'common/types';\nimport { elementsDescriptions } from 'common/data';\n\nconst _Title = styled('h2', {\n  margin: 0,\n});\n\ntype Props = {\n  state: GameState;\n};\n\nexport function SchemaErrors({ state }: Props) {\n  const errors = [];\n\n  for (const el of state.elements) {\n    const { pins } = elementsDescriptions[el.type];\n    const used = pins.map(() => false);\n\n    for (const connection of state.connections) {\n      for (const p of connection) {\n        if (p.elId === el.id) {\n          used[p.pinIndex] = true;\n        }\n      }\n    }\n\n    if (used.some((value) => !value)) {\n      errors.push(`Floating pins on node ${el.type}`);\n    }\n  }\n\n  if (!errors.length) {\n    return null;\n  }\n\n  return (\n    <div>\n      <_Title>Errors:</_Title>\n      {errors.map((line, i) => (\n        <div key={i}>{line}</div>\n      ))}\n    </div>\n  );\n}\n","import { styled } from 'stitches';\n\nexport const _App = styled('main', {\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'stretch',\n  flexGrow: 1,\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n});\n\nexport const _Panel = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 4,\n  top: 0,\n  left: 0,\n  padding: 4,\n  borderRadius: 2,\n});\n\nexport const _CanvasWrapper = styled('div', {\n  flexGrow: 1,\n  overflow: 'hidden',\n});\n\nexport const _Canvas = styled('canvas', {\n  display: 'block',\n  cursor: 'grab',\n\n  variants: {\n    enableScaling: {\n      true: {\n        transformOrigin: '0 0',\n        transform: 'scale(var(--factor, 1))',\n      },\n    },\n  },\n});\n\nexport const _Button = styled('button', {\n  width: 48,\n  height: 48,\n  flexShrink: 0,\n  border: 'none',\n  color: '#333',\n  background: '#dadada',\n  whiteSpace: 'nowrap',\n  appearance: 'none',\n\n  '&:disabled': {\n    color: '#999',\n  },\n\n  '&:not(:disabled)': {\n    cursor: 'pointer',\n  },\n});\n\nexport const _Divider = styled('span', {\n  height: 8,\n});\n\nexport const _Space = styled('span', {\n  flexGrow: 1,\n});\n\nexport const _Yes = styled('span', {\n  color: '#4ebd4e',\n});\n\nexport const _No = styled('span', {\n  color: '#666',\n});\n\nexport const _Info = styled('div', {\n  display: 'none',\n\n  '@bp2': {\n    display: 'flex',\n    flexShrink: 0,\n    flexDirection: 'column',\n    flexBasis: 300,\n    padding: '16px 20px',\n    borderLeft: '1px solid #888',\n    background: '#ddd',\n    overflow: 'hidden',\n    overflowYy: 'auto',\n\n    '> *:not(:last-child)': {\n      marginBottom: 16,\n    },\n  },\n});\n","import { CSSProperties, MouseEvent, useEffect, useRef, useState } from 'react';\n\nimport { useRefState } from 'hooks/useRefState';\nimport { useForceUpdate } from 'hooks/useForceUpdate';\nimport { useHandler } from 'hooks/useHandler';\nimport { useOnChange } from 'hooks/useOnChange';\nimport { useWindowEvent } from 'hooks/useWindowEvent';\nimport {\n  Coords,\n  Element,\n  ElementId,\n  ElementType,\n  GameId,\n  GameState,\n  Options,\n  Point,\n} from 'common/types';\nimport { elementsDescriptions } from 'common/data';\nimport { getLiteralForSignal } from 'common/common';\nimport { getCanvasContext } from 'utils/canvas';\nimport { TruthTable } from 'components/TruthTable';\nimport { SchemaErrors } from 'components/SchemaErrors';\n\nimport {\n  _App,\n  _Panel,\n  _Button,\n  _CanvasWrapper,\n  _Canvas,\n  _Divider,\n  _Space,\n  _Yes,\n  _No,\n  _Info,\n} from './elements';\n\nconst ICON_SIZE = 48;\nconst FOCUS_SIZE = ICON_SIZE + 4;\nconst PIN_DOT_RADIUS = 5;\n\ntype Cursor =\n  | 'move'\n  | 'pointer'\n  | 'drag'\n  | 'grab'\n  | 'grabbing'\n  | 'cross'\n  | undefined;\n\nfunction subtract(p1: Point, p2: Point): Point {\n  return {\n    x: p1.x - p2.x,\n    y: p1.y - p2.y,\n  };\n}\n\nfunction rotate(point: Point, a: number): Point {\n  const sinA = Math.sin(a);\n  const cosA = Math.cos(a);\n\n  return {\n    x: point.x * cosA - point.y * sinA,\n    y: point.x * sinA + point.y * cosA,\n  };\n}\n\nfunction getNextId(state: GameState): ElementId {\n  const lastElement = state.elements[state.elements.length - 1];\n\n  if (!lastElement) {\n    return `el1`;\n  }\n\n  const match = lastElement.id.match(/^el(\\d+)$/);\n\n  if (!match) {\n    throw new Error();\n  }\n\n  return `el${parseInt(match[1], 10) + 1}`;\n}\n\nfunction yesNo(value: unknown) {\n  if (value) {\n    return <_Yes>yes</_Yes>;\n  }\n  return <_No>no</_No>;\n}\n\nenum LoadingStatus {\n  NONE,\n  LOADING,\n  DONE,\n}\n\ntype AssetSet = {\n  images: Record<string, HTMLImageElement>;\n  status: LoadingStatus;\n};\n\nenum NodeType {\n  ELEMENT,\n  CONNECTION,\n}\n\ntype Props = {\n  gameId: GameId;\n};\n\nexport function Emulator({ gameId }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const canvasWrapperRef = useRef<HTMLDivElement>(null);\n  const forceUpdate = useForceUpdate();\n  const [cursor, setCursor] = useState<Cursor>();\n  const [options, setOptions] = useState<Options>({\n    isInputVector: false,\n    isOutputVector: false,\n  });\n  const densityFactor = useRefState({ factor: window.devicePixelRatio ?? 1 });\n\n  const size = useRefState({ width: 0, height: 0 });\n  const pos = useRefState({ x: 0, y: 0 });\n  const assets = useRefState<{\n    x1: AssetSet;\n    x2: AssetSet;\n  }>({\n    x1: { images: {}, status: LoadingStatus.NONE },\n    x2: { images: {}, status: LoadingStatus.NONE },\n  });\n  const mousePos = useRefState({ x: 0, y: 0 });\n  const hoverElement = useRefState<{\n    target:\n      | {\n          type: NodeType.ELEMENT;\n          elId: ElementId;\n          activePin: { index: number } | undefined;\n        }\n      | {\n          type: NodeType.CONNECTION;\n          connectionIndex: number;\n        }\n      | undefined;\n  }>({\n    target: undefined,\n  });\n  const focusElement = useRefState<{\n    target:\n      | {\n          type: NodeType.ELEMENT;\n          elId: ElementId;\n        }\n      | {\n          type: NodeType.CONNECTION;\n          connectionIndex: number;\n        }\n      | undefined;\n  }>({ target: undefined });\n  const movingElement = useRefState<{\n    target: { elId: ElementId } | undefined;\n  }>({\n    target: undefined,\n  });\n  const wireElement = useRefState<{\n    source: { elId: ElementId; pinIndex: number } | undefined;\n  }>({\n    source: undefined,\n  });\n  const state = useRefState<GameState>({\n    elements: [],\n    connections: [],\n  });\n  const mouseState = useRefState({ isMouseDown: false });\n  const panState = useRefState({ isPan: false });\n\n  function convertScreenCoordsToAppCoords({ x, y }: Coords): Coords {\n    return {\n      x: x - size.width / 2 - pos.x,\n      y: y - size.height / 2 - pos.y,\n    };\n  }\n\n  let draw: () => void;\n\n  function clearState() {\n    pos.x = 0;\n    pos.y = 0;\n    state.elements = [];\n    state.connections = [];\n    hoverElement.target = undefined;\n    focusElement.target = undefined;\n    movingElement.target = undefined;\n    wireElement.source = undefined;\n    panState.isPan = false;\n    mouseState.isMouseDown = false;\n  }\n\n  const loadGameState = useHandler(() => {\n    const json = localStorage.getItem(`sch_game_${gameId}`);\n\n    if (!json) {\n      return;\n    }\n\n    const {\n      pos: savedPos,\n      elements,\n      connections,\n      options: savedOptions,\n    } = JSON.parse(json);\n\n    clearState();\n\n    pos.x = savedPos.x;\n    pos.y = savedPos.y;\n    state.elements = elements;\n    state.connections = connections;\n\n    setOptions(savedOptions);\n\n    window.setTimeout(draw, 0);\n  });\n\n  useEffect(() => {\n    loadGameState();\n\n    const intervalId = window.setInterval(forceUpdate, 500);\n\n    return () => {\n      window.clearInterval(intervalId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).state = state;\n  }\n\n  const getElById = useHandler((id: ElementId): Element => {\n    const el = state.elements.find((el) => el.id === id);\n\n    if (!el) {\n      throw new Error('Element not found');\n    }\n\n    return el;\n  });\n\n  const deleteElementInFocus = useHandler(() => {\n    const focusTarget = focusElement.target;\n\n    if (!focusTarget) {\n      return;\n    }\n\n    switch (focusTarget.type) {\n      case NodeType.ELEMENT:\n        state.connections = state.connections.filter(\n          ([p1, p2]) =>\n            p1.elId !== focusTarget.elId && p2.elId !== focusTarget.elId,\n        );\n\n        state.elements = state.elements.filter(\n          (el) => el.id !== focusTarget.elId,\n        );\n        break;\n      case NodeType.CONNECTION:\n        state.connections.splice(focusTarget.connectionIndex, 1);\n        break;\n    }\n\n    focusElement.target = undefined;\n    draw();\n  });\n\n  draw = useHandler(() => {\n    if (size.width === 0) {\n      return;\n    }\n\n    const ctx = getCanvasContext(canvasRef.current);\n\n    actualizeDensityFactor();\n    const { factor } = densityFactor;\n\n    const hoverTarget = hoverElement.target;\n\n    ctx.save();\n    ctx.clearRect(0, 0, size.width * factor, size.height * factor);\n\n    if (factor !== 1) {\n      ctx.scale(factor, factor);\n    }\n\n    ctx.translate(\n      Math.floor(size.width / 2) + pos.x,\n      Math.floor(size.height / 2) + pos.y,\n    );\n\n    ctx.save();\n\n    ctx.lineWidth = 1;\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.font = '15px sans-serif';\n    ctx.fillStyle = '#333';\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(100, 0);\n    ctx.moveTo(95, -5);\n    ctx.lineTo(100, 0);\n    ctx.moveTo(95, 5);\n    ctx.lineTo(100, 0);\n    ctx.strokeStyle = '#0f0';\n    ctx.stroke();\n    ctx.fillText('X', 90, 15);\n\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(0, 100);\n    ctx.moveTo(-5, 95);\n    ctx.lineTo(0, 100);\n    ctx.moveTo(5, 95);\n    ctx.lineTo(0, 100);\n    ctx.strokeStyle = '#00f';\n    ctx.stroke();\n    ctx.fillText('Y', 12, 90);\n\n    ctx.restore();\n\n    for (const element of state.elements) {\n      const { pos } = element;\n\n      const isHover =\n        hoverTarget &&\n        hoverTarget.type === NodeType.ELEMENT &&\n        element.id === hoverTarget.elId;\n\n      const isFocus =\n        focusElement.target &&\n        focusElement.target.type === NodeType.ELEMENT &&\n        focusElement.target.elId === element.id;\n\n      if (isHover || isFocus) {\n        ctx.save();\n\n        if (isHover) {\n          ctx.strokeStyle = isFocus ? '#7f7fff' : '#e5e5e5';\n          ctx.lineWidth = 3;\n        } else {\n          ctx.strokeStyle = '#bebeff';\n          ctx.lineWidth = 2;\n        }\n\n        ctx.strokeRect(\n          pos.x - FOCUS_SIZE / 2,\n          pos.y - FOCUS_SIZE / 2,\n          FOCUS_SIZE,\n          FOCUS_SIZE,\n        );\n        ctx.restore();\n      }\n    }\n\n    let index = 0;\n    for (const [p1, p2] of state.connections) {\n      const el1 = getElById(p1.elId);\n      const el2 = getElById(p2.elId);\n\n      const pin1 = elementsDescriptions[el1.type].pins[p1.pinIndex];\n      const pin2 = elementsDescriptions[el2.type].pins[p2.pinIndex];\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(\n        el1.pos.x - ICON_SIZE / 2 + pin1.pos.x * ICON_SIZE,\n        el1.pos.y - ICON_SIZE / 2 + pin1.pos.y * ICON_SIZE,\n      );\n      ctx.lineTo(\n        el2.pos.x - ICON_SIZE / 2 + pin2.pos.x * ICON_SIZE,\n        el2.pos.y - ICON_SIZE / 2 + pin2.pos.y * ICON_SIZE,\n      );\n\n      const isHovered =\n        hoverTarget &&\n        hoverTarget.type === NodeType.CONNECTION &&\n        hoverTarget.connectionIndex === index;\n\n      const isInFocus =\n        focusElement.target &&\n        focusElement.target.type === NodeType.CONNECTION &&\n        focusElement.target.connectionIndex === index;\n\n      ctx.lineWidth = isHovered || isInFocus ? 3 : 1;\n\n      if (isHovered && isInFocus) {\n        ctx.strokeStyle = '#8080ff';\n      } else if (isInFocus) {\n        ctx.strokeStyle = '#bfbfff';\n      } else {\n        ctx.strokeStyle = '#333';\n      }\n\n      ctx.stroke();\n      ctx.restore();\n\n      index += 1;\n    }\n\n    if (wireElement.source) {\n      const { elId, pinIndex } = wireElement.source;\n      const el = getElById(elId);\n\n      const { pos } = elementsDescriptions[el.type].pins[pinIndex];\n\n      const x0 = pos.x * ICON_SIZE + el.pos.x - ICON_SIZE / 2;\n      const y0 = pos.y * ICON_SIZE + el.pos.y - ICON_SIZE / 2;\n\n      const { x, y } = convertScreenCoordsToAppCoords(mousePos);\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = '#888';\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    for (const element of state.elements) {\n      const { type, pos } = element;\n\n      if (type === ElementType.INPUT || type === ElementType.OUTPUT) {\n        const char = getLiteralForSignal(\n          state.elements.filter((el) => el.type === type),\n          element,\n          type === ElementType.INPUT\n            ? options.isInputVector\n            : options.isOutputVector,\n        );\n\n        ctx.save();\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.font = '24px sans-serif';\n        if (type === ElementType.INPUT) {\n          ctx.fillText(char, pos.x, pos.y - 10);\n        } else {\n          ctx.fillText(char, pos.x + 6, pos.y);\n        }\n        ctx.restore();\n      } else {\n        const [main, fallback]: ['x1', 'x2'] | ['x2', 'x1'] =\n          factor > 1.5 ? ['x2', 'x1'] : ['x1', 'x2'];\n\n        const img = assets[main].images[type] ?? assets[fallback].images[type];\n\n        if (img) {\n          const x0 = pos.x - ICON_SIZE / 2;\n          const y0 = pos.y - ICON_SIZE / 2;\n\n          ctx.drawImage(img, x0, y0, ICON_SIZE, ICON_SIZE);\n        }\n      }\n\n      const { pins } = elementsDescriptions[type];\n      let i = 0;\n\n      for (const pin of pins) {\n        const isHovered =\n          hoverTarget &&\n          hoverTarget.type === NodeType.ELEMENT &&\n          hoverTarget.elId === element.id &&\n          hoverTarget.activePin &&\n          hoverTarget.activePin.index === i;\n\n        const isWire =\n          wireElement.source &&\n          wireElement.source.elId === element.id &&\n          wireElement.source.pinIndex === i;\n\n        ctx.beginPath();\n        ctx.arc(\n          pos.x + (pin.pos.x - 0.5) * ICON_SIZE,\n          pos.y + (pin.pos.y - 0.5) * ICON_SIZE,\n          isHovered ? PIN_DOT_RADIUS + 1 : PIN_DOT_RADIUS,\n          0,\n          Math.PI * 2,\n        );\n        ctx.closePath();\n\n        if (isHovered || isWire) {\n          ctx.save();\n          ctx.fillStyle = isWire ? '#d66' : '#66d';\n          ctx.fill();\n          ctx.restore();\n        } else {\n          ctx.save();\n          ctx.fillStyle = '#fff';\n          ctx.fill();\n          ctx.strokeStyle = '#448';\n          ctx.lineWidth = 2;\n          ctx.stroke();\n          ctx.restore();\n        }\n        i += 1;\n      }\n    }\n\n    ctx.restore();\n\n    let currentCursor: Cursor;\n\n    if (wireElement.source) {\n      currentCursor = 'pointer';\n    } else if (hoverTarget)\n      if (hoverTarget.type === NodeType.CONNECTION) {\n        currentCursor = 'move';\n      } else if (hoverTarget.type === NodeType.ELEMENT) {\n        if (hoverTarget.activePin) {\n          currentCursor = 'pointer';\n        } else {\n          currentCursor = 'move';\n        }\n      } else if (panState.isPan) {\n        currentCursor = 'grabbing';\n      }\n\n    if (currentCursor !== cursor) {\n      setCursor(currentCursor);\n    }\n  });\n\n  function getConnectionPinPosition({\n    elId,\n    pinIndex,\n  }: {\n    elId: ElementId;\n    pinIndex: number;\n  }): Coords {\n    const el = getElById(elId);\n\n    const pin = elementsDescriptions[el.type].pins[pinIndex];\n\n    return {\n      x: el.pos.x + (pin.pos.x - 0.5) * ICON_SIZE,\n      y: el.pos.y + (pin.pos.y - 0.5) * ICON_SIZE,\n    };\n  }\n\n  function checkHover(): boolean {\n    const { x, y } = convertScreenCoordsToAppCoords(mousePos);\n    const hoverTarget = hoverElement.target;\n\n    let flag = false;\n    let hoverFound = false;\n    let hoverConnectionFound = false;\n\n    for (const element of state.elements) {\n      const { pins } = elementsDescriptions[element.type];\n\n      const x0 = element.pos.x - ICON_SIZE / 2;\n      const y0 = element.pos.y - ICON_SIZE / 2;\n\n      for (const pin of pins) {\n        if (\n          (x0 + pin.pos.x * ICON_SIZE - x) ** 2 +\n            (y0 + pin.pos.y * ICON_SIZE - y) ** 2 <\n          (PIN_DOT_RADIUS + 4) ** 2\n        ) {\n          const pinIndex = pins.indexOf(pin);\n\n          // before set check if already hovered\n          if (\n            !hoverTarget ||\n            hoverTarget.type !== NodeType.ELEMENT ||\n            hoverTarget.elId !== element.id ||\n            hoverTarget.activePin?.index !== pinIndex\n          ) {\n            hoverElement.target = {\n              type: NodeType.ELEMENT,\n              elId: element.id,\n              activePin: {\n                index: pinIndex,\n              },\n            };\n            flag = true;\n          }\n          hoverFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!hoverFound) {\n      for (const element of state.elements) {\n        const x0 = element.pos.x - ICON_SIZE / 2;\n        const y0 = element.pos.y - ICON_SIZE / 2;\n\n        if (x > x0 && x < x0 + ICON_SIZE && y > y0 && y < y0 + ICON_SIZE) {\n          // before set check if already hovered\n          if (\n            !hoverTarget ||\n            hoverTarget.type !== NodeType.ELEMENT ||\n            hoverTarget.elId !== element.id ||\n            hoverTarget.activePin\n          ) {\n            hoverElement.target = {\n              type: NodeType.ELEMENT,\n              elId: element.id,\n              activePin: undefined,\n            };\n            flag = true;\n          }\n          hoverFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!hoverFound) {\n      for (const connection of state.connections) {\n        const [p1, p2] = connection;\n\n        const point1 = getConnectionPinPosition(p1);\n        const point2 = getConnectionPinPosition(p2);\n\n        const shiftedPoint2 = subtract(point2, point1);\n        const shiftedMouse = subtract({ x, y }, point1);\n\n        const a = Math.atan2(shiftedPoint2.y, shiftedPoint2.x);\n\n        const rotatedPoint2 = rotate(shiftedPoint2, -a);\n        const rotatedMouse = rotate(shiftedMouse, -a);\n\n        const GAP = 10;\n\n        if (\n          rotatedMouse.x >= -GAP &&\n          rotatedMouse.x <= rotatedPoint2.x + GAP &&\n          rotatedMouse.y > -GAP &&\n          rotatedMouse.y < GAP\n        ) {\n          const connectionIndex = state.connections.indexOf(connection);\n\n          // before set check if already hovered\n          if (\n            !hoverTarget ||\n            hoverTarget.type !== NodeType.CONNECTION ||\n            hoverTarget.connectionIndex !== connectionIndex\n          ) {\n            hoverElement.target = {\n              type: NodeType.CONNECTION,\n              connectionIndex,\n            };\n            flag = true;\n          }\n          hoverConnectionFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!hoverFound && !hoverConnectionFound) {\n      if (hoverElement.target) {\n        hoverElement.target = undefined;\n        flag = true;\n      }\n    }\n\n    return flag;\n  }\n\n  function actualizeDensityFactor() {\n    const factor = window.devicePixelRatio ?? 1;\n\n    if (densityFactor.factor !== factor) {\n      densityFactor.factor = factor;\n      forceUpdate();\n    }\n  }\n\n  function updateSize() {\n    const app = canvasWrapperRef.current;\n    const canvas = canvasRef.current;\n\n    if (!app || !canvas) {\n      throw new Error();\n    }\n\n    if (size.width !== app.clientWidth || size.height !== app.clientHeight) {\n      size.width = app.clientWidth;\n      size.height = app.clientHeight;\n\n      canvas.width = size.width * densityFactor.factor;\n      canvas.height = size.height * densityFactor.factor;\n\n      draw();\n    }\n  }\n\n  function checkOverlap(point: Coords): boolean {\n    for (const { pos } of state.elements) {\n      if (\n        (pos.x - point.x) ** 2 + (pos.y - point.y) ** 2 <\n        (ICON_SIZE / 2) ** 2\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function addElement(type: ElementType) {\n    const pos = convertScreenCoordsToAppCoords({\n      x: size.width / 2,\n      y: size.height / 2,\n    });\n\n    while (checkOverlap(pos)) {\n      pos.x += ICON_SIZE + 20;\n    }\n\n    state.elements.push({\n      type,\n      id: getNextId(state),\n      pos,\n    });\n    draw();\n  }\n\n  function loadAssets() {\n    const is2x = densityFactor.factor > 1.5;\n\n    const assetsSet = assets[is2x ? 'x1' : 'x2'];\n\n    if (assetsSet.status !== LoadingStatus.NONE) {\n      return;\n    }\n\n    const loadImages = [\n      ElementType.PNP,\n      ElementType.NPN,\n      ElementType.POWER,\n      ElementType.GROUND,\n    ];\n\n    let remainLoad = loadImages.length;\n\n    function onLoad() {\n      remainLoad -= 1;\n\n      if (remainLoad === 0) {\n        assetsSet.status = LoadingStatus.DONE;\n        draw();\n      }\n    }\n\n    assetsSet.status = LoadingStatus.LOADING;\n\n    for (const imgName of loadImages) {\n      const image = new Image();\n      image.src = `assets/${imgName}${is2x ? '@2x' : ''}.png`;\n      image.addEventListener('load', () => {\n        assetsSet.images[imgName] = image;\n        onLoad();\n      });\n      image.addEventListener('error', onLoad);\n    }\n  }\n\n  useEffect(() => {\n    updateSize();\n    loadAssets();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useOnChange(loadAssets, [densityFactor.factor]);\n\n  useWindowEvent('resize', () => {\n    setTimeout(() => {\n      actualizeDensityFactor();\n      updateSize();\n    }, 0);\n  });\n\n  useOnChange(draw, [options]);\n\n  function resetCursorState() {\n    let needRepaint = false;\n\n    if (mouseState.isMouseDown) {\n      mouseState.isMouseDown = false;\n    }\n\n    if (movingElement.target) {\n      movingElement.target = undefined;\n      needRepaint = true;\n    }\n\n    if (panState.isPan) {\n      panState.isPan = false;\n      needRepaint = true;\n    }\n\n    if (wireElement.source) {\n      wireElement.source = undefined;\n      needRepaint = true;\n    }\n\n    return needRepaint;\n  }\n\n  function startWiring({\n    elId,\n    pinIndex,\n  }: {\n    elId: ElementId;\n    pinIndex: number;\n  }) {\n    focusElement.target = { type: NodeType.ELEMENT, elId };\n    wireElement.source = {\n      elId,\n      pinIndex,\n    };\n  }\n\n  const onMouseUp = useHandler((e?: MouseEvent) => {\n    if (e) {\n      e.preventDefault();\n\n      if (e.button !== 0) {\n        return;\n      }\n    }\n\n    let needRepaint = false;\n\n    mouseState.isMouseDown = false;\n\n    // TODO: Why focus resetting here?\n    if (\n      focusElement.target &&\n      focusElement.target.type === NodeType.ELEMENT &&\n      !wireElement.source &&\n      !movingElement.target\n    ) {\n      focusElement.target = undefined;\n      needRepaint = true;\n    }\n\n    if (movingElement.target) {\n      movingElement.target = undefined;\n      needRepaint = true;\n    }\n\n    if (panState.isPan) {\n      panState.isPan = false;\n      needRepaint = true;\n    }\n\n    if (wireElement.source) {\n      const hoverTarget = hoverElement.target;\n\n      if (\n        hoverTarget &&\n        hoverTarget.type === NodeType.ELEMENT &&\n        hoverTarget.activePin &&\n        wireElement.source.elId !== hoverTarget.elId\n      ) {\n        state.connections.push([\n          {\n            elId: hoverTarget.elId,\n            pinIndex: hoverTarget.activePin.index,\n          },\n          {\n            elId: wireElement.source.elId,\n            pinIndex: wireElement.source.pinIndex,\n          },\n        ]);\n      }\n\n      wireElement.source = undefined;\n      needRepaint = true;\n    } else if (!wireElement.source) {\n      const hoverTarget = hoverElement.target;\n\n      if (\n        hoverTarget &&\n        hoverTarget.type === NodeType.ELEMENT &&\n        hoverTarget.activePin\n      ) {\n        startWiring({\n          elId: hoverTarget.elId,\n          pinIndex: hoverTarget.activePin.index,\n        });\n        needRepaint = true;\n      }\n\n      if (hoverTarget) {\n        if (hoverTarget.type === NodeType.ELEMENT && !hoverTarget.activePin) {\n          if (\n            !focusElement.target ||\n            focusElement.target.type !== NodeType.ELEMENT ||\n            focusElement.target.elId !== hoverTarget.elId\n          ) {\n            focusElement.target = {\n              type: NodeType.ELEMENT,\n              elId: hoverTarget.elId,\n            };\n            needRepaint = true;\n          }\n        } else if (hoverTarget.type === NodeType.CONNECTION) {\n          if (\n            !focusElement.target ||\n            focusElement.target.type !== NodeType.CONNECTION ||\n            focusElement.target.connectionIndex !== hoverTarget.connectionIndex\n          ) {\n            focusElement.target = {\n              type: NodeType.CONNECTION,\n              connectionIndex: hoverTarget.connectionIndex,\n            };\n            needRepaint = true;\n          }\n        }\n      }\n    }\n\n    if (needRepaint) {\n      draw();\n    }\n  });\n\n  return (\n    <_App>\n      <_CanvasWrapper ref={canvasWrapperRef}>\n        <_Canvas\n          ref={canvasRef}\n          enableScaling={densityFactor.factor !== 1}\n          width={0}\n          height={0}\n          style={\n            {\n              '--factor': 1 / densityFactor.factor,\n              cursor,\n            } as CSSProperties\n          }\n          onClick={(e) => {\n            e.preventDefault();\n          }}\n          onMouseDown={(e) => {\n            e.preventDefault();\n\n            if (e.button !== 0) {\n              return;\n            }\n\n            if (mouseState.isMouseDown) {\n              onMouseUp();\n            }\n\n            mouseState.isMouseDown = true;\n          }}\n          onMouseMove={(e) => {\n            mousePos.x = e.clientX;\n            mousePos.y = e.clientY;\n\n            let needRepaint = false;\n\n            if (checkHover()) {\n              needRepaint = true;\n            }\n\n            const isMoving = Boolean(movingElement.target);\n            const hoverTarget = hoverElement.target;\n\n            if (mouseState.isMouseDown) {\n              if (\n                !isMoving &&\n                !wireElement.source &&\n                hoverTarget &&\n                hoverTarget.type === NodeType.ELEMENT &&\n                hoverTarget.activePin\n              ) {\n                startWiring({\n                  elId: hoverTarget.elId,\n                  pinIndex: hoverTarget.activePin.index,\n                });\n                needRepaint = true;\n              }\n\n              if (!isMoving && wireElement.source) {\n                needRepaint = true;\n              }\n\n              if (\n                !isMoving &&\n                !wireElement.source &&\n                hoverTarget &&\n                hoverTarget.type === NodeType.ELEMENT\n              ) {\n                movingElement.target = {\n                  elId: hoverTarget.elId,\n                };\n                focusElement.target = {\n                  type: NodeType.ELEMENT,\n                  elId: hoverTarget.elId,\n                };\n                needRepaint = true;\n              }\n\n              if (\n                !wireElement.source &&\n                !movingElement.target &&\n                !panState.isPan\n              ) {\n                panState.isPan = true;\n                needRepaint = true;\n              }\n\n              if (movingElement.target) {\n                const el = getElById(movingElement.target.elId);\n                el.pos.x += e.movementX;\n                el.pos.y += e.movementY;\n              } else if (!wireElement.source) {\n                pos.x += e.movementX;\n                pos.y += e.movementY;\n              }\n\n              needRepaint = true;\n            } else {\n              if (panState.isPan) {\n                panState.isPan = false;\n                needRepaint = true;\n              }\n            }\n\n            if (wireElement.source) {\n              needRepaint = true;\n            }\n\n            if (needRepaint) {\n              draw();\n            }\n          }}\n          onMouseUp={onMouseUp}\n          onMouseLeave={() => {\n            if (resetCursorState()) {\n              draw();\n            }\n          }}\n          onContextMenu={(e) => {\n            if (hoverElement.target || wireElement.source || panState.isPan) {\n              e.preventDefault();\n            }\n          }}\n        />\n      </_CanvasWrapper>\n      <_Panel>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.POWER);\n          }}\n        >\n          DD\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.GROUND);\n          }}\n        >\n          GND\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.NPN);\n          }}\n        >\n          npn\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.PNP);\n          }}\n        >\n          pnp\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.INPUT);\n          }}\n        >\n          input\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.OUTPUT);\n          }}\n        >\n          output\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.DOT);\n          }}\n        >\n          dot\n        </_Button>\n        <_Divider />\n        <_Button\n          type=\"button\"\n          disabled={!focusElement.target}\n          onClick={(e) => {\n            e.preventDefault();\n            deleteElementInFocus();\n          }}\n        >\n          delete\n        </_Button>\n        <_Divider />\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            loadGameState();\n          }}\n        >\n          Load\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            localStorage.setItem(\n              `sch_game_${gameId}`,\n              JSON.stringify({\n                pos,\n                elements: state.elements,\n                connections: state.connections,\n                options,\n              }),\n            );\n            // eslint-disable-next-line no-console\n            console.info('Saved');\n          }}\n        >\n          Save\n        </_Button>\n        <_Button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            clearState();\n            draw();\n          }}\n        >\n          Clear\n        </_Button>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\">\n          <_Button type=\"button\">Exit</_Button>\n        </a>\n      </_Panel>\n      <_Info>\n        <TruthTable\n          elements={state.elements}\n          options={options}\n          onOptionsChange={(update) =>\n            setOptions({\n              ...options,\n              ...update,\n            })\n          }\n        />\n        <SchemaErrors state={state} />\n        <_Space />\n        <div>\n          <div>elements: {state.elements.length}</div>\n          <div>connections: {state.connections.length}</div>\n          <div>el moving: {yesNo(movingElement.target)}</div>\n          <div>\n            el in focus:{' '}\n            {yesNo(\n              focusElement.target &&\n                focusElement.target.type === NodeType.ELEMENT,\n            )}\n          </div>\n          <div>\n            conn in focus:{' '}\n            {yesNo(\n              focusElement.target &&\n                focusElement.target.type === NodeType.CONNECTION,\n            )}\n          </div>\n          <div>\n            el hover:{' '}\n            {yesNo(\n              hoverElement.target &&\n                hoverElement.target.type === NodeType.ELEMENT,\n            )}\n          </div>\n          <div>\n            pin hover:{' '}\n            {yesNo(\n              hoverElement.target &&\n                hoverElement.target.type === NodeType.ELEMENT &&\n                hoverElement.target.activePin,\n            )}\n          </div>\n          <div>\n            conn hover:{' '}\n            {yesNo(\n              hoverElement.target &&\n                hoverElement.target.type === NodeType.CONNECTION,\n            )}\n          </div>\n          <div>wiring: {yesNo(wireElement.source)}</div>\n          <div>drag: {yesNo(panState.isPan)}</div>\n          <div>mouse down: {yesNo(mouseState.isMouseDown)}</div>\n        </div>\n      </_Info>\n    </_App>\n  );\n}\n","import { useCallback, useRef, useState } from 'react';\n\nexport function useForceUpdate() {\n  const incRef = useRef(0);\n  const [, setInc] = useState(incRef.current);\n\n  return useCallback(() => {\n    incRef.current += 1;\n    setInc(incRef.current);\n  }, []);\n}\n","export function getCanvasContext(\n  canvas: HTMLCanvasElement | null | undefined,\n): CanvasRenderingContext2D {\n  if (!canvas) {\n    throw new Error();\n  }\n\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    throw new Error();\n  }\n\n  return ctx;\n}\n","import { useMemo, useState } from 'react';\nimport { styled } from 'stitches';\n\nimport { GameId } from 'common/types';\nimport { useOnChange } from 'hooks/useOnChange';\nimport { useWindowEvent } from 'hooks/useWindowEvent';\nimport { Emulator } from 'components/Emulator';\n\nconst _Wrapper = styled('div', {\n  padding: 16,\n});\n\nconst _Title = styled('h1', {\n  margin: 0,\n});\n\nconst _GameTitle = styled('h2', {\n  fontVariant: '18|24',\n});\n\nconst _RemoveButton = styled('button', {\n  marginLeft: 16,\n});\n\nfunction getCurrentGameId(allowedIds: GameId[]): GameId | undefined {\n  const hash = (window.location.hash ?? '').trim().replace(/^#/, '');\n\n  if (hash) {\n    const match = hash.match(/^g(\\d+)$/);\n\n    if (match) {\n      const id = match[0] as GameId;\n\n      if (allowedIds.includes(id)) {\n        return id;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getNextGameId(currentGames: GameId[]): GameId {\n  const lastId = currentGames[currentGames.length - 1];\n\n  if (!lastId) {\n    return `g1`;\n  }\n\n  const match = lastId.match(/^g(\\d+)$/);\n\n  if (!match) {\n    throw new Error();\n  }\n\n  return `g${parseInt(match[1], 10) + 1}`;\n}\n\nexport function App() {\n  const savedGames = useMemo<GameId[]>(() => {\n    const json = localStorage.getItem('sch_games');\n    if (!json) {\n      return [];\n    }\n    return JSON.parse(json);\n  }, []);\n  const [currentGames, setCurrentGames] = useState(savedGames);\n\n  useOnChange(() => {\n    localStorage.setItem('sch_games', JSON.stringify(currentGames));\n  }, [currentGames]);\n\n  const [currentGameId, setCurrentGameId] = useState(\n    getCurrentGameId(currentGames),\n  );\n\n  useWindowEvent('hashchange', () => {\n    const gameId = getCurrentGameId(currentGames);\n\n    if (gameId !== currentGameId) {\n      setCurrentGameId(gameId);\n    }\n  });\n\n  if (currentGameId) {\n    return <Emulator key={currentGameId} gameId={currentGameId} />;\n  }\n\n  return (\n    <_Wrapper>\n      <_Title>Schematic</_Title>\n      <_GameTitle>Current schemas:</_GameTitle>\n      <ul>\n        {currentGames.length ? (\n          currentGames.map((gameId) => (\n            <li key={gameId}>\n              <a href={`#${gameId}`}>{gameId}</a>{' '}\n              <_RemoveButton\n                type=\"button\"\n                onClick={(e) => {\n                  e.preventDefault();\n\n                  // eslint-disable-next-line no-alert\n                  if (window.confirm('Are you sure?')) {\n                    setCurrentGames(currentGames.filter((id) => id !== gameId));\n                    localStorage.removeItem(`sch_game_${gameId}`);\n                  }\n                }}\n              >\n                x\n              </_RemoveButton>\n            </li>\n          ))\n        ) : (\n          <div>no saved schemas</div>\n        )}\n      </ul>\n      <button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          const newGameId = getNextGameId(currentGames);\n          setCurrentGames([...currentGames, newGameId]);\n\n          window.setTimeout(() => {\n            window.location.assign(`#${newGameId}`);\n          }, 0);\n        }}\n      >\n        New schema\n      </button>\n    </_Wrapper>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css/normalize.css';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}