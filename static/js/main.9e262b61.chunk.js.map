{"version":3,"sources":["stitches.ts","hooks/useLatest.ts","hooks/useHandler.ts","hooks/useWindowEvent.ts","common/types.ts","common/data.ts","utils/simulation.ts","utils/trigano.ts","hooks/useForceUpdate.ts","models/GameModel.ts","hooks/useRefState.ts","common/common.ts","utils/render.ts","hooks/usePageActive.ts","hooks/useDocumentEvent.ts","components/TruthTable/TruthTable.tsx","components/SchemaErrors/SchemaErrors.tsx","components/InputSignalsControl/InputSignalsControl.tsx","components/Toolbar/Toolbar.tsx","components/OptionsPanel/Option.tsx","components/OptionsPanel/OptionsPanel.tsx","components/DebugPanel/DebugPanel.tsx","components/Simulator/elements.tsx","components/Simulator/Simulator.tsx","hooks/useActivePageInterval.ts","hooks/useAssets.ts","utils/canvas.ts","components/App/App.tsx","hooks/useOnChange.ts","index.tsx"],"names":["createStitches","theme","colors","gray400","gray500","media","bp1","bp2","utils","fontVariant","value","split","size","lineHeight","fontSize","styled","css","globalCss","keyframes","getCssText","createTheme","config","useLatest","some","ref","useRef","current","useHandler","callback","callbackRef","useCallback","useWindowEvent","eventName","func","useEffect","window","addEventListener","removeEventListener","ElementType","ObjectType","LoadingStatus","NodePowerState","ICON_SIZE","elementsDescriptions","PNP","pins","pos","x","y","NPN","POWER","GROUND","INPUT","OUTPUT","DOT","defaultOptions","isInputVector","isOutputVector","simulate","debugDrawId","debugDrawAxis","debugShowFps","subtract","p1","p2","rotate","point","a","sinA","Math","sin","cosA","cos","getPinId","p","elId","pinIndex","getNodesSimulationState","elements","connections","inputSignals","isShortCircuit","getElement","pinId","element","find","id","Error","inputElements","filter","el","type","pinIdToNodes","Map","nodes","Set","pinId1","pinId2","node1","get","node2","mergedNode","delete","add","set","push","node","nodesList","values","map","state","IMPEDANCE","pinIdToNode","pin","hasChanges","setZoneState","SHORT_CIRCUIT","inputIndex","indexOf","pin1Zone","pin2Zone","pin3Zone","buildNodesState","useForceUpdate","incRef","useState","setInc","dropIndex","items","index","getGameIdStorageKey","gameId","watch","target","propertyKey","descriptor","originalMethod","this","GameModel","iAmWatcher","underWatch","before","getState","args","results","apply","needTriggerUpdate","after","triggerUpdate","draw","options","drawHandler","hoverElement","focusElement","wireElement","movingElement","mousePos","mouseState","panState","lastStateSnapshot","stateListeners","getNodesSimulationStateMemoized","memoize","gameModel","undefined","isMouseDown","isPan","localStorage","setItem","JSON","stringify","cursor","getCursor","shallowequal","focusTarget","ELEMENT","without","CONNECTION","connectionIndex","onMouseUp","position","movement","dX","dY","checkHover","isMoving","Boolean","activePin","startWiring","updateElement","im","wire","pullPos","checkOverlap","getNextId","isActual","listener","forceUpdate","selector","lastSelectedValue","selectedValue","actualSelectedValue","getLoadedState","clearState","error","console","hoverFound","hoverConnectionFound","x0","y0","PIN_DOT_RADIUS","connection","point1","getConnectionPinPosition","shiftedPoint2","shiftedMouse","atan2","rotatedPoint2","rotatedMouse","getElById","lastElement","last","match","parseInt","json","getItem","parse","savedOptions","optionsNames","Object","keys","defaults","pick","useGameState","already","selectorHandler","gameState","useRefState","getLiteralForSignalByIndex","elementsCount","isInput","charVariants","isVector","length","charAt","getLiteralForSignal","usePageActive","isActive","setActive","document","useDocumentEvent","newIsActive","visibilityState","_Table","textAlign","fontWeight","TruthTable","useMemo","inputs","outputs","renderInputs","renderOutputs","reverse","i","Array","from","rowIndex","cellIndex","floor","_Title","margin","SchemaErrors","errors","used","line","_Wrapper","display","alignItems","left","bottom","padding","marginRight","_Inputs","gap","variants","true","flexDirection","_InputLabel","gridTemplateAreas","width","height","userSelect","gridArea","_HiddenInput","opacity","_Bg","background","_Symbol","InputSignalsControl","enabled","checked","onChange","e","signals","updateInputSignals","top","borderRadius","_Button","flexShrink","border","color","whiteSpace","appearance","_Divider","Toolbar","onClick","preventDefault","addElement","disabled","deleteElementInFocus","reloadFromSave","saveGame","href","title","_Option","Option","_SimulateButton","marginBottom","active","OptionsPanel","update","updates","updateOptions","_Yes","_No","yesNo","DebugPanel","_App","flexGrow","overflow","_CanvasWrapper","_Canvas","enableScaling","transformOrigin","transform","_FpsCounter","right","pointerEvents","_Space","_Info","flexBasis","borderLeft","overflowY","getCurrentDensityFactor","devicePixelRatio","Simulator","canvasRef","canvasWrapperRef","drawFps","setDrawFps","densityFactor","checkSavedGame","loadGame","createEmptyModel","showFps","fps","ms","intervalId","setInterval","clearInterval","useActivePageInterval","assets","x1","images","status","NONE","x2","is2x","assetsSet","loadImages","remainLoad","LOADING","imgName","image","Image","src","onLoad","DONE","useAssets","convertScreenCoordsToAppCoords","actualizeDensityFactor","factor","ctx","canvas","getContext","getCanvasContext","save","clearRect","scale","translate","lineWidth","textBaseline","font","fillStyle","beginPath","moveTo","lineTo","strokeStyle","stroke","fillText","restore","isHover","isFocus","strokeRect","FOCUS_SIZE","el1","el2","pin1","pin2","isHovered","isInFocus","char","main","fallback","img","drawImage","isWire","arc","PI","closePath","fill","render","interval","debounce","maxWait","leading","trailing","updateSize","canvasWrapper","clientWidth","clientHeight","setDrawHandler","useLayoutEffect","setTimeout","style","button","onMouseDown","onMouseMove","clientX","clientY","movementX","movementY","onMouseLeave","resetCursorState","onContextMenu","allowOpenContextMenu","_GameTitle","_RemoveButton","marginLeft","getCurrentGameId","allowedIds","hash","location","trim","replace","includes","App","savedGames","currentGames","setCurrentGames","deps","initRef","useOnChange","currentGameId","setCurrentGameId","confirm","removeItem","newGameId","lastId","getNextGameId","assign","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e262b61.chunk.js","sourcesContent":["import { createStitches } from '@stitches/react';\n\nexport const {\n  styled,\n  css,\n  globalCss,\n  keyframes,\n  getCssText,\n  theme,\n  createTheme,\n  config,\n} = createStitches({\n  theme: {\n    colors: {\n      gray400: 'gainsboro',\n      gray500: 'lightgray',\n    },\n  },\n  media: {\n    bp1: '(min-width: 480px)',\n    bp2: '(min-width: 768px)',\n  },\n  utils: {\n    fontVariant: (value: `${number}|${number}`) => {\n      const [size, lineHeight] = value.split('|');\n\n      return {\n        fontSize: `${size}px`,\n        lineHeight: `${lineHeight}px`,\n      };\n    },\n  },\n});\n","import { useRef } from 'react';\n\nexport function useLatest<T>(some: T): { current: T } {\n  const ref = useRef(some);\n  ref.current = some;\n  return ref;\n}\n","import { useCallback } from 'react';\nimport { useLatest } from './useLatest';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useHandler<F extends (...args: any) => any>(callback: F): F {\n  const callbackRef = useLatest<F>(callback);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ((...args: any) => callbackRef.current(...args)) as any,\n    [],\n  );\n}\n","import { useEffect } from 'react';\n\nimport { useHandler } from 'hooks/useHandler';\n\nexport function useWindowEvent(\n  eventName: string,\n  callback: (...args: unknown[]) => void,\n) {\n  const func = useHandler(callback);\n\n  useEffect(() => {\n    window.addEventListener(eventName, func, false);\n\n    return () => {\n      window.removeEventListener(eventName, func, false);\n    };\n  }, [eventName, func]);\n}\n","export type GameId = `g${number}`;\n\nexport enum ElementType {\n  PNP = 'pnp',\n  NPN = 'npn',\n  POWER = 'power',\n  GROUND = 'ground',\n  INPUT = 'input',\n  OUTPUT = 'output',\n  DOT = 'dot',\n}\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n\nexport type BoxSize = {\n  width: number;\n  height: number;\n};\n\nexport type Cursor =\n  | 'move'\n  | 'pointer'\n  | 'drag'\n  | 'grab'\n  | 'grabbing'\n  | 'cross';\n\nexport enum ObjectType {\n  ELEMENT,\n  CONNECTION,\n}\n\nexport type ElementId = `el${number}`;\n\nexport type Element = {\n  type: ElementType;\n  id: ElementId;\n  pos: Coords;\n};\n\nexport type ConnectionPin = { elId: ElementId; pinIndex: number };\n\nexport type Connection = [ConnectionPin, ConnectionPin];\n\nexport type Pin = {\n  pos: Coords;\n};\n\nexport type ElementDescription = {\n  pins: Pin[];\n};\n\nexport type GameState = {\n  elements: Element[];\n  connections: Connection[];\n};\n\nexport type Options = {\n  isInputVector: boolean;\n  isOutputVector: boolean;\n  simulate: boolean;\n  debugDrawId: boolean;\n  debugDrawAxis: boolean;\n  debugShowFps: boolean;\n};\n\nexport enum LoadingStatus {\n  NONE,\n  LOADING,\n  DONE,\n}\n\nexport type AssetSet = {\n  images: Record<string, HTMLImageElement>;\n  status: LoadingStatus;\n};\n\nexport type Assets = {\n  x1: AssetSet;\n  x2: AssetSet;\n};\n","import { ElementType, ElementDescription, Options } from './types';\n\nexport const ICON_SIZE = 48;\nexport const FOCUS_SIZE = ICON_SIZE + 4;\nexport const PIN_DOT_RADIUS = 5;\nexport const MAX_FPS = 60;\n\nexport const elementsDescriptions: Record<ElementType, ElementDescription> = {\n  [ElementType.PNP]: {\n    pins: [\n      { pos: { x: 0.47, y: 0.94 } },\n      { pos: { x: -0.07, y: 0.32 } },\n      { pos: { x: 1.05, y: 0.32 } },\n    ],\n  },\n  [ElementType.NPN]: {\n    pins: [\n      { pos: { x: 0.47, y: 1 } },\n      { pos: { x: -0.07, y: 0.33 } },\n      { pos: { x: 1.05, y: 0.32 } },\n    ],\n  },\n  [ElementType.POWER]: {\n    pins: [{ pos: { x: 0.52, y: 0.8 } }],\n  },\n  [ElementType.GROUND]: {\n    pins: [{ pos: { x: 0.46, y: 0.15 } }],\n  },\n  [ElementType.INPUT]: {\n    pins: [{ pos: { x: 0.5, y: 0.8 } }],\n  },\n  [ElementType.OUTPUT]: {\n    pins: [{ pos: { x: 0.2, y: 0.5 } }],\n  },\n  [ElementType.DOT]: {\n    pins: [{ pos: { x: 0.5, y: 0.5 } }],\n  },\n};\n\nexport const defaultOptions: Options = {\n  isInputVector: false,\n  isOutputVector: false,\n  simulate: false,\n  debugDrawId: false,\n  debugDrawAxis: false,\n  debugShowFps: false,\n};\n","import {\n  Connection,\n  ConnectionPin,\n  Element,\n  ElementId,\n  ElementType,\n} from 'common/types';\n\ntype PinId = `${ElementId}:${number}`;\n\ntype Node = PinId[];\n\nenum NodePowerState {\n  IMPEDANCE,\n  GROUND,\n  POWER,\n  SHORT_CIRCUIT,\n}\n\nexport type NodeState = {\n  state: NodePowerState;\n  pins: PinId[];\n};\n\nfunction getPinId(p: ConnectionPin): PinId {\n  return `${p.elId}:${p.pinIndex}`;\n}\n\nexport function getNodesSimulationState(\n  elements: Element[],\n  connections: Connection[],\n  inputSignals: boolean[],\n): NodeState[] {\n  let isShortCircuit = false;\n\n  function getElement(pinId: PinId): Element {\n    const elId = pinId.split(':')[0];\n\n    const element = elements.find(({ id }) => id === elId);\n\n    if (!element) {\n      throw new Error('No element');\n    }\n\n    return element;\n  }\n\n  function buildNodesState(nodes: NodeState[]) {\n    const pinIdToNode = new Map<PinId, NodeState | undefined>();\n\n    for (const node of nodes) {\n      for (const pin of node.pins) {\n        pinIdToNode.set(pin, node);\n      }\n    }\n\n    let hasChanges = true;\n\n    function setZoneState(node: NodeState, state: NodePowerState): void {\n      if (\n        state === NodePowerState.POWER &&\n        node.state === NodePowerState.GROUND\n      ) {\n        isShortCircuit = true;\n        node.state = NodePowerState.SHORT_CIRCUIT;\n        return;\n      }\n\n      if (\n        state === NodePowerState.GROUND &&\n        node.state === NodePowerState.POWER\n      ) {\n        isShortCircuit = true;\n        node.state = NodePowerState.SHORT_CIRCUIT;\n        return;\n      }\n\n      if (node.state !== state) {\n        node.state = state;\n        hasChanges = true;\n      } else {\n        hasChanges = false;\n      }\n    }\n\n    while (hasChanges) {\n      hasChanges = false;\n\n      for (const node of nodes) {\n        for (const pin of node.pins) {\n          const element = getElement(pin);\n\n          switch (element.type) {\n            case ElementType.INPUT: {\n              const inputIndex = inputElements.indexOf(element);\n              const value = inputSignals[inputIndex];\n              setZoneState(\n                node,\n                value ? NodePowerState.POWER : NodePowerState.GROUND,\n              );\n              break;\n            }\n            case ElementType.POWER:\n              setZoneState(node, NodePowerState.POWER);\n              break;\n            case ElementType.GROUND:\n              setZoneState(node, NodePowerState.GROUND);\n              break;\n            case ElementType.NPN: {\n              // Maybe I should iterate over elements instead of zones?\n              const pin1Zone = pinIdToNode.get(`${element.id}:0`);\n              const pin2Zone = pinIdToNode.get(`${element.id}:1`);\n              const pin3Zone = pinIdToNode.get(`${element.id}:2`);\n\n              if (\n                pin1Zone &&\n                pin1Zone.state === NodePowerState.GROUND &&\n                pin2Zone &&\n                pin2Zone.state === NodePowerState.POWER &&\n                pin3Zone\n              ) {\n                setZoneState(pin3Zone, NodePowerState.POWER);\n              }\n              break;\n            }\n            case ElementType.PNP: {\n              // Maybe I should iterate over elements instead of zones?\n              const pin1Zone = pinIdToNode.get(`${element.id}:0`);\n              const pin2Zone = pinIdToNode.get(`${element.id}:1`);\n              const pin3Zone = pinIdToNode.get(`${element.id}:2`);\n\n              if (\n                pin1Zone &&\n                pin1Zone.state === NodePowerState.POWER &&\n                pin2Zone &&\n                pin2Zone.state === NodePowerState.GROUND &&\n                pin3Zone\n              ) {\n                setZoneState(pin3Zone, NodePowerState.GROUND);\n              }\n              break;\n            }\n          }\n\n          if (isShortCircuit) {\n            return;\n          }\n        }\n      }\n      break;\n    }\n  }\n\n  const inputElements = elements.filter((el) => el.type === ElementType.INPUT);\n  const pinIdToNodes = new Map<PinId, Node>();\n  const nodes = new Set<Node>();\n\n  for (const [p1, p2] of connections) {\n    const pinId1 = getPinId(p1);\n    const pinId2 = getPinId(p2);\n\n    const node1 = pinIdToNodes.get(pinId1);\n    const node2 = pinIdToNodes.get(pinId2);\n\n    if (node1 && node2) {\n      const mergedNode = [...node1, ...node2];\n\n      nodes.delete(node1);\n      nodes.delete(node2);\n      nodes.add(mergedNode);\n\n      for (const pinId of mergedNode) {\n        pinIdToNodes.set(pinId, mergedNode);\n      }\n    } else if (node1) {\n      node1.push(pinId2);\n      pinIdToNodes.set(pinId2, node1);\n    } else if (node2) {\n      node2.push(pinId1);\n      pinIdToNodes.set(pinId1, node2);\n    } else {\n      const node = [pinId1, pinId2];\n      nodes.add(node);\n      pinIdToNodes.set(pinId1, node);\n      pinIdToNodes.set(pinId2, node);\n    }\n  }\n\n  const nodesList = [...nodes.values()].map((pins) => ({\n    state: NodePowerState.IMPEDANCE,\n    pins,\n  }));\n\n  buildNodesState(nodesList);\n\n  return nodesList;\n}\n","import type { Point } from 'common/types';\n\nexport function subtract(p1: Point, p2: Point): Point {\n  return {\n    x: p1.x - p2.x,\n    y: p1.y - p2.y,\n  };\n}\n\nexport function rotate(point: Point, a: number): Point {\n  const sinA = Math.sin(a);\n  const cosA = Math.cos(a);\n\n  return {\n    x: point.x * cosA - point.y * sinA,\n    y: point.x * sinA + point.y * cosA,\n  };\n}\n","import { useCallback, useRef, useState } from 'react';\n\nexport function useForceUpdate() {\n  const incRef = useRef(0);\n  const [, setInc] = useState(incRef.current);\n\n  return useCallback(() => {\n    incRef.current += 1;\n    setInc(incRef.current);\n  }, []);\n}\n","import { pick, defaults, without, last } from 'lodash-es';\nimport im from 'immer';\nimport memoize from 'memoize-one';\nimport shallowequal from 'shallowequal';\n\nimport {\n  Connection,\n  Coords,\n  Cursor,\n  Element,\n  ElementId,\n  ElementType,\n  GameId,\n  ObjectType,\n  Options,\n  Point,\n} from 'common/types';\nimport {\n  defaultOptions,\n  elementsDescriptions,\n  ICON_SIZE,\n  PIN_DOT_RADIUS,\n} from 'common/data';\nimport { rotate, subtract } from 'utils/trigano';\nimport { getNodesSimulationState } from 'utils/simulation';\nimport { useForceUpdate } from 'hooks/useForceUpdate';\nimport { useHandler } from 'hooks/useHandler';\n\ntype HoverElement =\n  | {\n      type: ObjectType.ELEMENT;\n      elId: ElementId;\n      activePin: { index: number } | undefined;\n    }\n  | {\n      type: ObjectType.CONNECTION;\n      connectionIndex: number;\n    };\n\ntype FocusElement =\n  | {\n      type: ObjectType.ELEMENT;\n      elId: ElementId;\n    }\n  | {\n      type: ObjectType.CONNECTION;\n      connectionIndex: number;\n    };\n\ntype WireElement = {\n  elId: ElementId;\n  pinIndex: number;\n  pullPos: Point | undefined;\n};\n\ntype ElementPointer = {\n  elId: ElementId;\n};\n\ntype MouseState = {\n  isMouseDown: boolean;\n};\n\ntype PanState = {\n  isPan: boolean;\n};\n\nfunction dropIndex<T>(items: T[], dropIndex: number): T[] {\n  return items.filter((value, index) => index !== dropIndex);\n}\n\nfunction getGameIdStorageKey(gameId: GameId): string {\n  return `sch_game_${gameId}`;\n}\n\nexport type GameModelState = {\n  elements: Element[];\n  connections: Connection[];\n  inputSignals: boolean[];\n  pos: Point;\n  options: Options;\n  hoverElement: HoverElement | undefined;\n  focusElement: FocusElement | undefined;\n  wireElement: WireElement | undefined;\n  movingElement: ElementPointer | undefined;\n  panState: PanState;\n  cursor: Cursor | undefined;\n};\n\nfunction watch(\n  target: GameModel,\n  propertyKey: string,\n  descriptor: PropertyDescriptor,\n) {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = function watch(...args: unknown[]) {\n    if (!(this instanceof GameModel)) {\n      throw new Error();\n    }\n\n    let iAmWatcher = false;\n\n    if (!this.underWatch) {\n      iAmWatcher = true;\n      this.underWatch = true;\n    }\n\n    const before = this.getState();\n    const results = originalMethod.apply(this, args);\n\n    if (iAmWatcher) {\n      if (!this.needTriggerUpdate) {\n        const after = this.getState();\n        this.needTriggerUpdate = before !== after;\n      }\n\n      if (this.needTriggerUpdate) {\n        this.needTriggerUpdate = false;\n        this.triggerUpdate();\n      }\n\n      this.underWatch = false;\n    }\n\n    return results;\n  };\n}\n\nfunction draw(\n  target: GameModel,\n  propertyKey: string,\n  descriptor: PropertyDescriptor,\n) {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = function draw(...args: unknown[]) {\n    if (!(this instanceof GameModel)) {\n      throw new Error();\n    }\n\n    const results = originalMethod.apply(this, args);\n\n    if (this.underWatch) {\n      this.needTriggerUpdate = true;\n    } else {\n      this.triggerUpdate();\n    }\n\n    return results;\n  };\n}\n\nexport class GameModel {\n  public static createEmptyModel(gameId: GameId): GameModel {\n    return new GameModel({\n      gameId,\n      pos: { x: 0, y: 0 },\n      elements: [],\n      connections: [],\n      inputSignals: [],\n      options: defaultOptions,\n    });\n  }\n\n  protected static getLoadedState(gameId: GameId) {\n    const json = localStorage.getItem(getGameIdStorageKey(gameId));\n\n    if (!json) {\n      throw new Error('No saved game');\n    }\n\n    const {\n      pos,\n      elements,\n      inputSignals,\n      connections,\n      options: savedOptions,\n    } = JSON.parse(json);\n\n    const optionsNames = Object.keys(defaultOptions);\n    const options = defaults(pick(savedOptions, optionsNames), defaultOptions);\n\n    return {\n      gameId,\n      pos,\n      elements,\n      connections,\n      inputSignals,\n      options,\n    };\n  }\n\n  public static checkSavedGame(gameId: GameId): boolean {\n    const json = localStorage.getItem(getGameIdStorageKey(gameId));\n    return Boolean(json);\n  }\n\n  public static loadGame(gameId: GameId): GameModel {\n    return new GameModel(GameModel.getLoadedState(gameId));\n  }\n\n  public underWatch = false;\n  public needTriggerUpdate = false;\n\n  private gameId: GameId;\n  private drawHandler?: () => void;\n\n  private elements: Element[];\n  private connections: Connection[];\n  private inputSignals: boolean[];\n  private pos: Point;\n  private options: Options;\n  private hoverElement: HoverElement | undefined;\n  private focusElement: FocusElement | undefined;\n  private wireElement: WireElement | undefined;\n  private movingElement: ElementPointer | undefined;\n  private mousePos: Point | undefined;\n  private mouseState: MouseState;\n  private panState: PanState;\n  private lastStateSnapshot: GameModelState | undefined;\n\n  public stateListeners: {\n    forceUpdate: () => void;\n    selector: (state: GameModelState) => unknown;\n    lastSelectedValue: unknown | undefined;\n    actualSelectedValue: { value: unknown } | undefined;\n    isActual: boolean;\n  }[];\n\n  private constructor({\n    gameId,\n    elements,\n    connections,\n    inputSignals,\n    pos,\n    options,\n  }: {\n    gameId: GameId;\n    elements: Element[];\n    connections: Connection[];\n    inputSignals: boolean[];\n    pos: Point;\n    options: Options;\n  }) {\n    this.gameId = gameId;\n\n    this.elements = elements;\n    this.connections = connections;\n    this.inputSignals = inputSignals;\n    this.pos = pos;\n    this.options = options;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gameModel = this;\n\n    this.hoverElement = undefined;\n    this.focusElement = undefined;\n    this.wireElement = undefined;\n    this.movingElement = undefined;\n    this.mouseState = {\n      isMouseDown: false,\n    };\n    this.panState = {\n      isPan: false,\n    };\n    this.mousePos = undefined;\n    this.stateListeners = [];\n    this.lastStateSnapshot = undefined;\n  }\n\n  public setDrawHandler(drawHandler: (() => void) | undefined) {\n    this.drawHandler = drawHandler;\n  }\n\n  public saveGame(): void {\n    localStorage.setItem(\n      getGameIdStorageKey(this.gameId),\n      JSON.stringify({\n        pos: this.pos,\n        elements: this.elements,\n        inputSignals: this.inputSignals,\n        connections: this.connections,\n        options: this.options,\n      }),\n    );\n  }\n\n  public getState(): GameModelState {\n    const state = {\n      elements: this.elements,\n      connections: this.connections,\n      inputSignals: this.inputSignals,\n      pos: this.pos,\n      options: this.options,\n      hoverElement: this.hoverElement,\n      focusElement: this.focusElement,\n      wireElement: this.wireElement,\n      movingElement: this.movingElement,\n      panState: this.panState,\n      cursor: this.getCursor(),\n    };\n\n    if (\n      !this.lastStateSnapshot ||\n      !shallowequal(state, this.lastStateSnapshot)\n    ) {\n      this.lastStateSnapshot = state;\n    }\n\n    return this.lastStateSnapshot;\n  }\n\n  @watch\n  public deleteElementInFocus(): void {\n    const focusTarget = this.focusElement;\n\n    if (!focusTarget) {\n      return;\n    }\n\n    switch (focusTarget.type) {\n      case ObjectType.ELEMENT: {\n        this.connections = this.connections.filter(\n          ([p1, p2]) =>\n            p1.elId !== focusTarget.elId && p2.elId !== focusTarget.elId,\n        );\n\n        const element = this.elements.find(({ id }) => id === focusTarget.elId);\n\n        if (!element) {\n          throw new Error();\n        }\n\n        if (element.type === ElementType.INPUT) {\n          const inputIndex = this.elements\n            .filter(({ type }) => type === ElementType.INPUT)\n            .indexOf(element);\n\n          this.inputSignals = dropIndex(this.inputSignals, inputIndex);\n        }\n\n        this.elements = without(this.elements, element);\n        break;\n      }\n      case ObjectType.CONNECTION:\n        this.connections = dropIndex(\n          this.connections,\n          focusTarget.connectionIndex,\n        );\n        break;\n    }\n\n    this.focusElement = undefined;\n  }\n\n  @draw\n  public updateInputSignals(inputSignals: boolean[]): void {\n    this.inputSignals = inputSignals;\n  }\n\n  @draw\n  public updateOptions(options: Options): void {\n    this.options = options;\n  }\n\n  public onMouseDown(): void {\n    if (this.mouseState.isMouseDown) {\n      this.onMouseUp();\n    }\n\n    this.mouseState.isMouseDown = true;\n  }\n\n  @watch\n  public onMouseMove({\n    position: { x, y },\n    movement: { x: dX, y: dY },\n  }: {\n    position: Point;\n    movement: Point;\n  }): void {\n    this.mousePos = {\n      x,\n      y,\n    };\n\n    this.checkHover();\n\n    const isMoving = Boolean(this.movingElement);\n\n    if (this.mouseState.isMouseDown) {\n      if (\n        !isMoving &&\n        !this.wireElement &&\n        this.hoverElement &&\n        this.hoverElement.type === ObjectType.ELEMENT &&\n        this.hoverElement.activePin\n      ) {\n        this.startWiring({\n          elId: this.hoverElement.elId,\n          pinIndex: this.hoverElement.activePin.index,\n        });\n      }\n\n      if (\n        !isMoving &&\n        !this.wireElement &&\n        this.hoverElement &&\n        this.hoverElement.type === ObjectType.ELEMENT\n      ) {\n        this.movingElement = {\n          elId: this.hoverElement.elId,\n        };\n\n        this.focusElement = {\n          type: ObjectType.ELEMENT,\n          elId: this.hoverElement.elId,\n        };\n      }\n\n      if (!this.wireElement && !this.movingElement && !this.panState.isPan) {\n        this.panState = {\n          isPan: true,\n        };\n      }\n\n      const { movingElement } = this;\n      if (movingElement) {\n        this.updateElement(movingElement.elId, (el) => {\n          el.pos.x += dX;\n          el.pos.y += dY;\n        });\n      } else if (!this.wireElement) {\n        this.pos = {\n          x: this.pos.x + dX,\n          y: this.pos.y + dY,\n        };\n      }\n    } else if (this.panState.isPan) {\n      this.panState = {\n        isPan: false,\n      };\n    }\n\n    if (this.wireElement) {\n      this.wireElement = im(this.wireElement, (wire) => {\n        if (wire.pullPos && this.mousePos) {\n          wire.pullPos.x = this.mousePos.x;\n          wire.pullPos.y = this.mousePos.y;\n        } else {\n          wire.pullPos = this.mousePos;\n        }\n      });\n    }\n  }\n\n  @watch\n  public onMouseUp() {\n    this.mouseState = {\n      isMouseDown: false,\n    };\n\n    // TODO: Why focus resetting here?\n    if (\n      this.focusElement &&\n      this.focusElement.type === ObjectType.ELEMENT &&\n      !this.wireElement &&\n      !this.movingElement\n    ) {\n      this.focusElement = undefined;\n    }\n\n    if (this.movingElement) {\n      this.movingElement = undefined;\n    }\n\n    if (this.panState.isPan) {\n      this.panState = {\n        isPan: false,\n      };\n    }\n\n    if (this.wireElement) {\n      if (\n        this.hoverElement &&\n        this.hoverElement.type === ObjectType.ELEMENT &&\n        this.hoverElement.activePin &&\n        this.wireElement.elId !== this.hoverElement.elId\n      ) {\n        this.connections = [\n          ...this.connections,\n          [\n            {\n              elId: this.hoverElement.elId,\n              pinIndex: this.hoverElement.activePin.index,\n            },\n            {\n              elId: this.wireElement.elId,\n              pinIndex: this.wireElement.pinIndex,\n            },\n          ],\n        ];\n      }\n\n      this.wireElement = undefined;\n    } else if (!this.wireElement) {\n      if (\n        this.hoverElement &&\n        this.hoverElement.type === ObjectType.ELEMENT &&\n        this.hoverElement.activePin\n      ) {\n        this.startWiring({\n          elId: this.hoverElement.elId,\n          pinIndex: this.hoverElement.activePin.index,\n        });\n      }\n\n      if (this.hoverElement) {\n        if (\n          this.hoverElement.type === ObjectType.ELEMENT &&\n          !this.hoverElement.activePin\n        ) {\n          if (\n            !this.focusElement ||\n            this.focusElement.type !== ObjectType.ELEMENT ||\n            this.focusElement.elId !== this.hoverElement.elId\n          ) {\n            this.focusElement = {\n              type: ObjectType.ELEMENT,\n              elId: this.hoverElement.elId,\n            };\n          }\n        } else if (this.hoverElement.type === ObjectType.CONNECTION) {\n          if (\n            !this.focusElement ||\n            this.focusElement.type !== ObjectType.CONNECTION ||\n            this.focusElement.connectionIndex !==\n              this.hoverElement.connectionIndex\n          ) {\n            this.focusElement = {\n              type: ObjectType.CONNECTION,\n              connectionIndex: this.hoverElement.connectionIndex,\n            };\n          }\n        }\n      }\n    }\n  }\n\n  public getCursor(): Cursor {\n    const { wireElement, hoverElement, panState } = this;\n\n    if (wireElement) {\n      return 'pointer';\n    }\n\n    if (hoverElement) {\n      if (hoverElement.type === ObjectType.CONNECTION) {\n        return 'move';\n      }\n\n      if (hoverElement.type === ObjectType.ELEMENT) {\n        if (hoverElement.activePin) {\n          return 'pointer';\n        }\n\n        return 'move';\n      }\n\n      if (panState.isPan) {\n        return 'grabbing';\n      }\n    }\n\n    return 'move';\n  }\n\n  @draw\n  public addElement(type: ElementType) {\n    const pos = { ...this.pos };\n\n    while (this.checkOverlap(pos)) {\n      pos.x += ICON_SIZE + 20;\n    }\n\n    this.elements = [\n      ...this.elements,\n      {\n        type,\n        id: this.getNextId(),\n        pos,\n      },\n    ];\n\n    this.inputSignals = [...this.inputSignals, false];\n  }\n\n  @watch\n  private startWiring({\n    elId,\n    pinIndex,\n  }: {\n    elId: ElementId;\n    pinIndex: number;\n  }) {\n    this.focusElement = {\n      type: ObjectType.ELEMENT,\n      elId,\n    };\n\n    this.wireElement = {\n      elId,\n      pinIndex,\n      pullPos: this.mousePos,\n    };\n  }\n\n  @watch\n  public resetCursorState(): void {\n    this.movingElement = undefined;\n    this.wireElement = undefined;\n\n    if (this.mouseState.isMouseDown) {\n      this.mouseState = {\n        isMouseDown: false,\n      };\n    }\n\n    if (this.panState.isPan) {\n      this.panState = {\n        isPan: false,\n      };\n    }\n  }\n\n  public triggerUpdate() {\n    if (this.drawHandler) {\n      this.drawHandler();\n    }\n\n    const state = this.getState();\n\n    for (const listener of this.stateListeners) {\n      listener.isActual = false;\n    }\n\n    for (const listener of this.stateListeners) {\n      if (listener.isActual) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      const { forceUpdate, selector, lastSelectedValue } = listener;\n\n      const selectedValue = selector(state);\n\n      if (!shallowequal(selectedValue, lastSelectedValue)) {\n        listener.actualSelectedValue = { value: selectedValue };\n        forceUpdate();\n      }\n    }\n\n    for (const listener of this.stateListeners) {\n      listener.actualSelectedValue = undefined;\n    }\n  }\n\n  @draw\n  public clearState() {\n    this.pos = { x: 0, y: 0 };\n    this.elements = [];\n    this.connections = [];\n    this.inputSignals = [];\n    this.hoverElement = undefined;\n    this.focusElement = undefined;\n    this.movingElement = undefined;\n    this.wireElement = undefined;\n    this.panState.isPan = false;\n    this.mouseState.isMouseDown = false;\n  }\n\n  @draw\n  public reloadFromSave() {\n    try {\n      const { elements, connections, pos, options, inputSignals } =\n        GameModel.getLoadedState(this.gameId);\n\n      this.clearState();\n\n      this.elements = elements;\n      this.connections = connections;\n      this.pos = pos;\n      this.options = options;\n      this.inputSignals = inputSignals;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(\"Can't load state:\", error);\n    }\n  }\n\n  @watch\n  private updateElement(\n    elId: ElementId,\n    callback: (el: Element) => void,\n  ): void {\n    this.elements = im(this.elements, (elements) => {\n      const el = elements.find((el) => el.id === elId);\n\n      if (!el) {\n        throw new Error(`Element ${elId} is not found`);\n      }\n\n      callback(el);\n    });\n  }\n\n  @watch\n  private checkHover(): void {\n    if (!this.mousePos) {\n      if (this.hoverElement) {\n        this.hoverElement = undefined;\n      }\n      return;\n    }\n\n    const { x, y } = subtract(this.mousePos, this.pos);\n\n    let hoverFound = false;\n    let hoverConnectionFound = false;\n\n    for (const element of this.elements) {\n      const { pins } = elementsDescriptions[element.type];\n\n      const x0 = element.pos.x - ICON_SIZE / 2;\n      const y0 = element.pos.y - ICON_SIZE / 2;\n\n      for (const pin of pins) {\n        if (\n          (x0 + pin.pos.x * ICON_SIZE - x) ** 2 +\n            (y0 + pin.pos.y * ICON_SIZE - y) ** 2 <\n          (PIN_DOT_RADIUS + 4) ** 2\n        ) {\n          const pinIndex = pins.indexOf(pin);\n\n          // before set check if already hovered\n          if (\n            !this.hoverElement ||\n            this.hoverElement.type !== ObjectType.ELEMENT ||\n            this.hoverElement.elId !== element.id ||\n            this.hoverElement.activePin?.index !== pinIndex\n          ) {\n            this.hoverElement = {\n              type: ObjectType.ELEMENT,\n              elId: element.id,\n              activePin: {\n                index: pinIndex,\n              },\n            };\n          }\n          hoverFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!hoverFound) {\n      for (const element of this.elements) {\n        const x0 = element.pos.x - ICON_SIZE / 2;\n        const y0 = element.pos.y - ICON_SIZE / 2;\n\n        if (x > x0 && x < x0 + ICON_SIZE && y > y0 && y < y0 + ICON_SIZE) {\n          // before set check if already hovered\n          if (\n            !this.hoverElement ||\n            this.hoverElement.type !== ObjectType.ELEMENT ||\n            this.hoverElement.elId !== element.id ||\n            this.hoverElement.activePin\n          ) {\n            this.hoverElement = {\n              type: ObjectType.ELEMENT,\n              elId: element.id,\n              activePin: undefined,\n            };\n          }\n          hoverFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!hoverFound) {\n      for (const connection of this.connections) {\n        const [p1, p2] = connection;\n\n        const point1 = this.getConnectionPinPosition(p1);\n        const point2 = this.getConnectionPinPosition(p2);\n\n        const shiftedPoint2 = subtract(point2, point1);\n        const shiftedMouse = subtract({ x, y }, point1);\n\n        const a = Math.atan2(shiftedPoint2.y, shiftedPoint2.x);\n\n        const rotatedPoint2 = rotate(shiftedPoint2, -a);\n        const rotatedMouse = rotate(shiftedMouse, -a);\n\n        const GAP = 10;\n\n        if (\n          rotatedMouse.x >= -GAP &&\n          rotatedMouse.x <= rotatedPoint2.x + GAP &&\n          rotatedMouse.y > -GAP &&\n          rotatedMouse.y < GAP\n        ) {\n          const connectionIndex = this.connections.indexOf(connection);\n\n          // before set check if already hovered\n          if (\n            !this.hoverElement ||\n            this.hoverElement.type !== ObjectType.CONNECTION ||\n            this.hoverElement.connectionIndex !== connectionIndex\n          ) {\n            this.hoverElement = {\n              type: ObjectType.CONNECTION,\n              connectionIndex,\n            };\n          }\n          hoverConnectionFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!hoverFound && !hoverConnectionFound) {\n      if (this.hoverElement) {\n        this.hoverElement = undefined;\n      }\n    }\n  }\n\n  private getConnectionPinPosition({\n    elId,\n    pinIndex,\n  }: {\n    elId: ElementId;\n    pinIndex: number;\n  }): Coords {\n    const el = this.getElById(elId);\n\n    const pin = elementsDescriptions[el.type].pins[pinIndex];\n\n    return {\n      x: el.pos.x + (pin.pos.x - 0.5) * ICON_SIZE,\n      y: el.pos.y + (pin.pos.y - 0.5) * ICON_SIZE,\n    };\n  }\n\n  private getElById(id: ElementId): Element {\n    const el = this.elements.find((el) => el.id === id);\n\n    if (!el) {\n      throw new Error('Element not found');\n    }\n\n    return el;\n  }\n\n  private checkOverlap(point: Coords): boolean {\n    for (const { pos } of this.elements) {\n      if (\n        (pos.x - point.x) ** 2 + (pos.y - point.y) ** 2 <\n        (ICON_SIZE / 2) ** 2\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private getNextId(): ElementId {\n    const lastElement = last(this.elements);\n\n    if (!lastElement) {\n      return `el1`;\n    }\n\n    const match = lastElement.id.match(/^el(\\d+)$/);\n\n    if (!match) {\n      throw new Error();\n    }\n\n    return `el${parseInt(match[1], 10) + 1}`;\n  }\n\n  public allowOpenContextMenu(): boolean {\n    return !this.hoverElement && !this.wireElement && !this.panState.isPan;\n  }\n\n  private getNodesSimulationStateMemoized = memoize(getNodesSimulationState);\n\n  private getSimulation() {\n    if (!this.options.simulate) {\n      return undefined;\n    }\n\n    return this.getNodesSimulationStateMemoized(\n      this.elements,\n      this.connections,\n      this.inputSignals,\n    );\n  }\n}\n\nexport function useGameState<T>(\n  gameModel: GameModel,\n  selector: (gameState: GameModelState) => T,\n): T {\n  const forceUpdate = useForceUpdate();\n\n  const already = gameModel.stateListeners.find(\n    (listener) => listener.forceUpdate === forceUpdate,\n  );\n\n  const selectorHandler = useHandler(selector);\n\n  const gameState = gameModel.getState();\n\n  if (already) {\n    already.isActual = true;\n    let selectedValue;\n\n    if (already.actualSelectedValue) {\n      selectedValue = already.actualSelectedValue.value as T;\n    } else {\n      selectedValue = selectorHandler(gameState);\n    }\n\n    already.lastSelectedValue = selectedValue;\n    already.isActual = true;\n\n    return selectedValue;\n  }\n\n  const selectedValue = selectorHandler(gameState);\n\n  gameModel.stateListeners.push({\n    forceUpdate,\n    selector: selectorHandler,\n    actualSelectedValue: undefined,\n    lastSelectedValue: selectedValue,\n    isActual: true,\n  });\n\n  return selectedValue;\n}\n","import { useRef } from 'react';\n\nexport function useRefState<D>(value: D): D {\n  const ref = useRef<D>(value);\n  return ref.current;\n}\n","import { Element, ElementType } from './types';\n\nconst INPUT_LITERALS = 'ABCDEFGHIJ';\nconst OUTPUT_LITERALS = 'YZXWVUTSRQ';\n\nexport function getLiteralForSignalByIndex({\n  elementsCount,\n  index,\n  isInput,\n  isVector,\n}: {\n  elementsCount: number;\n  index: number;\n  isInput: boolean;\n  isVector: boolean;\n}) {\n  const charVariants = isInput ? INPUT_LITERALS : OUTPUT_LITERALS;\n\n  if (!isVector && elementsCount <= charVariants.length) {\n    return charVariants.charAt(index);\n  }\n\n  return isInput ? `I${index}` : `Y${index}`;\n}\n\nexport function getLiteralForSignal(\n  elements: Element[],\n  element: Element,\n  isVector = false,\n): string {\n  return getLiteralForSignalByIndex({\n    elementsCount: elements.length,\n    index: elements.indexOf(element),\n    isInput: element.type === ElementType.INPUT,\n    isVector,\n  });\n}\n","import {\n  BoxSize,\n  Element,\n  ElementId,\n  ElementType,\n  ObjectType,\n  Assets,\n} from 'common/types';\nimport { getLiteralForSignal } from 'common/common';\nimport { elementsDescriptions } from 'common/data';\nimport { GameModelState } from 'models/GameModel';\n\nconst ICON_SIZE = 48;\nconst FOCUS_SIZE = ICON_SIZE + 4;\nconst PIN_DOT_RADIUS = 5;\n\nexport function render(\n  ctx: CanvasRenderingContext2D,\n  {\n    gameState,\n    size,\n    densityFactor,\n    assets,\n  }: {\n    gameState: GameModelState;\n    size: BoxSize;\n    densityFactor: number;\n    assets: Assets;\n  },\n) {\n  const {\n    pos,\n    elements,\n    connections,\n    focusElement,\n    hoverElement,\n    wireElement,\n    options,\n  } = gameState;\n\n  function getElById(elId: ElementId): Element {\n    const el = elements.find((el) => el.id === elId);\n\n    if (!el) {\n      throw new Error(`Element ${elId} is not found`);\n    }\n\n    return el;\n  }\n\n  ctx.save();\n  ctx.clearRect(0, 0, size.width * densityFactor, size.height * densityFactor);\n\n  if (densityFactor !== 1) {\n    ctx.scale(densityFactor, densityFactor);\n  }\n\n  ctx.translate(\n    Math.floor(size.width / 2) + pos.x,\n    Math.floor(size.height / 2) + pos.y,\n  );\n\n  if (options.debugDrawAxis) {\n    ctx.save();\n\n    ctx.lineWidth = 1;\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.font = '15px sans-serif';\n    ctx.fillStyle = '#333';\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(100, 0);\n    ctx.moveTo(95, -5);\n    ctx.lineTo(100, 0);\n    ctx.moveTo(95, 5);\n    ctx.lineTo(100, 0);\n    ctx.strokeStyle = '#0f0';\n    ctx.stroke();\n    ctx.fillText('X', 90, 15);\n\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(0, 100);\n    ctx.moveTo(-5, 95);\n    ctx.lineTo(0, 100);\n    ctx.moveTo(5, 95);\n    ctx.lineTo(0, 100);\n    ctx.strokeStyle = '#00f';\n    ctx.stroke();\n    ctx.fillText('Y', 12, 90);\n\n    ctx.restore();\n  }\n\n  for (const element of elements) {\n    const { pos } = element;\n\n    const isHover =\n      hoverElement &&\n      hoverElement.type === ObjectType.ELEMENT &&\n      element.id === hoverElement.elId;\n\n    const isFocus =\n      focusElement &&\n      focusElement.type === ObjectType.ELEMENT &&\n      focusElement.elId === element.id;\n\n    if (isHover || isFocus) {\n      ctx.save();\n\n      if (isHover) {\n        ctx.strokeStyle = isFocus ? '#7f7fff' : '#e5e5e5';\n        ctx.lineWidth = 3;\n      } else {\n        ctx.strokeStyle = '#bebeff';\n        ctx.lineWidth = 2;\n      }\n\n      ctx.strokeRect(\n        pos.x - FOCUS_SIZE / 2,\n        pos.y - FOCUS_SIZE / 2,\n        FOCUS_SIZE,\n        FOCUS_SIZE,\n      );\n      ctx.restore();\n    }\n  }\n\n  let index = 0;\n  for (const [p1, p2] of connections) {\n    const el1 = getElById(p1.elId);\n    const el2 = getElById(p2.elId);\n\n    const pin1 = elementsDescriptions[el1.type].pins[p1.pinIndex];\n    const pin2 = elementsDescriptions[el2.type].pins[p2.pinIndex];\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(\n      el1.pos.x - ICON_SIZE / 2 + pin1.pos.x * ICON_SIZE,\n      el1.pos.y - ICON_SIZE / 2 + pin1.pos.y * ICON_SIZE,\n    );\n    ctx.lineTo(\n      el2.pos.x - ICON_SIZE / 2 + pin2.pos.x * ICON_SIZE,\n      el2.pos.y - ICON_SIZE / 2 + pin2.pos.y * ICON_SIZE,\n    );\n\n    const isHovered =\n      hoverElement &&\n      hoverElement.type === ObjectType.CONNECTION &&\n      hoverElement.connectionIndex === index;\n\n    const isInFocus =\n      focusElement &&\n      focusElement.type === ObjectType.CONNECTION &&\n      focusElement.connectionIndex === index;\n\n    ctx.lineWidth = isHovered || isInFocus ? 3 : 1;\n\n    if (isHovered && isInFocus) {\n      ctx.strokeStyle = '#8080ff';\n    } else if (isInFocus) {\n      ctx.strokeStyle = '#bfbfff';\n    } else {\n      ctx.strokeStyle = '#333';\n    }\n\n    ctx.stroke();\n    ctx.restore();\n\n    index += 1;\n  }\n\n  if (wireElement) {\n    const { elId, pinIndex } = wireElement;\n    const el = getElById(elId);\n\n    const { pos } = elementsDescriptions[el.type].pins[pinIndex];\n\n    const x0 = pos.x * ICON_SIZE + el.pos.x - ICON_SIZE / 2;\n    const y0 = pos.y * ICON_SIZE + el.pos.y - ICON_SIZE / 2;\n\n    if (wireElement.pullPos) {\n      const { x, y } = wireElement.pullPos;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = '#888';\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  for (const element of elements) {\n    const { id, type, pos } = element;\n\n    if (type === ElementType.INPUT || type === ElementType.OUTPUT) {\n      const char = getLiteralForSignal(\n        elements.filter((el) => el.type === type),\n        element,\n        type === ElementType.INPUT\n          ? options.isInputVector\n          : options.isOutputVector,\n      );\n\n      ctx.save();\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.font = '24px sans-serif';\n      if (type === ElementType.INPUT) {\n        ctx.fillText(char, pos.x, pos.y - 10);\n      } else {\n        ctx.fillText(char, pos.x + 6, pos.y);\n      }\n      ctx.restore();\n    } else {\n      const [main, fallback]: ['x1', 'x2'] | ['x2', 'x1'] =\n        densityFactor > 1.5 ? ['x2', 'x1'] : ['x1', 'x2'];\n\n      const img = assets[main].images[type] ?? assets[fallback].images[type];\n\n      if (img) {\n        const x0 = pos.x - ICON_SIZE / 2;\n        const y0 = pos.y - ICON_SIZE / 2;\n\n        ctx.drawImage(img, x0, y0, ICON_SIZE, ICON_SIZE);\n      }\n    }\n\n    if (options.debugDrawId) {\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.font = '16px sans-serif';\n      ctx.fillText(id, pos.x + ICON_SIZE / 2 - 6, pos.y - ICON_SIZE / 2 + 6);\n    }\n\n    const { pins } = elementsDescriptions[type];\n    let i = 0;\n\n    for (const pin of pins) {\n      const isHovered =\n        hoverElement &&\n        hoverElement.type === ObjectType.ELEMENT &&\n        hoverElement.elId === element.id &&\n        hoverElement.activePin &&\n        hoverElement.activePin.index === i;\n\n      const isWire =\n        wireElement &&\n        wireElement.elId === element.id &&\n        wireElement.pinIndex === i;\n\n      ctx.beginPath();\n      ctx.arc(\n        pos.x + (pin.pos.x - 0.5) * ICON_SIZE,\n        pos.y + (pin.pos.y - 0.5) * ICON_SIZE,\n        isHovered ? PIN_DOT_RADIUS + 1 : PIN_DOT_RADIUS,\n        0,\n        Math.PI * 2,\n      );\n      ctx.closePath();\n\n      if (isHovered || isWire) {\n        ctx.save();\n        ctx.fillStyle = isWire ? '#d66' : '#66d';\n        ctx.fill();\n        ctx.restore();\n      } else {\n        ctx.save();\n        ctx.fillStyle = '#fff';\n        ctx.fill();\n        ctx.strokeStyle = '#448';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctx.restore();\n      }\n      i += 1;\n    }\n  }\n\n  // TODO\n  // if (options.simulate && nodesState.state) {\n  // TODO: Draw nodes state\n  // nodesState.state\n  // }\n\n  ctx.restore();\n}\n","import { useState } from 'react';\n\nimport { useDocumentEvent } from './useDocumentEvent';\n\nexport function usePageActive(): boolean {\n  const [isActive, setActive] = useState(true);\n\n  useDocumentEvent('visibilitychange', () => {\n    const newIsActive = document.visibilityState === 'visible';\n\n    if (isActive !== newIsActive) {\n      setActive(newIsActive);\n    }\n  });\n\n  return isActive;\n}\n","import { useEffect } from 'react';\n\nimport { useHandler } from 'hooks/useHandler';\n\nexport function useDocumentEvent(\n  eventName: string,\n  callback: (...args: unknown[]) => void,\n) {\n  const func = useHandler(callback);\n\n  useEffect(() => {\n    document.addEventListener(eventName, func, false);\n\n    return () => {\n      document.removeEventListener(eventName, func, false);\n    };\n  }, [eventName, func]);\n}\n","import { useMemo } from 'react';\nimport { styled } from 'stitches';\n\nimport { getLiteralForSignal } from 'common/common';\nimport { ElementType } from 'common/types';\nimport { GameModel, useGameState } from 'models/GameModel';\n\nconst _Table = styled('table', {\n  '> thead > tr > th': {\n    textAlign: 'center',\n    fontWeight: 700,\n  },\n  '> tbody > tr > td': {\n    textAlign: 'center',\n    fontWeight: 400,\n  },\n});\n\ntype Props = {\n  gameModel: GameModel;\n};\n\nexport function TruthTable({ gameModel }: Props) {\n  const { elements, options } = useGameState(\n    gameModel,\n    ({ elements, options }) => ({ elements, options }),\n  );\n\n  const { inputs, outputs, renderInputs, renderOutputs } = useMemo(() => {\n    const inputs = elements.filter((el) => el.type === ElementType.INPUT);\n    const outputs = elements.filter((el) => el.type === ElementType.OUTPUT);\n\n    let renderInputs = inputs;\n    let renderOutputs = outputs;\n\n    if (options.isInputVector) {\n      renderInputs = [...inputs].reverse();\n    }\n\n    if (options.isOutputVector) {\n      renderOutputs = [...outputs].reverse();\n    }\n\n    return {\n      inputs,\n      outputs,\n      renderInputs,\n      renderOutputs,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    elements,\n    elements.length,\n    options.isInputVector,\n    options.isOutputVector,\n  ]);\n\n  return (\n    <div>\n      <_Table>\n        <thead>\n          <tr>\n            {renderInputs.map((el, i) => (\n              <th key={i}>\n                {getLiteralForSignal(inputs, el, options.isInputVector)}\n              </th>\n            ))}\n            {renderOutputs.map((el, i) => (\n              <th key={i}>\n                {getLiteralForSignal(outputs, el, options.isOutputVector)}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {Array.from({ length: 2 ** inputs.length }).map((el, rowIndex) => (\n            <tr key={rowIndex}>\n              {renderInputs.map((value, cellIndex) => (\n                <td key={cellIndex}>\n                  {Math.floor(rowIndex / 2 ** (inputs.length - cellIndex - 1)) %\n                    2}\n                </td>\n              ))}\n              {renderOutputs.map((value, i) => (\n                <td key={i}>Z</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </_Table>\n    </div>\n  );\n}\n","import { styled } from 'stitches';\n\nimport { elementsDescriptions } from 'common/data';\nimport { GameModel, useGameState } from 'models/GameModel';\n\nconst _Title = styled('h2', {\n  margin: 0,\n});\n\ntype Props = {\n  gameModel: GameModel;\n};\n\nexport function SchemaErrors({ gameModel }: Props) {\n  const { elements, connections } = useGameState(\n    gameModel,\n    ({ elements, connections }) => ({\n      elements,\n      connections,\n    }),\n  );\n\n  const errors = [];\n\n  for (const el of elements) {\n    const { pins } = elementsDescriptions[el.type];\n    const used = pins.map(() => false);\n\n    for (const connection of connections) {\n      for (const p of connection) {\n        if (p.elId === el.id) {\n          used[p.pinIndex] = true;\n        }\n      }\n    }\n\n    if (used.some((value) => !value)) {\n      errors.push(`Floating pins on node ${el.type}`);\n    }\n  }\n\n  if (!errors.length) {\n    return null;\n  }\n\n  return (\n    <div>\n      <_Title>Errors:</_Title>\n      {errors.map((line, i) => (\n        <div key={i}>{line}</div>\n      ))}\n    </div>\n  );\n}\n","import { styled } from 'stitches';\nimport { getLiteralForSignalByIndex } from 'common/common';\nimport { GameModel, useGameState } from 'models/GameModel';\n\nconst _Wrapper = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  alignItems: 'stretch',\n  left: 52,\n  bottom: 0,\n  padding: 4,\n});\n\nconst _Title = styled('h2', {\n  marginRight: 8,\n  fontVariant: '20|30',\n});\n\nconst _Inputs = styled('div', {\n  display: 'flex',\n  gap: 4,\n\n  variants: {\n    reverse: {\n      true: {\n        flexDirection: 'row-reverse',\n      },\n    },\n  },\n});\n\nconst _InputLabel = styled('label', {\n  display: 'grid',\n  gridTemplateAreas: '\"A\"',\n  width: 30,\n  height: 30,\n  userSelect: 'none',\n  cursor: 'pointer',\n\n  '> *': {\n    gridArea: 'A',\n  },\n});\n\nconst _HiddenInput = styled('input', {\n  opacity: 0,\n});\n\nconst _Bg = styled('div', {\n  background: '#aaa',\n\n  'input:checked + &': {\n    background: '#0d0',\n  },\n});\n\nconst _Symbol = styled('p', {\n  textAlign: 'center',\n  fontVariant: '16|30',\n});\n\ntype Props = {\n  gameModel: GameModel;\n};\n\nexport function InputSignalsControl({ gameModel }: Props) {\n  const { inputSignals, options } = useGameState(\n    gameModel,\n    ({ inputSignals, options }) => ({\n      inputSignals,\n      options,\n    }),\n  );\n\n  return (\n    <_Wrapper>\n      <_Title>Input signals:</_Title>\n      <_Inputs reverse={options.isInputVector}>\n        {inputSignals.map((enabled, index) => (\n          <_InputLabel key={index}>\n            <_HiddenInput\n              type=\"checkbox\"\n              checked={enabled}\n              onChange={(e) => {\n                const signals = inputSignals.map((enabled, i) =>\n                  i === index ? e.target.checked : enabled,\n                );\n\n                gameModel.updateInputSignals(signals);\n              }}\n            />\n            <_Bg />\n            <_Symbol>\n              {getLiteralForSignalByIndex({\n                elementsCount: inputSignals.length,\n                index,\n                isInput: true,\n                isVector: options.isInputVector,\n              })}\n            </_Symbol>\n          </_InputLabel>\n        ))}\n      </_Inputs>\n    </_Wrapper>\n  );\n}\n","import { styled } from 'stitches';\n\nimport { ElementType } from 'common/types';\nimport { GameModel, useGameState } from 'models/GameModel';\n\nexport const _Wrapper = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 4,\n  top: 0,\n  left: 0,\n  padding: 4,\n  borderRadius: 2,\n});\n\nexport const _Button = styled('button', {\n  width: 48,\n  height: 48,\n  flexShrink: 0,\n  border: 'none',\n  color: '#333',\n  background: '#dadada',\n  fontVariant: '14|20',\n  whiteSpace: 'nowrap',\n  appearance: 'none',\n\n  '&:disabled': {\n    color: '#999',\n  },\n\n  '&:not(:disabled)': {\n    cursor: 'pointer',\n  },\n});\n\nexport const _Divider = styled('span', {\n  height: 8,\n});\n\ntype Props = {\n  gameModel: GameModel;\n};\n\nexport function Toolbar({ gameModel }: Props) {\n  const focusElement = useGameState(gameModel, (state) => state.focusElement);\n\n  return (\n    <_Wrapper>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.POWER);\n        }}\n      >\n        DD\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.GROUND);\n        }}\n      >\n        GND\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.NPN);\n        }}\n      >\n        npn\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.PNP);\n        }}\n      >\n        pnp\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.INPUT);\n        }}\n      >\n        input\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.OUTPUT);\n        }}\n      >\n        output\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.addElement(ElementType.DOT);\n        }}\n      >\n        dot\n      </_Button>\n      <_Divider />\n      <_Button\n        type=\"button\"\n        disabled={!focusElement}\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.deleteElementInFocus();\n        }}\n      >\n        delete\n      </_Button>\n      <_Divider />\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.reloadFromSave();\n        }}\n      >\n        Reload\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.saveGame();\n        }}\n      >\n        Save\n      </_Button>\n      <_Button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          gameModel.clearState();\n        }}\n      >\n        Clear\n      </_Button>\n      {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n      <a href=\"#\" title=\"\">\n        <_Button type=\"button\">Exit</_Button>\n      </a>\n    </_Wrapper>\n  );\n}\n","import { styled } from 'stitches';\n\nconst _Option = styled('label', {\n  userSelect: 'none',\n\n  '> input:not(:disabled)': {\n    cursor: 'pointer',\n  },\n});\n\ntype Props = {\n  title: string;\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n};\n\nexport function Option({ title, checked, onChange }: Props) {\n  return (\n    <_Option>\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        onChange={(e) => {\n          onChange(e.target.checked);\n        }}\n      />{' '}\n      {title}\n    </_Option>\n  );\n}\n","import { styled } from 'stitches';\nimport { Options } from 'common/types';\nimport { GameModel, useGameState } from 'models/GameModel';\n\nimport { Option } from './Option';\n\nconst _Wrapper = styled('div', {\n  display: 'flex',\n  flexDirection: 'column',\n\n  '> *': {\n    flexShrink: 0,\n  },\n});\n\nexport const _SimulateButton = styled('button', {\n  marginBottom: 5,\n  border: '1px solid #999',\n  borderRadius: 0,\n  appearance: 'none',\n  cursor: 'pointer',\n\n  variants: {\n    active: {\n      true: {\n        color: '#fff',\n        background: 'lightgreen',\n      },\n    },\n  },\n});\n\ntype Props = {\n  gameModel: GameModel;\n};\n\nexport function OptionsPanel({ gameModel }: Props) {\n  const options = useGameState(gameModel, (state) => state.options);\n\n  function update(updates: Partial<Options>): void {\n    gameModel.updateOptions({\n      ...options,\n      ...updates,\n    });\n  }\n\n  return (\n    <_Wrapper>\n      <_SimulateButton\n        type=\"button\"\n        active={options.simulate}\n        onClick={(e) => {\n          e.preventDefault();\n          update({ simulate: !options.simulate });\n        }}\n      >\n        {options.simulate ? 'Simulation: ON' : 'Simulation: OFF'}\n      </_SimulateButton>\n      <Option\n        title=\"Debug: draw fps\"\n        checked={options.debugShowFps}\n        onChange={(checked) => {\n          update({ debugShowFps: checked });\n        }}\n      />\n      <Option\n        title=\"Debug: draw id\"\n        checked={options.debugDrawId}\n        onChange={(checked) => {\n          update({ debugDrawId: checked });\n        }}\n      />\n      <Option\n        title=\"Debug: draw axis\"\n        checked={options.debugDrawAxis}\n        onChange={(checked) => {\n          update({ debugDrawAxis: checked });\n        }}\n      />\n      <Option\n        title=\"Treat input as vector\"\n        checked={options.isInputVector}\n        onChange={(checked) => {\n          update({ isInputVector: checked });\n        }}\n      />\n      <Option\n        title=\"Treat output as vector\"\n        checked={options.isOutputVector}\n        onChange={(checked) => {\n          update({ isOutputVector: checked });\n        }}\n      />\n    </_Wrapper>\n  );\n}\n","import { styled } from 'stitches';\nimport { ObjectType } from 'common/types';\nimport { GameModel, useGameState } from 'models/GameModel';\n\nexport const _Yes = styled('span', {\n  color: '#4ebd4e',\n});\n\nexport const _No = styled('span', {\n  color: '#666',\n});\n\nfunction yesNo(value: unknown) {\n  if (value) {\n    return <_Yes>yes</_Yes>;\n  }\n  return <_No>no</_No>;\n}\n\ntype Props = {\n  gameModel: GameModel;\n};\n\nexport function DebugPanel({ gameModel }: Props) {\n  const {\n    elements,\n    connections,\n    movingElement,\n    focusElement,\n    hoverElement,\n    wireElement,\n    panState,\n  } = useGameState(gameModel, (state) => state);\n\n  return (\n    <div>\n      <div>elements: {elements.length}</div>\n      <div>connections: {connections.length}</div>\n      <div>el moving: {yesNo(movingElement)}</div>\n      <div>\n        el in focus:{' '}\n        {yesNo(focusElement && focusElement.type === ObjectType.ELEMENT)}\n      </div>\n      <div>\n        conn in focus:{' '}\n        {yesNo(focusElement && focusElement.type === ObjectType.CONNECTION)}\n      </div>\n      <div>\n        el hover:{' '}\n        {yesNo(hoverElement && hoverElement.type === ObjectType.ELEMENT)}\n      </div>\n      <div>\n        pin hover:{' '}\n        {yesNo(\n          hoverElement &&\n            hoverElement.type === ObjectType.ELEMENT &&\n            hoverElement.activePin,\n        )}\n      </div>\n      <div>\n        conn hover:{' '}\n        {yesNo(hoverElement && hoverElement.type === ObjectType.CONNECTION)}\n      </div>\n      <div>wiring: {yesNo(wireElement)}</div>\n      <div>drag: {yesNo(panState.isPan)}</div>\n    </div>\n  );\n}\n","import { styled } from 'stitches';\n\nexport const _App = styled('main', {\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'stretch',\n  flexGrow: 1,\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n});\n\nexport const _CanvasWrapper = styled('div', {\n  position: 'relative',\n  flexGrow: 1,\n  overflow: 'hidden',\n});\n\nexport const _Canvas = styled('canvas', {\n  display: 'block',\n  cursor: 'grab',\n\n  variants: {\n    enableScaling: {\n      true: {\n        transformOrigin: '0 0',\n        transform: 'scale(var(--factor, 1))',\n      },\n    },\n  },\n});\n\nexport const _FpsCounter = styled('span', {\n  position: 'absolute',\n  top: 6,\n  right: 6,\n  userSelect: 'none',\n  pointerEvents: 'none',\n});\n\nexport const _Space = styled('span', {\n  flexGrow: 1,\n});\n\nexport const _Info = styled('div', {\n  display: 'none',\n\n  '@bp2': {\n    display: 'flex',\n    flexShrink: 0,\n    flexDirection: 'column',\n    flexBasis: 300,\n    padding: '16px 20px',\n    borderLeft: '1px solid #888',\n    background: '#ddd',\n    overflow: 'hidden',\n    overflowY: 'auto',\n\n    '> *:not(:last-child)': {\n      marginBottom: 16,\n    },\n  },\n});\n","import {\n  CSSProperties,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { debounce } from 'lodash-es';\n\nimport { Coords, GameId } from 'common/types';\nimport { MAX_FPS } from 'common/data';\nimport { GameModel, useGameState } from 'models/GameModel';\nimport { useRefState } from 'hooks/useRefState';\nimport { useForceUpdate } from 'hooks/useForceUpdate';\nimport { useHandler } from 'hooks/useHandler';\nimport { useWindowEvent } from 'hooks/useWindowEvent';\nimport { useAssets } from 'hooks/useAssets';\nimport { getCanvasContext } from 'utils/canvas';\nimport { render } from 'utils/render';\nimport { useActivePageInterval } from 'hooks/useActivePageInterval';\nimport { TruthTable } from 'components/TruthTable';\nimport { SchemaErrors } from 'components/SchemaErrors';\nimport { InputSignalsControl } from 'components/InputSignalsControl';\nimport { Toolbar } from 'components/Toolbar';\nimport { OptionsPanel } from 'components/OptionsPanel';\nimport { DebugPanel } from 'components/DebugPanel';\n\nimport {\n  _App,\n  _Canvas,\n  _CanvasWrapper,\n  _FpsCounter,\n  _Info,\n  _Space,\n} from './elements';\n\ntype Props = {\n  gameId: GameId;\n};\n\nfunction getCurrentDensityFactor() {\n  return window.devicePixelRatio ?? 1;\n}\n\nexport function Simulator({ gameId }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const canvasWrapperRef = useRef<HTMLDivElement>(null);\n  const forceUpdate = useForceUpdate();\n  const [drawFps, setDrawFps] = useState(0);\n  const densityFactor = useRefState({\n    value: getCurrentDensityFactor(),\n  });\n\n  const gameModel = useMemo(() => {\n    if (GameModel.checkSavedGame(gameId)) {\n      return GameModel.loadGame(gameId);\n    }\n    return GameModel.createEmptyModel(gameId);\n  }, [gameId]);\n\n  const { cursor, showFps } = useGameState(\n    gameModel,\n    ({ cursor, options }) => ({\n      cursor,\n      showFps: options.debugShowFps,\n    }),\n  );\n\n  const fps = useRefState({ value: 0 });\n\n  useActivePageInterval(\n    showFps\n      ? () => {\n          setDrawFps(fps.value);\n          fps.value = 0;\n        }\n      : undefined,\n    1000,\n  );\n\n  const size = useRefState({ width: 0, height: 0 });\n  const assets = useAssets({\n    densityFactor: densityFactor.value,\n    draw: () => draw(),\n  });\n\n  function convertScreenCoordsToAppCoords({ x, y }: Coords): Coords {\n    return {\n      x: Math.floor(x - size.width / 2),\n      y: Math.floor(y - size.height / 2),\n    };\n  }\n\n  function actualizeDensityFactor(): boolean {\n    const factor = getCurrentDensityFactor();\n\n    if (factor !== densityFactor.value) {\n      densityFactor.value = factor;\n      forceUpdate();\n      return true;\n    }\n\n    return false;\n  }\n\n  const drawHandler = useHandler(() => {\n    if (size.width === 0) {\n      return;\n    }\n\n    if (actualizeDensityFactor()) {\n      return;\n    }\n\n    const ctx = getCanvasContext(canvasRef.current);\n\n    fps.value += 1;\n\n    render(ctx, {\n      gameState: gameModel.getState(),\n      size,\n      densityFactor: densityFactor.value,\n      assets,\n    });\n  });\n\n  const draw = useMemo(() => {\n    const interval = 1000 / MAX_FPS;\n\n    return debounce(drawHandler, interval, {\n      maxWait: interval,\n      leading: true,\n      trailing: true,\n    });\n  }, [drawHandler]);\n\n  function updateSize() {\n    const canvasWrapper = canvasWrapperRef.current;\n    const canvas = canvasRef.current;\n\n    if (!canvasWrapper || !canvas) {\n      throw new Error();\n    }\n\n    size.width = canvasWrapper.clientWidth;\n    size.height = canvasWrapper.clientHeight;\n\n    canvas.width = size.width * densityFactor.value;\n    canvas.height = size.height * densityFactor.value;\n\n    draw();\n  }\n\n  useEffect(() => {\n    gameModel.setDrawHandler(draw);\n\n    return () => {\n      gameModel.setDrawHandler(undefined);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(updateSize, [densityFactor.value]);\n\n  useWindowEvent('resize', () => {\n    setTimeout(() => {\n      actualizeDensityFactor();\n      updateSize();\n    }, 0);\n  });\n\n  return (\n    <_App>\n      <_CanvasWrapper ref={canvasWrapperRef}>\n        <_Canvas\n          ref={canvasRef}\n          enableScaling={densityFactor.value !== 1}\n          width={0}\n          height={0}\n          style={\n            {\n              '--factor': 1 / densityFactor.value,\n              cursor,\n            } as CSSProperties\n          }\n          onClick={(e) => {\n            if (e.button === 0) {\n              e.preventDefault();\n            }\n          }}\n          onMouseDown={(e) => {\n            if (e.button === 0) {\n              e.preventDefault();\n              gameModel.onMouseDown();\n            }\n          }}\n          onMouseMove={(e) => {\n            gameModel.onMouseMove({\n              position: convertScreenCoordsToAppCoords({\n                x: e.clientX,\n                y: e.clientY,\n              }),\n              movement: { x: e.movementX, y: e.movementY },\n            });\n          }}\n          onMouseUp={(e) => {\n            if (e.button === 0) {\n              e.preventDefault();\n              gameModel.onMouseUp();\n            }\n          }}\n          onMouseLeave={() => {\n            gameModel.resetCursorState();\n          }}\n          onContextMenu={(e) => {\n            if (!gameModel.allowOpenContextMenu()) {\n              e.preventDefault();\n            }\n          }}\n        />\n        {showFps && <_FpsCounter>{drawFps}</_FpsCounter>}\n      </_CanvasWrapper>\n      <Toolbar gameModel={gameModel} />\n      <InputSignalsControl gameModel={gameModel} />\n      <_Info>\n        <OptionsPanel gameModel={gameModel} />\n        <TruthTable gameModel={gameModel} />\n        <SchemaErrors gameModel={gameModel} />\n        <_Space />\n        <DebugPanel gameModel={gameModel} />\n      </_Info>\n    </_App>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { usePageActive } from './usePageActive';\nimport { useLatest } from './useLatest';\n\nexport function useActivePageInterval(\n  callback: (() => void) | undefined,\n  ms: number,\n) {\n  const isActive = usePageActive();\n  const callbackRef = useLatest(callback);\n\n  useEffect(() => {\n    if (isActive && callbackRef.current) {\n      const intervalId = window.setInterval(() => {\n        if (callbackRef.current) {\n          callbackRef.current();\n        }\n      }, ms);\n\n      return () => {\n        window.clearInterval(intervalId);\n      };\n    }\n\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isActive, ms, Boolean(callbackRef.current)]);\n}\n","import { useEffect } from 'react';\n\nimport { Assets, ElementType, LoadingStatus } from 'common/types';\nimport { useRefState } from 'hooks/useRefState';\n\nexport function useAssets({\n  densityFactor,\n  draw,\n}: {\n  densityFactor: number;\n  draw: () => void;\n}): Assets {\n  const assets = useRefState<Assets>({\n    x1: { images: {}, status: LoadingStatus.NONE },\n    x2: { images: {}, status: LoadingStatus.NONE },\n  });\n\n  useEffect(() => {\n    const is2x = densityFactor > 1.5;\n\n    const assetsSet = assets[is2x ? 'x1' : 'x2'];\n\n    if (assetsSet.status !== LoadingStatus.NONE) {\n      return;\n    }\n\n    const loadImages = [\n      ElementType.PNP,\n      ElementType.NPN,\n      ElementType.POWER,\n      ElementType.GROUND,\n    ];\n\n    let remainLoad = loadImages.length;\n\n    function onLoad() {\n      remainLoad -= 1;\n\n      if (remainLoad === 0) {\n        assetsSet.status = LoadingStatus.DONE;\n        draw();\n      }\n    }\n\n    assetsSet.status = LoadingStatus.LOADING;\n\n    for (const imgName of loadImages) {\n      const image = new Image();\n      image.src = `assets/${imgName}${is2x ? '@2x' : ''}.png`;\n      image.addEventListener('load', () => {\n        assetsSet.images[imgName] = image;\n        onLoad();\n      });\n      image.addEventListener('error', onLoad);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [densityFactor]);\n\n  return assets;\n}\n","export function getCanvasContext(\n  canvas: HTMLCanvasElement | null | undefined,\n): CanvasRenderingContext2D {\n  if (!canvas) {\n    throw new Error();\n  }\n\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    throw new Error();\n  }\n\n  return ctx;\n}\n","import { useMemo, useState } from 'react';\nimport { styled } from 'stitches';\n\nimport { GameId } from 'common/types';\nimport { useOnChange } from 'hooks/useOnChange';\nimport { useWindowEvent } from 'hooks/useWindowEvent';\nimport { Simulator } from 'components/Simulator';\n\nconst _Wrapper = styled('div', {\n  padding: 16,\n});\n\nconst _Title = styled('h1', {\n  margin: 0,\n});\n\nconst _GameTitle = styled('h2', {\n  fontVariant: '18|24',\n});\n\nconst _RemoveButton = styled('button', {\n  marginLeft: 16,\n});\n\nfunction getCurrentGameId(allowedIds: GameId[]): GameId | undefined {\n  const hash = (window.location.hash ?? '').trim().replace(/^#/, '');\n\n  if (hash) {\n    const match = hash.match(/^g(\\d+)$/);\n\n    if (match) {\n      const id = match[0] as GameId;\n\n      if (allowedIds.includes(id)) {\n        return id;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getNextGameId(currentGames: GameId[]): GameId {\n  const lastId = currentGames[currentGames.length - 1];\n\n  if (!lastId) {\n    return `g1`;\n  }\n\n  const match = lastId.match(/^g(\\d+)$/);\n\n  if (!match) {\n    throw new Error();\n  }\n\n  return `g${parseInt(match[1], 10) + 1}`;\n}\n\nexport function App() {\n  const savedGames = useMemo<GameId[]>(() => {\n    const json = localStorage.getItem('sch_games');\n    if (!json) {\n      return [];\n    }\n    return JSON.parse(json);\n  }, []);\n  const [currentGames, setCurrentGames] = useState(savedGames);\n\n  useOnChange(() => {\n    localStorage.setItem('sch_games', JSON.stringify(currentGames));\n  }, [currentGames]);\n\n  const [currentGameId, setCurrentGameId] = useState(\n    getCurrentGameId(currentGames),\n  );\n\n  useWindowEvent('hashchange', () => {\n    const gameId = getCurrentGameId(currentGames);\n\n    if (gameId !== currentGameId) {\n      setCurrentGameId(gameId);\n    }\n  });\n\n  if (currentGameId) {\n    return <Simulator key={currentGameId} gameId={currentGameId} />;\n  }\n\n  return (\n    <_Wrapper>\n      <_Title>Schematic</_Title>\n      <_GameTitle>Current schemas:</_GameTitle>\n      <ul>\n        {currentGames.length ? (\n          currentGames.map((gameId) => (\n            <li key={gameId}>\n              <a href={`#${gameId}`}>{gameId}</a>{' '}\n              <_RemoveButton\n                type=\"button\"\n                onClick={(e) => {\n                  e.preventDefault();\n\n                  // eslint-disable-next-line no-alert\n                  if (window.confirm('Are you sure?')) {\n                    setCurrentGames(currentGames.filter((id) => id !== gameId));\n                    localStorage.removeItem(`sch_game_${gameId}`);\n                  }\n                }}\n              >\n                x\n              </_RemoveButton>\n            </li>\n          ))\n        ) : (\n          <div>no saved schemas</div>\n        )}\n      </ul>\n      <button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          const newGameId = getNextGameId(currentGames);\n          setCurrentGames([...currentGames, newGameId]);\n\n          window.setTimeout(() => {\n            window.location.assign(`#${newGameId}`);\n          }, 0);\n        }}\n      >\n        New schema\n      </button>\n    </_Wrapper>\n  );\n}\n","import { useEffect, DependencyList, useRef } from 'react';\n\nexport function useOnChange(callback: () => void, deps: DependencyList) {\n  const initRef = useRef(false);\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true;\n      return;\n    }\n\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css/normalize.css';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}