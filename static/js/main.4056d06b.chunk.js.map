{"version":3,"sources":["components/App/App.module.scss","components/SchemaErrors/SchemaErrors.module.scss","components/Emulator/Emulator.module.scss","hooks/useOnChange.ts","hooks/useHandler.ts","hooks/useLatest.ts","common/types.ts","hooks/useRefState.ts","common/data.ts","common/common.ts","components/TruthTable/TruthTable.tsx","components/SchemaErrors/SchemaErrors.tsx","components/Emulator/Emulator.tsx","hooks/useForceUpdate.ts","utils/canvas.ts","components/App/App.tsx","hooks/useWindowEvent.ts","index.tsx","components/TruthTable/TruthTable.module.scss"],"names":["module","exports","useOnChange","callback","deps","initRef","useRef","useEffect","current","useHandler","callbackRef","some","ref","useLatest","useCallback","ElementType","useRefState","value","elementsDescriptions","PNP","pins","pos","x","y","NPN","POWER","GROUND","INPUT","OUTPUT","DOT","INPUT_LITERALS","OUTPUT_LITERALS","getLiteralForSignal","elements","element","isVector","index","indexOf","charVariants","type","length","charAt","TruthTable","options","onOptionsChange","useMemo","inputs","filter","el","outputs","renderInputs","renderOutputs","isInputVector","reverse","isOutputVector","className","styles","wrapper","option","checked","onChange","e","target","table","map","i","tableCell","Array","from","rowIndex","cellIndex","Math","floor","SchemaErrors","state","errors","used","connections","connection","p","elId","id","pinIndex","push","title","line","ICON_SIZE","FOCUS_SIZE","getNextId","lastElement","match","Error","parseInt","yesNo","yes","no","Emulator","draw","gameId","canvasRef","canvasWrapperRef","forceUpdate","incRef","useState","setInc","useForceUpdate","cursor","setCursor","setOptions","size","width","height","assets","mousePos","hoverElement","undefined","focusElement","movingElement","wireElement","source","mouseState","isMouseDown","isDrag","convertScreenCoordsToAppCoords","clearState","loadGameState","json","localStorage","getItem","JSON","parse","savedPos","savedOptions","window","setTimeout","intervalId","setInterval","clearInterval","getElById","find","updateSize","app","canvas","clientWidth","clientHeight","checkOverlap","point","addElement","startWiring","ctx","getContext","getCanvasContext","clearRect","save","translate","strokeStyle","lineWidth","strokeRect","restore","p1","p2","el1","el2","pin1","pin2","beginPath","moveTo","lineTo","stroke","x0","y0","currentCursor","char","textAlign","textBaseline","font","fillText","img","drawImage","activeTarget","pin","isActive","activePin","isWire","arc","PIN_DOT_RADIUS","PI","closePath","fillStyle","fill","addEventListener","loadImages","remainLoad","onLoad","imgName","image","Image","src","loadAssets","onMouseUp","preventDefault","button","needRepaint","hoverTarget","canvasWrapper","style","onClick","onMouseDown","onMouseMove","clientX","clientY","checkHover","isMoving","Boolean","movementX","movementY","onMouseLeave","resetCursorState","onContextMenu","panel","divider","setItem","stringify","console","info","href","update","space","debugPanel","getCurrentGameId","allowedIds","hash","location","trim","replace","includes","App","savedGames","currentGames","setCurrentGames","currentGameId","setCurrentGameId","eventName","func","removeEventListener","useWindowEvent","gamesTitle","removeButton","confirm","removeItem","newGameId","lastId","getNextGameId","assign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4056d06b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1Jn2B\",\"title\":\"App_title__2C-7r\",\"gamesTitle\":\"App_gamesTitle__zqWFJ\",\"removeButton\":\"App_removeButton__1M5gF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SchemaErrors_title__DGpx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Emulator_app__T00XQ\",\"panel\":\"Emulator_panel__NbdHB\",\"button\":\"Emulator_button__3x9P5\",\"canvasWrapper\":\"Emulator_canvasWrapper__1jUgz\",\"canvas\":\"Emulator_canvas__18vZ6\",\"info\":\"Emulator_info__XN-lN\",\"divider\":\"Emulator_divider__1O1xo\",\"space\":\"Emulator_space__3sZL6\",\"yes\":\"Emulator_yes__2HVG8\",\"no\":\"Emulator_no__3K5j9\"};","import { useEffect, DependencyList, useRef } from 'react';\n\nexport function useOnChange(callback: () => void, deps: DependencyList) {\n  const initRef = useRef(false);\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true;\n      return;\n    }\n\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","import { useCallback } from 'react';\nimport { useLatest } from './useLatest';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useHandler<F extends (...args: any) => any>(callback: F): F {\n  const callbackRef = useLatest<F>(callback);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ((...args: any) => callbackRef.current(...args)) as any,\n    [],\n  );\n}\n","import { useRef } from 'react';\n\nexport function useLatest<T>(some: T): { current: T } {\n  const ref = useRef(some);\n  ref.current = some;\n  return ref;\n}\n","export type GameId = `g${number}`;\n\nexport enum ElementType {\n  PNP = 'pnp',\n  NPN = 'npn',\n  POWER = 'power',\n  GROUND = 'ground',\n  INPUT = 'input',\n  OUTPUT = 'output',\n  DOT = 'dot',\n}\n\nexport type Coords = {\n  x: number;\n  y: number;\n};\n\nexport type ElementId = `el${number}`;\n\nexport type Element = {\n  type: ElementType;\n  id: ElementId;\n  pos: Coords;\n};\n\nexport type ConnectionPin = { elId: ElementId; pinIndex: number };\n\nexport type Connection = [ConnectionPin, ConnectionPin];\n\nexport type Pin = {\n  pos: Coords;\n};\n\nexport type ElementDescription = {\n  pins: Pin[];\n};\n\nexport type GameState = {\n  elements: Element[];\n  connections: Connection[];\n};\n\nexport type Options = {\n  isInputVector: boolean;\n  isOutputVector: boolean;\n};\n","import { useRef } from 'react';\n\nexport function useRefState<D>(value: D): D {\n  const ref = useRef<D>(value);\n  return ref.current;\n}\n","import { ElementType, ElementDescription } from './types';\n\nexport const elementsDescriptions: Record<ElementType, ElementDescription> = {\n  [ElementType.PNP]: {\n    pins: [\n      { pos: { x: 0.47, y: 0.94 } },\n      { pos: { x: -0.07, y: 0.32 } },\n      { pos: { x: 1.05, y: 0.32 } },\n    ],\n  },\n  [ElementType.NPN]: {\n    pins: [\n      { pos: { x: 0.47, y: 1 } },\n      { pos: { x: -0.07, y: 0.33 } },\n      { pos: { x: 1.05, y: 0.32 } },\n    ],\n  },\n  [ElementType.POWER]: {\n    pins: [{ pos: { x: 0.52, y: 0.8 } }],\n  },\n  [ElementType.GROUND]: {\n    pins: [{ pos: { x: 0.46, y: 0.15 } }],\n  },\n  [ElementType.INPUT]: {\n    pins: [{ pos: { x: 0.5, y: 0.8 } }],\n  },\n  [ElementType.OUTPUT]: {\n    pins: [{ pos: { x: 0.2, y: 0.5 } }],\n  },\n  [ElementType.DOT]: {\n    pins: [{ pos: { x: 0.5, y: 0.5 } }],\n  },\n};\n","import { Element, ElementType } from './types';\n\nconst INPUT_LITERALS = 'ABCDEFGHIJ';\nconst OUTPUT_LITERALS = 'YZXWVUTSRQ';\n\nexport function getLiteralForSignal(\n  elements: Element[],\n  element: Element,\n  isVector = false,\n): string {\n  const index = elements.indexOf(element);\n\n  const charVariants =\n    element.type === ElementType.INPUT ? INPUT_LITERALS : OUTPUT_LITERALS;\n\n  if (!isVector && elements.length <= charVariants.length) {\n    return charVariants.charAt(index);\n  }\n\n  return element.type === ElementType.INPUT ? `I${index}` : `Y${index}`;\n}\n","import { useMemo } from 'react';\n\nimport { getLiteralForSignal } from 'common/common';\nimport { Element, ElementType, Options } from 'common/types';\n\nimport styles from './TruthTable.module.scss';\n\ntype Props = {\n  elements: Element[];\n  options: Options;\n  onOptionsChange: (update: Partial<Options>) => void;\n};\n\nexport function TruthTable({ elements, options, onOptionsChange }: Props) {\n  const { inputs, outputs, renderInputs, renderOutputs } = useMemo(() => {\n    const inputs = elements.filter((el) => el.type === ElementType.INPUT);\n    const outputs = elements.filter((el) => el.type === ElementType.OUTPUT);\n\n    let renderInputs = inputs;\n    let renderOutputs = outputs;\n\n    if (options.isInputVector) {\n      renderInputs = [...inputs].reverse();\n    }\n\n    if (options.isOutputVector) {\n      renderOutputs = [...outputs].reverse();\n    }\n\n    return {\n      inputs,\n      outputs,\n      renderInputs,\n      renderOutputs,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    elements,\n    elements.length,\n    options.isInputVector,\n    options.isOutputVector,\n  ]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.options}>\n        <label className={styles.option}>\n          <input\n            type=\"checkbox\"\n            checked={options.isInputVector}\n            onChange={(e) => {\n              onOptionsChange({\n                isInputVector: e.target.checked,\n              });\n            }}\n          />{' '}\n          Treat input as vector\n        </label>\n        <label className={styles.option}>\n          <input\n            type=\"checkbox\"\n            checked={options.isOutputVector}\n            onChange={(e) => {\n              onOptionsChange({\n                isOutputVector: e.target.checked,\n              });\n            }}\n          />{' '}\n          Treat output as vector\n        </label>\n      </div>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            {renderInputs.map((el, i) => (\n              <th key={i} className={styles.tableCell}>\n                {getLiteralForSignal(inputs, el, options.isInputVector)}\n              </th>\n            ))}\n            {renderOutputs.map((el, i) => (\n              <th key={i} className={styles.tableCell}>\n                {getLiteralForSignal(outputs, el, options.isOutputVector)}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {Array.from({ length: 2 ** inputs.length }).map((el, rowIndex) => (\n            <tr key={rowIndex}>\n              {renderInputs.map((value, cellIndex) => (\n                <td key={cellIndex}>\n                  {Math.floor(rowIndex / 2 ** (inputs.length - cellIndex - 1)) %\n                    2}\n                </td>\n              ))}\n              {renderOutputs.map((value, i) => (\n                <td key={i}>Z</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import type { GameState } from 'common/types';\nimport { elementsDescriptions } from 'common/data';\n\nimport styles from './SchemaErrors.module.scss';\n\ntype Props = {\n  state: GameState;\n};\n\nexport function SchemaErrors({ state }: Props) {\n  const errors = [];\n\n  for (const el of state.elements) {\n    const { pins } = elementsDescriptions[el.type];\n    const used = pins.map(() => false);\n\n    for (const connection of state.connections) {\n      for (const p of connection) {\n        if (p.elId === el.id) {\n          used[p.pinIndex] = true;\n        }\n      }\n    }\n\n    if (used.some((value) => !value)) {\n      errors.push(`Floating pins on node ${el.type}`);\n    }\n  }\n\n  if (!errors.length) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h2 className={styles.title}>Errors:</h2>\n      {errors.map((line, i) => (\n        <div key={i}>{line}</div>\n      ))}\n    </div>\n  );\n}\n","import { MouseEvent, useEffect, useRef, useState } from 'react';\n\nimport { useRefState } from 'hooks/useRefState';\nimport { useForceUpdate } from 'hooks/useForceUpdate';\nimport { useHandler } from 'hooks/useHandler';\nimport { useOnChange } from 'hooks/useOnChange';\nimport {\n  Coords,\n  Element,\n  ElementId,\n  ElementType,\n  GameId,\n  GameState,\n  Options,\n} from 'common/types';\nimport { elementsDescriptions } from 'common/data';\nimport { getLiteralForSignal } from 'common/common';\nimport { getCanvasContext } from 'utils/canvas';\nimport { TruthTable } from 'components/TruthTable';\nimport { SchemaErrors } from 'components/SchemaErrors';\n\nimport styles from './Emulator.module.scss';\n\nconst ICON_SIZE = 48;\nconst FOCUS_SIZE = ICON_SIZE + 4;\nconst PIN_DOT_RADIUS = 5;\n\ntype Cursor =\n  | 'move'\n  | 'pointer'\n  | 'drag'\n  | 'grab'\n  | 'grabbing'\n  | 'cross'\n  | undefined;\n\ntype HoverTarget = {\n  elId: ElementId;\n  activePin: { index: number } | undefined;\n};\n\nfunction getNextId(state: GameState): ElementId {\n  const lastElement = state.elements[state.elements.length - 1];\n\n  if (!lastElement) {\n    return `el1`;\n  }\n\n  const match = lastElement.id.match(/^el(\\d+)$/);\n\n  if (!match) {\n    throw new Error();\n  }\n\n  return `el${parseInt(match[1], 10) + 1}`;\n}\n\nfunction yesNo(value: unknown) {\n  if (value) {\n    return <span className={styles.yes}>yes</span>;\n  }\n  return <span className={styles.no}>no</span>;\n}\n\ntype Props = {\n  gameId: GameId;\n};\n\nexport function Emulator({ gameId }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const canvasWrapperRef = useRef<HTMLDivElement>(null);\n  const forceUpdate = useForceUpdate();\n  const [cursor, setCursor] = useState<Cursor>();\n  const [options, setOptions] = useState<Options>({\n    isInputVector: false,\n    isOutputVector: false,\n  });\n\n  const size = useRefState({ width: 0, height: 0 });\n  const pos = useRefState({ x: 0, y: 0 });\n  const assets = useRefState<Record<string, HTMLImageElement>>({});\n  const mousePos = useRefState({ x: 0, y: 0 });\n  const hoverElement = useRefState<{\n    target: HoverTarget | undefined;\n  }>({\n    target: undefined,\n  });\n  const focusElement = useRefState<{ elId: ElementId | undefined }>({\n    elId: undefined,\n  });\n  const movingElement = useRefState<{\n    target: { elId: ElementId } | undefined;\n  }>({\n    target: undefined,\n  });\n  const wireElement = useRefState<{\n    source: { elId: ElementId; pinIndex: number } | undefined;\n  }>({\n    source: undefined,\n  });\n  const state = useRefState<GameState>({\n    elements: [],\n    connections: [],\n  });\n  const mouseState = useRefState({ isMouseDown: false, isDrag: false });\n\n  function convertScreenCoordsToAppCoords({ x, y }: Coords): Coords {\n    return {\n      x: x - size.width / 2 - pos.x,\n      y: y - size.height / 2 - pos.y,\n    };\n  }\n\n  let draw: () => void;\n\n  function clearState() {\n    pos.x = 0;\n    pos.y = 0;\n    state.elements = [];\n    state.connections = [];\n    hoverElement.target = undefined;\n    focusElement.elId = undefined;\n    movingElement.target = undefined;\n    wireElement.source = undefined;\n    mouseState.isDrag = false;\n    mouseState.isMouseDown = false;\n  }\n\n  const loadGameState = useHandler(() => {\n    const json = localStorage.getItem(`sch_game_${gameId}`);\n\n    if (!json) {\n      return;\n    }\n\n    const {\n      pos: savedPos,\n      elements,\n      connections,\n      options: savedOptions,\n    } = JSON.parse(json);\n\n    clearState();\n\n    pos.x = savedPos.x;\n    pos.y = savedPos.y;\n    state.elements = elements;\n    state.connections = connections;\n\n    setOptions(savedOptions);\n\n    window.setTimeout(draw, 0);\n  });\n\n  useEffect(() => {\n    loadGameState();\n\n    const intervalId = window.setInterval(forceUpdate, 500);\n\n    return () => {\n      window.clearInterval(intervalId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (window as any).state = state;\n  }\n\n  const getElById = useHandler((id: ElementId): Element => {\n    const el = state.elements.find((el) => el.id === id);\n\n    if (!el) {\n      throw new Error('Element not found');\n    }\n\n    return el;\n  });\n\n  draw = useHandler(() => {\n    const ctx = getCanvasContext(canvasRef.current);\n\n    ctx.clearRect(0, 0, size.width, size.height);\n\n    ctx.save();\n    ctx.translate(size.width / 2 + pos.x + 0.5, size.height / 2 + pos.y + 0.5);\n\n    for (const element of state.elements) {\n      const { pos } = element;\n\n      if (element.id === hoverElement.target?.elId) {\n        ctx.save();\n        ctx.strokeStyle = '#ddf';\n        ctx.lineWidth = 3;\n        ctx.strokeRect(\n          pos.x - FOCUS_SIZE / 2,\n          pos.y - FOCUS_SIZE / 2,\n          FOCUS_SIZE,\n          FOCUS_SIZE,\n        );\n        ctx.restore();\n      } else if (element.id === focusElement.elId) {\n        ctx.save();\n        ctx.strokeStyle = '#ededf3';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(\n          pos.x - FOCUS_SIZE / 2,\n          pos.y - FOCUS_SIZE / 2,\n          FOCUS_SIZE,\n          FOCUS_SIZE,\n        );\n        ctx.restore();\n      }\n    }\n\n    for (const [p1, p2] of state.connections) {\n      const el1 = getElById(p1.elId);\n      const el2 = getElById(p2.elId);\n\n      const pin1 = elementsDescriptions[el1.type].pins[p1.pinIndex];\n      const pin2 = elementsDescriptions[el2.type].pins[p2.pinIndex];\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(\n        el1.pos.x - ICON_SIZE / 2 + pin1.pos.x * ICON_SIZE,\n        el1.pos.y - ICON_SIZE / 2 + pin1.pos.y * ICON_SIZE,\n      );\n      ctx.lineTo(\n        el2.pos.x - ICON_SIZE / 2 + pin2.pos.x * ICON_SIZE,\n        el2.pos.y - ICON_SIZE / 2 + pin2.pos.y * ICON_SIZE,\n      );\n      ctx.strokeStyle = '#333';\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    if (wireElement.source) {\n      const { elId, pinIndex } = wireElement.source;\n      const el = getElById(elId);\n\n      const { pos } = elementsDescriptions[el.type].pins[pinIndex];\n\n      const x0 = pos.x * ICON_SIZE + el.pos.x - ICON_SIZE / 2;\n      const y0 = pos.y * ICON_SIZE + el.pos.y - ICON_SIZE / 2;\n\n      const { x, y } = convertScreenCoordsToAppCoords(mousePos);\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x0, y0);\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = '#888';\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    for (const element of state.elements) {\n      const { type, pos } = element;\n\n      if (type === ElementType.INPUT || type === ElementType.OUTPUT) {\n        const char = getLiteralForSignal(\n          state.elements.filter((el) => el.type === type),\n          element,\n          type === ElementType.INPUT\n            ? options.isInputVector\n            : options.isOutputVector,\n        );\n\n        ctx.save();\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.font = '24px sans-serif';\n        if (type === ElementType.INPUT) {\n          ctx.fillText(char, pos.x, pos.y - 10);\n        } else {\n          ctx.fillText(char, pos.x + 6, pos.y);\n        }\n        ctx.restore();\n      } else {\n        const img = assets[type];\n\n        if (img) {\n          const x0 = pos.x - ICON_SIZE / 2;\n          const y0 = pos.y - ICON_SIZE / 2;\n\n          ctx.drawImage(img, x0, y0, ICON_SIZE, ICON_SIZE);\n        }\n      }\n\n      const { pins } = elementsDescriptions[type];\n      const activeTarget = hoverElement.target;\n      let i = 0;\n\n      for (const pin of pins) {\n        const isActive =\n          activeTarget &&\n          element.id === activeTarget.elId &&\n          activeTarget.activePin &&\n          activeTarget.activePin.index === i;\n\n        const isWire =\n          wireElement.source &&\n          wireElement.source.elId === element.id &&\n          wireElement.source.pinIndex === i;\n\n        ctx.beginPath();\n        ctx.arc(\n          pos.x + (pin.pos.x - 0.5) * ICON_SIZE,\n          pos.y + (pin.pos.y - 0.5) * ICON_SIZE,\n          isActive ? PIN_DOT_RADIUS + 1 : PIN_DOT_RADIUS,\n          0,\n          Math.PI * 2,\n        );\n        ctx.closePath();\n\n        if (isActive || isWire) {\n          ctx.save();\n          ctx.fillStyle = isWire ? '#d66' : '#66d';\n          ctx.fill();\n          ctx.restore();\n        } else {\n          ctx.save();\n          ctx.fillStyle = '#fff';\n          ctx.fill();\n          ctx.strokeStyle = '#448';\n          ctx.lineWidth = 2;\n          ctx.stroke();\n          ctx.restore();\n        }\n        i += 1;\n      }\n    }\n\n    ctx.restore();\n\n    let currentCursor: Cursor;\n\n    if (wireElement.source) {\n      currentCursor = 'pointer';\n    } else if (hoverElement.target?.activePin) {\n      currentCursor = 'pointer';\n    } else if (hoverElement.target) {\n      currentCursor = 'move';\n    } else if (mouseState.isDrag) {\n      currentCursor = 'grabbing';\n    }\n\n    if (currentCursor !== cursor) {\n      setCursor(currentCursor);\n    }\n  });\n\n  function checkHover(): boolean {\n    const { x, y } = convertScreenCoordsToAppCoords(mousePos);\n    const activeTarget = hoverElement.target;\n\n    for (const element of state.elements) {\n      const { pins } = elementsDescriptions[element.type];\n\n      const x0 = element.pos.x - ICON_SIZE / 2;\n      const y0 = element.pos.y - ICON_SIZE / 2;\n\n      for (const pin of pins) {\n        if (\n          (x0 + pin.pos.x * ICON_SIZE - x) ** 2 +\n            (y0 + pin.pos.y * ICON_SIZE - y) ** 2 <\n          (PIN_DOT_RADIUS + 4) ** 2\n        ) {\n          const pinIndex = pins.indexOf(pin);\n          const hoverTarget = hoverElement.target;\n\n          if (\n            !hoverTarget ||\n            hoverTarget.elId !== element.id ||\n            hoverTarget.activePin?.index !== pinIndex\n          ) {\n            hoverElement.target = {\n              elId: element.id,\n              activePin: {\n                index: pinIndex,\n              },\n            };\n            return true;\n          }\n          return false;\n        }\n      }\n    }\n\n    for (const element of state.elements) {\n      const x0 = element.pos.x - ICON_SIZE / 2;\n      const y0 = element.pos.y - ICON_SIZE / 2;\n\n      if (x > x0 && x < x0 + ICON_SIZE && y > y0 && y < y0 + ICON_SIZE) {\n        if (\n          !activeTarget ||\n          activeTarget.elId !== element.id ||\n          activeTarget.activePin\n        ) {\n          hoverElement.target = {\n            elId: element.id,\n            activePin: undefined,\n          };\n          return true;\n        }\n        return false;\n      }\n    }\n\n    if (hoverElement.target) {\n      hoverElement.target = undefined;\n      return true;\n    }\n\n    return false;\n  }\n\n  function updateSize() {\n    setTimeout(() => {\n      const app = canvasWrapperRef.current;\n      const canvas = canvasRef.current;\n\n      if (!app || !canvas) {\n        throw new Error();\n      }\n\n      size.width = app.clientWidth;\n      size.height = app.clientHeight;\n\n      canvas.width = size.width;\n      canvas.height = size.height;\n\n      draw();\n    }, 0);\n  }\n\n  function checkOverlap(point: Coords): boolean {\n    for (const { pos } of state.elements) {\n      if (\n        (pos.x - point.x) ** 2 + (pos.y - point.y) ** 2 <\n        (ICON_SIZE / 2) ** 2\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function addElement(type: ElementType) {\n    const pos = convertScreenCoordsToAppCoords({\n      x: size.width / 2,\n      y: size.height / 2,\n    });\n\n    while (checkOverlap(pos)) {\n      pos.x += ICON_SIZE + 20;\n    }\n\n    state.elements.push({\n      type,\n      id: getNextId(state),\n      pos,\n    });\n    draw();\n  }\n\n  function loadAssets() {\n    const loadImages = [\n      ElementType.PNP,\n      ElementType.NPN,\n      ElementType.POWER,\n      ElementType.GROUND,\n    ];\n\n    let remainLoad = loadImages.length;\n\n    function onLoad() {\n      remainLoad -= 1;\n\n      if (remainLoad === 0) {\n        draw();\n      }\n    }\n\n    for (const imgName of loadImages) {\n      const image = new Image();\n      image.src = `assets/${imgName}.png`;\n      image.addEventListener('load', onLoad);\n\n      assets[imgName] = image;\n    }\n  }\n\n  useEffect(() => {\n    updateSize();\n\n    window.addEventListener('resize', updateSize);\n\n    loadAssets();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useOnChange(draw, [options]);\n\n  function resetCursorState() {\n    let needRepaint = false;\n\n    if (mouseState.isMouseDown) {\n      mouseState.isMouseDown = false;\n    }\n\n    if (movingElement.target) {\n      movingElement.target = undefined;\n      needRepaint = true;\n    }\n\n    if (mouseState.isDrag) {\n      mouseState.isDrag = false;\n      needRepaint = true;\n    }\n\n    if (wireElement.source) {\n      wireElement.source = undefined;\n      needRepaint = true;\n    }\n\n    return needRepaint;\n  }\n\n  function startWiring({\n    elId,\n    pinIndex,\n  }: {\n    elId: ElementId;\n    pinIndex: number;\n  }) {\n    focusElement.elId = elId;\n    wireElement.source = {\n      elId,\n      pinIndex,\n    };\n    // state.connections = state.connections.filter(\n    //   ([p1, p2]) => p1.elId !== elId && p2.elId !== elId,\n    // );\n  }\n\n  const onMouseUp = useHandler((e?: MouseEvent) => {\n    if (e) {\n      e.preventDefault();\n\n      if (e.button !== 0) {\n        return;\n      }\n    }\n\n    let needRepaint = false;\n\n    mouseState.isMouseDown = false;\n\n    if (focusElement.elId && !wireElement.source && !movingElement.target) {\n      focusElement.elId = undefined;\n      needRepaint = true;\n    }\n\n    if (movingElement.target) {\n      movingElement.target = undefined;\n      needRepaint = true;\n    }\n\n    if (mouseState.isDrag) {\n      mouseState.isDrag = false;\n      needRepaint = true;\n    }\n\n    if (wireElement.source) {\n      const activeTarget = hoverElement.target;\n\n      if (\n        activeTarget &&\n        activeTarget.activePin &&\n        wireElement.source.elId !== activeTarget.elId\n      ) {\n        state.connections.push([\n          {\n            elId: activeTarget.elId,\n            pinIndex: activeTarget.activePin.index,\n          },\n          {\n            elId: wireElement.source.elId,\n            pinIndex: wireElement.source.pinIndex,\n          },\n        ]);\n      }\n\n      wireElement.source = undefined;\n      needRepaint = true;\n    } else if (!wireElement.source) {\n      const hoverTarget = hoverElement.target;\n\n      if (hoverTarget && hoverTarget.activePin) {\n        startWiring({\n          elId: hoverTarget.elId,\n          pinIndex: hoverTarget.activePin.index,\n        });\n        needRepaint = true;\n      }\n\n      if (hoverTarget && !hoverTarget.activePin) {\n        if (focusElement.elId !== hoverTarget.elId) {\n          focusElement.elId = hoverTarget.elId;\n          needRepaint = true;\n        }\n      }\n    }\n\n    if (needRepaint) {\n      draw();\n    }\n  });\n\n  return (\n    <main className={styles.app}>\n      <div ref={canvasWrapperRef} className={styles.canvasWrapper}>\n        <canvas\n          ref={canvasRef}\n          className={styles.canvas}\n          style={cursor ? { cursor } : undefined}\n          onClick={(e) => {\n            e.preventDefault();\n          }}\n          onMouseDown={(e) => {\n            e.preventDefault();\n\n            if (e.button !== 0) {\n              return;\n            }\n\n            if (mouseState.isMouseDown) {\n              onMouseUp();\n            }\n\n            mouseState.isMouseDown = true;\n          }}\n          onMouseMove={(e) => {\n            mousePos.x = e.clientX;\n            mousePos.y = e.clientY;\n\n            let needRepaint = false;\n\n            if (checkHover()) {\n              needRepaint = true;\n            }\n\n            const isMoving = Boolean(movingElement.target);\n            const hoverTarget = hoverElement.target;\n\n            if (mouseState.isMouseDown) {\n              if (\n                !isMoving &&\n                !wireElement.source &&\n                hoverTarget &&\n                hoverTarget.activePin\n              ) {\n                startWiring({\n                  elId: hoverTarget.elId,\n                  pinIndex: hoverTarget.activePin.index,\n                });\n                needRepaint = true;\n              }\n\n              if (!isMoving && wireElement.source) {\n                needRepaint = true;\n              }\n\n              if (!isMoving && !wireElement.source && hoverTarget) {\n                movingElement.target = {\n                  elId: hoverTarget.elId,\n                };\n                focusElement.elId = hoverTarget.elId;\n                needRepaint = true;\n              }\n\n              if (\n                !wireElement.source &&\n                !movingElement.target &&\n                !mouseState.isDrag\n              ) {\n                mouseState.isDrag = true;\n                needRepaint = true;\n              }\n\n              if (movingElement.target) {\n                const el = getElById(movingElement.target.elId);\n                el.pos.x += e.movementX;\n                el.pos.y += e.movementY;\n              } else if (!wireElement.source) {\n                pos.x += e.movementX;\n                pos.y += e.movementY;\n              }\n\n              needRepaint = true;\n            } else {\n              if (mouseState.isDrag) {\n                mouseState.isDrag = false;\n                needRepaint = true;\n              }\n            }\n\n            if (wireElement.source) {\n              needRepaint = true;\n            }\n\n            if (needRepaint) {\n              draw();\n            }\n          }}\n          onMouseUp={onMouseUp}\n          onMouseLeave={() => {\n            if (resetCursorState()) {\n              draw();\n            }\n          }}\n          onContextMenu={(e) => {\n            if (\n              hoverElement.target ||\n              wireElement.source ||\n              mouseState.isDrag\n            ) {\n              e.preventDefault();\n            }\n          }}\n        />\n      </div>\n      <div className={styles.panel}>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.POWER);\n          }}\n        >\n          DD\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.GROUND);\n          }}\n        >\n          GND\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.NPN);\n          }}\n        >\n          npn\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.PNP);\n          }}\n        >\n          pnp\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.INPUT);\n          }}\n        >\n          input\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.OUTPUT);\n          }}\n        >\n          output\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            addElement(ElementType.DOT);\n          }}\n        >\n          dot\n        </button>\n        <span className={styles.divider} />\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            loadGameState();\n          }}\n        >\n          Load\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            localStorage.setItem(\n              `sch_game_${gameId}`,\n              JSON.stringify({\n                pos,\n                elements: state.elements,\n                connections: state.connections,\n                options,\n              }),\n            );\n            // eslint-disable-next-line no-console\n            console.info('Saved');\n          }}\n        >\n          Save\n        </button>\n        <button\n          type=\"button\"\n          className={styles.button}\n          onClick={(e) => {\n            e.preventDefault();\n            clearState();\n            draw();\n          }}\n        >\n          Clear\n        </button>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\">\n          <button type=\"button\" className={styles.button}>\n            Exit\n          </button>\n        </a>\n      </div>\n      <div className={styles.info}>\n        <TruthTable\n          elements={state.elements}\n          options={options}\n          onOptionsChange={(update) =>\n            setOptions({\n              ...options,\n              ...update,\n            })\n          }\n        />\n        <SchemaErrors state={state} />\n        <span className={styles.space} />\n        <div className={styles.debugPanel}>\n          <div>elements: {state.elements.length}</div>\n          <div>connections: {state.connections.length}</div>\n          <div>el moving: {yesNo(movingElement.target)}</div>\n          <div>el in focus: {yesNo(focusElement.elId)}</div>\n          <div>el hover: {yesNo(hoverElement.target)}</div>\n          <div>pin hover: {yesNo(hoverElement.target?.activePin)}</div>\n          <div>wiring: {yesNo(wireElement.source)}</div>\n          <div>drag: {yesNo(mouseState.isDrag)}</div>\n          <div>mouse down: {yesNo(mouseState.isMouseDown)}</div>\n        </div>\n      </div>\n    </main>\n  );\n}\n","import { useCallback, useRef, useState } from 'react';\n\nexport function useForceUpdate() {\n  const incRef = useRef(0);\n  const [, setInc] = useState(incRef.current);\n\n  return useCallback(() => {\n    incRef.current += 1;\n    setInc(incRef.current);\n  }, []);\n}\n","export function getCanvasContext(\n  canvas: HTMLCanvasElement | null | undefined,\n): CanvasRenderingContext2D {\n  if (!canvas) {\n    throw new Error();\n  }\n\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    throw new Error();\n  }\n\n  return ctx;\n}\n","import { useMemo, useState } from 'react';\n\nimport { GameId } from 'common/types';\nimport { useOnChange } from 'hooks/useOnChange';\nimport { useWindowEvent } from 'hooks/useWindowEvent';\nimport { Emulator } from 'components/Emulator';\n\nimport styles from './App.module.scss';\n\nfunction getCurrentGameId(allowedIds: GameId[]): GameId | undefined {\n  const hash = (window.location.hash ?? '').trim().replace(/^#/, '');\n\n  if (hash) {\n    const match = hash.match(/^g(\\d+)$/);\n\n    if (match) {\n      const id = match[0] as GameId;\n\n      if (allowedIds.includes(id)) {\n        return id;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getNextGameId(currentGames: GameId[]): GameId {\n  const lastId = currentGames[currentGames.length - 1];\n\n  if (!lastId) {\n    return `g1`;\n  }\n\n  const match = lastId.match(/^g(\\d+)$/);\n\n  if (!match) {\n    throw new Error();\n  }\n\n  return `g${parseInt(match[1], 10) + 1}`;\n}\n\nexport function App() {\n  const savedGames = useMemo<GameId[]>(() => {\n    const json = localStorage.getItem('sch_games');\n    if (!json) {\n      return [];\n    }\n    return JSON.parse(json);\n  }, []);\n  const [currentGames, setCurrentGames] = useState(savedGames);\n\n  useOnChange(() => {\n    localStorage.setItem('sch_games', JSON.stringify(currentGames));\n  }, [currentGames]);\n\n  const [currentGameId, setCurrentGameId] = useState(\n    getCurrentGameId(currentGames),\n  );\n\n  useWindowEvent('hashchange', () => {\n    const gameId = getCurrentGameId(currentGames);\n\n    if (gameId !== currentGameId) {\n      setCurrentGameId(gameId);\n    }\n  });\n\n  if (currentGameId) {\n    return <Emulator key={currentGameId} gameId={currentGameId} />;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <h1 className={styles.title}>Schematic</h1>\n      <h2 className={styles.gamesTitle}>Current schemas:</h2>\n      <ul>\n        {currentGames.length ? (\n          currentGames.map((gameId) => (\n            <li key={gameId}>\n              <a href={`#${gameId}`}>{gameId}</a>{' '}\n              <button\n                type=\"button\"\n                className={styles.removeButton}\n                onClick={(e) => {\n                  e.preventDefault();\n\n                  // eslint-disable-next-line no-alert\n                  if (window.confirm('Are you sure?')) {\n                    setCurrentGames(currentGames.filter((id) => id !== gameId));\n                    localStorage.removeItem(`sch_game_${gameId}`);\n                  }\n                }}\n              >\n                x\n              </button>\n            </li>\n          ))\n        ) : (\n          <div>no saved schemas</div>\n        )}\n      </ul>\n      <button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          const newGameId = getNextGameId(currentGames);\n          setCurrentGames([...currentGames, newGameId]);\n\n          window.setTimeout(() => {\n            window.location.assign(`#${newGameId}`);\n          }, 0);\n        }}\n      >\n        New schema\n      </button>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { useHandler } from 'hooks/useHandler';\n\nexport function useWindowEvent(\n  eventName: string,\n  callback: (...args: unknown[]) => void,\n) {\n  const func = useHandler(callback);\n\n  useEffect(() => {\n    window.addEventListener(eventName, func, false);\n\n    return () => {\n      window.removeEventListener(eventName, func, false);\n    };\n  }, [eventName, func]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TruthTable_wrapper__23wrn\",\"options\":\"TruthTable_options__kzZt2\",\"option\":\"TruthTable_option__1Hqnt\"};"],"sourceRoot":""}